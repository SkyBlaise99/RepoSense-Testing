[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# RepoSense","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"[![Build Status](https://github.com/reposense/RepoSense/actions/workflows/integration.yml/badge.svg)](https://github.com/reposense/RepoSense/actions/workflows/integration.yml)","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"[![codecov.io](https://codecov.io/gh/reposense/RepoSense/branch/master/graphs/badge.svg?branch\u003dmaster)](http://codecov.io/github/reposense/RepoSense?branch\u003dmaster)","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"jamessspanggg"},"content":"[![Netlify Status](https://api.netlify.com/api/v1/badges/260983b3-589e-4619-a2e8-0bfb7a2b4422/deploy-status)](https://app.netlify.com/sites/reposense/deploys)","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"RepoSense is a contribution analysis tool for Git repositories. It is particularly useful for those who want a chronological visualisation of the code contributions and commits made to a group of repositories. Educators can use RepoSense to track the work done in class projects, while team leads may use it to oversee their project teams.","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"- **User documentation** i.e., if you are interested in using RepoSense","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"  - [**Product website**](https://reposense.org)","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"  - [**User guide**](https://reposense.org/ug/index.html)","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"  - [**About us**](https://reposense.org/about.html)","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"- **Developer documentation** i.e., if you are interested in contributing code to RepoSense","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"  - [Developer guide](https://reposense.github.io/RepoSense/dg/index.html)","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"  - [User Guide for the latest `master` (not yet released to users)](https://reposense.github.io/RepoSense)","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"---","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**: The web previews of RepoSense is powered by Netlify and Surge.","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"eugenepeh"},"content":"\u003ca href\u003d\"https://www.netlify.com\"\u003e","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"eugenepeh"},"content":"  \u003cimg src\u003d\"https://www.netlify.com/img/global/badges/netlify-color-bg.svg\"/\u003e","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"eugenepeh"},"content":"\u003c/a\u003e","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"jamessspanggg"},"content":"\u003ca href\u003d\"https://surge.sh\"\u003e","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"jamessspanggg"},"content":"  \u003cimg width\u003d\"55px\" src\u003d\"https://surge.sh/images/logos/svg/surge-logo.svg\"\u003e","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"jamessspanggg"},"content":"\u003c/a\u003e","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":4,"eugenepeh":5,"-":17}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"eugenepeh"},"content":"plugins {","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"eugenepeh"},"content":"    id \u0027checkstyle\u0027","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yamidark"},"content":"    id \u0027idea\u0027","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"    id \u0027com.liferay.node\u0027 version \u00277.2.18\u0027","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"    id \u0027com.github.psxpaul.execfork\u0027 version \u00270.2.0\u0027","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"    id \u0027com.palantir.git-version\u0027 version \u00270.13.0\u0027","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"OperatingSystem os \u003d DefaultNativePlatform.currentOperatingSystem;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"ongspxm"},"content":"mainClassName \u003d \u0027reposense.RepoSense\u0027","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"node.download \u003d false // The Liferay Node Gradle Plugin will use the system PATH to find the Node/npm executable.","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"yamidark"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_1_8","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"yamidark"},"content":"targetCompatibility \u003d JavaVersion.VERSION_1_8","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"repositories {","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"    mavenCentral()","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"configurations {","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"    systemtestImplementation.extendsFrom testImplementation","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"    systemtestRuntime.extendsFrom testRuntime","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"yamidark"},"content":"}","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"dependencies {","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.8.2\u0027","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"    implementation  group: \u0027com.google.code.gson\u0027 ,name: \u0027gson\u0027, version:\u00272.9.0\u0027","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"    implementation  group: \u0027net.freeutils\u0027, name: \u0027jlhttp\u0027, version: \u00272.6\u0027","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"    implementation  group: \u0027net.sourceforge.argparse4j\u0027, name: \u0027argparse4j\u0027, version: \u00270.9.0\u0027","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"    implementation  group: \u0027org.apache.ant\u0027, name: \u0027ant\u0027, version: \u00271.10.12\u0027","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"    implementation  group: \u0027org.apache.commons\u0027, name: \u0027commons-csv\u0027, version: \u00271.9.0\u0027","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"    implementation  group: \u0027org.fusesource.jansi\u0027, name: \u0027jansi\u0027, version: \u00272.4.0\u0027","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"yamidark"},"content":"}","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"yamidark"},"content":"sourceSets {","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"yamidark"},"content":"    systemtest {","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"yamidark"},"content":"        compileClasspath +\u003d main.output + test.output","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"yamidark"},"content":"        runtimeClasspath +\u003d main.output + test.output","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"yamidark"},"content":"        java.srcDir file(\u0027src/systemtest/java\u0027)","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"yamidark"},"content":"        resources.srcDir file(\u0027src/systemtest/resources\u0027)","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"yamidark"},"content":"}","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"def installFrontend \u003d tasks.register(\u0027installFrontend\u0027, com.liferay.gradle.plugins.node.tasks.ExecutePackageManagerTask) {","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"    workingDir \u0027frontend/\u0027","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"    args \u003d [\u0027ci\u0027]","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"def buildFrontend \u003d tasks.register(\u0027buildFrontend\u0027, com.liferay.gradle.plugins.node.tasks.ExecutePackageManagerTask) {","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"    dependsOn installFrontend","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"    workingDir \u0027frontend/\u0027","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"    args \u003d [\u0027run\u0027, \u0027devbuild\u0027]","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"def zipReport \u003d tasks.register(\u0027zipReport\u0027, Zip) {","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"    dependsOn buildFrontend","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"    from \u0027frontend/build/\u0027","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \u0027templateZip\u0027","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"    destinationDirectory \u003d file(\u0027src/main/resources\u0027)","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"def copyCypressConfig \u003d tasks.register(\u0027copyCypressConfig\u0027, Copy) {","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"    description \u0027Copies the config files used by the backend to generate the test report for Cypress testing into an isolated working directory\u0027","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"    from \u0027frontend/cypress/config\u0027","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"    into \u0027build/serveTestReport/exampleconfig\u0027","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"def copyMainClasses \u003d tasks.register(\u0027copyMainClasses\u0027, Copy) {","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"    description \u0027Copies the backend classes used to generate the test report for Cypress testing into an isolated working directory\u0027","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"    dependsOn classes","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"    from \u0027build/classes/java/main\u0027","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"    into \u0027build/serveTestReport/java/main\u0027","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"def compileJava \u003d tasks.compileJava","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"tasks.named(\"processSystemtestResources\").configure {","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"    duplicatesStrategy \u003d DuplicatesStrategy.INCLUDE","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"tasks.run.dependsOn(zipReport);","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"run {","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //the second arguments indicates the default value associated with the property.","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"    tasks.compileJava.mustRunAfter(zipReport)","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"    args System.getProperty(\u0027args\u0027, \u0027\u0027).split()","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"    systemProperty \"version\", getRepoSenseVersion()","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"checkstyle {","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00279.3\u0027","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"-"},"content":"    getConfigDirectory().set(file(\"$rootProject.projectDir/config/checkstyle\"))","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"idea {","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"-"},"content":"    module {","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"        sourceSets.systemtest.allSource.srcDirs.each { srcDir -\u003e module.testSourceDirs +\u003d srcDir }","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"-"},"content":"test {","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"-"},"content":"    environment(\"REPOSENSE_ENVIRONMENT\", \"TEST\")","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"-"},"content":"    testLogging {","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"        events \u0027passed\u0027, \u0027skipped\u0027, \u0027failed\u0027","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d true","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"-"},"content":"    doFirst {","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"-"},"content":"        deleteReposAddressDirectory()","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"-"},"content":"    doLast {","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"-"},"content":"        deleteReposAddressDirectory()","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"-"},"content":"tasks.shadowJar.dependsOn(zipReport);","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"eugenepeh"},"content":"shadowJar {","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"-"},"content":"    tasks.compileJava.mustRunAfter(zipReport)","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"-"},"content":"    tasks.processResources.mustRunAfter(zipReport)","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027RepoSense.jar\u0027","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"-"},"content":"    destinationDirectory \u003d file(\"${buildDir}/jar/\")","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"-"},"content":"    manifest {","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"-"},"content":"        attributes \u0027Implementation-Version\u0027: getRepoSenseVersion()","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"-"},"content":"tasks.register(\u0027lintFrontend\u0027, com.liferay.gradle.plugins.node.tasks.ExecutePackageManagerTask) {","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"-"},"content":"    dependsOn installFrontend","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"-"},"content":"    workingDir \u0027frontend/\u0027","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"-"},"content":"    args \u003d [\u0027run\u0027, \u0027lint\u0027]","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"-"},"content":"def checkstyleMain \u003d tasks.checkstyleMain","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"-"},"content":"def checkstyleTest \u003d tasks.checkstyleTest","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"-"},"content":"def checkstyleSystemtest \u003d tasks.checkstyleSystemtest","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"-"},"content":"tasks.register(\u0027checkstyleAll\u0027, Checkstyle) {","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"-"},"content":"    dependsOn checkstyleMain, checkstyleTest, checkstyleSystemtest","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"-"},"content":"    tasks.checkstyleTest.mustRunAfter(\u0027checkstyleMain\u0027)","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"-"},"content":"    tasks.checkstyleSystemtest.mustRunAfter(\u0027checkstyleTest\u0027)","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"-"},"content":"tasks.register(\u0027environmentalChecks\u0027, Exec) {","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"-"},"content":"    workingDir \u0027config/checks/\u0027","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"-"},"content":"    if (os.isWindows()){","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"-"},"content":"        commandLine \u0027cmd\u0027, \u0027/c\u0027, \u0027run-checks.bat\u0027","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"-"},"content":"    } else {","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"-"},"content":"        commandLine \u0027sh\u0027, \u0027./run-checks.sh\u0027","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"-"},"content":"tasks.register(\u0027systemtest\u0027, Test) {","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"yamidark"},"content":"    testClassesDirs \u003d sourceSets.systemtest.output.classesDirs","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"yamidark"},"content":"    classpath \u003d sourceSets.systemtest.runtimeClasspath","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"-"},"content":"    environment(\"REPOSENSE_ENVIRONMENT\", \"TEST\")","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"-"},"content":"    testLogging {","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"ongspxm"},"content":"        events \u0027passed\u0027, \u0027skipped\u0027, \u0027failed\u0027","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"eugenepeh"},"content":"        showStandardStreams \u003d true","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":179,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":180,"author":{"gitId":"-"},"content":"    doFirst {","isFullCredit":true},{"lineNumber":181,"author":{"gitId":"-"},"content":"        deleteReposAddressDirectory()","isFullCredit":true},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":183,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":184,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","isFullCredit":true},{"lineNumber":185,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":186,"author":{"gitId":"-"},"content":"    doLast {","isFullCredit":true},{"lineNumber":187,"author":{"gitId":"-"},"content":"        deleteReposAddressDirectory()","isFullCredit":true},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":190,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":191,"author":{"gitId":"-"},"content":"def serveTestReportInBackground \u003d tasks.register(\u0027serveTestReportInBackground\u0027, com.github.psxpaul.task.JavaExecFork) {","isFullCredit":true},{"lineNumber":192,"author":{"gitId":"-"},"content":"    description \u0027Creates a background server process for the test report that is to be used by Cypress\u0027","isFullCredit":true},{"lineNumber":193,"author":{"gitId":"-"},"content":"    dependsOn zipReport, compileJava, processResources, copyCypressConfig, copyMainClasses","isFullCredit":true},{"lineNumber":194,"author":{"gitId":"-"},"content":"    tasks.compileJava.mustRunAfter(zipReport)","isFullCredit":true},{"lineNumber":195,"author":{"gitId":"-"},"content":"    tasks.processResources.mustRunAfter(zipReport)","isFullCredit":true},{"lineNumber":196,"author":{"gitId":"-"},"content":"    workingDir \u003d \u0027build/serveTestReport\u0027","isFullCredit":true},{"lineNumber":197,"author":{"gitId":"yong24s"},"content":"    main \u003d mainClassName","isFullCredit":true},{"lineNumber":198,"author":{"gitId":"yong24s"},"content":"    classpath \u003d sourceSets.main.runtimeClasspath","isFullCredit":true},{"lineNumber":199,"author":{"gitId":"-"},"content":"    args \u003d [\u0027--config\u0027, \u0027./exampleconfig\u0027, \u0027--since\u0027, \u0027d1\u0027, \u0027--view\u0027]","isFullCredit":true},{"lineNumber":200,"author":{"gitId":"-"},"content":"    String versionJvmArgs \u003d \u0027-Dversion\u003d\u0027 + getRepoSenseVersion()","isFullCredit":true},{"lineNumber":201,"author":{"gitId":"-"},"content":"    jvmArgs \u003d [ versionJvmArgs ]","isFullCredit":true},{"lineNumber":202,"author":{"gitId":"-"},"content":"    killDescendants \u003d false // Kills descendants of started process using methods only found in Java 9 and beyond.","isFullCredit":true},{"lineNumber":203,"author":{"gitId":"-"},"content":"    // Above flag is set to true by default but is incompatible with Java 8. It should be removed from this file if we fully migrate to Java 11.","isFullCredit":true},{"lineNumber":204,"author":{"gitId":"yong24s"},"content":"    waitForPort \u003d 9000","isFullCredit":true},{"lineNumber":205,"author":{"gitId":"yong24s"},"content":"}","isFullCredit":true},{"lineNumber":206,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":207,"author":{"gitId":"-"},"content":"def installCypress \u003d tasks.register(\u0027installCypress\u0027, com.liferay.gradle.plugins.node.tasks.ExecutePackageManagerTask) {","isFullCredit":true},{"lineNumber":208,"author":{"gitId":"-"},"content":"    workingDir \u0027frontend/cypress/\u0027","isFullCredit":true},{"lineNumber":209,"author":{"gitId":"-"},"content":"    args \u003d [\u0027ci\u0027]","isFullCredit":true},{"lineNumber":210,"author":{"gitId":"yong24s"},"content":"}","isFullCredit":true},{"lineNumber":211,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":212,"author":{"gitId":"-"},"content":"tasks.register(\u0027cypress\u0027, com.liferay.gradle.plugins.node.tasks.ExecutePackageManagerTask) {","isFullCredit":true},{"lineNumber":213,"author":{"gitId":"-"},"content":"    dependsOn installCypress, serveTestReportInBackground","isFullCredit":true},{"lineNumber":214,"author":{"gitId":"-"},"content":"    tasks.serveTestReportInBackground.mustRunAfter(installCypress)","isFullCredit":true},{"lineNumber":215,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":216,"author":{"gitId":"yong24s"},"content":"    workingDir \u003d file(\u0027frontend/cypress/\u0027)","isFullCredit":true},{"lineNumber":217,"author":{"gitId":"yong24s"},"content":"    args \u003d [\"run-script\", \"debug\"]","isFullCredit":true},{"lineNumber":218,"author":{"gitId":"yong24s"},"content":"}","isFullCredit":true},{"lineNumber":219,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":220,"author":{"gitId":"-"},"content":"tasks.register(\u0027frontendTest\u0027, com.liferay.gradle.plugins.node.tasks.ExecutePackageManagerTask) {","isFullCredit":true},{"lineNumber":221,"author":{"gitId":"-"},"content":"    dependsOn installCypress, serveTestReportInBackground","isFullCredit":true},{"lineNumber":222,"author":{"gitId":"-"},"content":"    tasks.serveTestReportInBackground.mustRunAfter(installCypress)","isFullCredit":true},{"lineNumber":223,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":224,"author":{"gitId":"yong24s"},"content":"    workingDir \u003d file(\u0027frontend/cypress/\u0027)","isFullCredit":true},{"lineNumber":225,"author":{"gitId":"yong24s"},"content":"    args \u003d [\"run-script\", \"tests\"]","isFullCredit":true},{"lineNumber":226,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":227,"author":{"gitId":"yong24s"},"content":"    // Run tests in CI without slow motion","isFullCredit":true},{"lineNumber":228,"author":{"gitId":"yong24s"},"content":"    if (project.hasProperty(\u0027ci\u0027)) {","isFullCredit":true},{"lineNumber":229,"author":{"gitId":"yong24s"},"content":"        args \u003d [\"run-script\", \"ci\"]","isFullCredit":true},{"lineNumber":230,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":231,"author":{"gitId":"yong24s"},"content":"}","isFullCredit":true},{"lineNumber":232,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":233,"author":{"gitId":"-"},"content":"tasks.withType(Copy) {","isFullCredit":true},{"lineNumber":234,"author":{"gitId":"-"},"content":"    includeEmptyDirs \u003d true","isFullCredit":true},{"lineNumber":235,"author":{"gitId":"yamidark"},"content":"}","isFullCredit":true},{"lineNumber":236,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":237,"author":{"gitId":"-"},"content":"jacoco {","isFullCredit":true},{"lineNumber":238,"author":{"gitId":"-"},"content":"    toolVersion \u003d \"0.8.7\"","isFullCredit":true},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":240,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":241,"author":{"gitId":"-"},"content":"jacocoTestReport {","isFullCredit":true},{"lineNumber":242,"author":{"gitId":"-"},"content":"    reports {","isFullCredit":true},{"lineNumber":243,"author":{"gitId":"-"},"content":"        html.required \u003d true","isFullCredit":true},{"lineNumber":244,"author":{"gitId":"-"},"content":"        xml.required \u003d true","isFullCredit":true},{"lineNumber":245,"author":{"gitId":"-"},"content":"        csv.required \u003d false","isFullCredit":true},{"lineNumber":246,"author":{"gitId":"-"},"content":"        html.destination file(\"${buildDir}/jacocoHtml\")","isFullCredit":true},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":248,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":249,"author":{"gitId":"-"},"content":"    executionData systemtest, frontendTest","isFullCredit":true},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":251,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":252,"author":{"gitId":"-"},"content":"tasks.register(\u0027coverage\u0027, JacocoReport)","isFullCredit":true},{"lineNumber":253,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":254,"author":{"gitId":"-"},"content":"coverage.configure {","isFullCredit":true},{"lineNumber":255,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","isFullCredit":true},{"lineNumber":256,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","isFullCredit":true},{"lineNumber":257,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","isFullCredit":true},{"lineNumber":258,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":259,"author":{"gitId":"-"},"content":"    afterEvaluate {","isFullCredit":true},{"lineNumber":260,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","isFullCredit":true},{"lineNumber":261,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","isFullCredit":true},{"lineNumber":262,"author":{"gitId":"-"},"content":"        })","isFullCredit":true},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":264,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":265,"author":{"gitId":"-"},"content":"    reports {","isFullCredit":true},{"lineNumber":266,"author":{"gitId":"-"},"content":"        html.required \u003d true","isFullCredit":true},{"lineNumber":267,"author":{"gitId":"-"},"content":"        xml.required \u003d true","isFullCredit":true},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":269,"author":{"gitId":"yong24s"},"content":"}","isFullCredit":true},{"lineNumber":270,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":271,"author":{"gitId":"-"},"content":"String getRepoSenseVersion() {","isFullCredit":true},{"lineNumber":272,"author":{"gitId":"-"},"content":"    String repoSenseVersion \u003d project.property(\"version\")","isFullCredit":true},{"lineNumber":273,"author":{"gitId":"-"},"content":"    if (repoSenseVersion.equals(\"unspecified\")) {","isFullCredit":true},{"lineNumber":274,"author":{"gitId":"-"},"content":"        repoSenseVersion \u003d versionDetails().commitDistance \u003d\u003d 0 ? versionDetails().lastTag : versionDetails().gitHash","isFullCredit":true},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":276,"author":{"gitId":"-"},"content":"    return repoSenseVersion","isFullCredit":true},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":278,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":279,"author":{"gitId":"-"},"content":"def syncFrontendPublic \u003d tasks.register(\u0027syncFrontendPublic\u0027, Sync) {","isFullCredit":true},{"lineNumber":280,"author":{"gitId":"-"},"content":"    from \u0027reposense-report\u0027","isFullCredit":true},{"lineNumber":281,"author":{"gitId":"-"},"content":"    into \u0027frontend/public/\u0027","isFullCredit":true},{"lineNumber":282,"author":{"gitId":"-"},"content":"    include \u0027**/*.json\u0027","isFullCredit":true},{"lineNumber":283,"author":{"gitId":"-"},"content":"    includeEmptyDirs \u003d false","isFullCredit":true},{"lineNumber":284,"author":{"gitId":"-"},"content":"    preserve {","isFullCredit":true},{"lineNumber":285,"author":{"gitId":"-"},"content":"        include \u0027index.html\u0027","isFullCredit":true},{"lineNumber":286,"author":{"gitId":"-"},"content":"        include \u0027favicon.ico\u0027","isFullCredit":true},{"lineNumber":287,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":289,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":290,"author":{"gitId":"-"},"content":"def macHotReloadFrontend \u003d tasks.register(\u0027macHotReloadFrontend\u0027, Exec) {","isFullCredit":true},{"lineNumber":291,"author":{"gitId":"-"},"content":"    dependsOn installFrontend","isFullCredit":true},{"lineNumber":292,"author":{"gitId":"-"},"content":"    onlyIf {os.isMacOsX()}","isFullCredit":true},{"lineNumber":293,"author":{"gitId":"-"},"content":"    workingDir \u0027frontend/\u0027","isFullCredit":true},{"lineNumber":294,"author":{"gitId":"-"},"content":"    commandLine \u0027npm\u0027, \u0027run\u0027, \u0027serveOpen\u0027","isFullCredit":true},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":296,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":297,"author":{"gitId":"-"},"content":"def windowsHotReloadFrontend \u003d tasks.register(\u0027windowsHotReloadFrontend\u0027, Exec) {","isFullCredit":true},{"lineNumber":298,"author":{"gitId":"-"},"content":"    dependsOn installFrontend","isFullCredit":true},{"lineNumber":299,"author":{"gitId":"-"},"content":"    onlyIf {os.isWindows()}","isFullCredit":true},{"lineNumber":300,"author":{"gitId":"-"},"content":"    workingDir \u0027frontend/\u0027","isFullCredit":true},{"lineNumber":301,"author":{"gitId":"-"},"content":"    commandLine \u0027cmd\u0027,\u0027/c\u0027, \u0027START\u0027, \u0027\"hotreload RepoSense frontend\"\u0027, \u0027npm\u0027, \u0027run\u0027, \u0027serveOpen\u0027","isFullCredit":true},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":303,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":304,"author":{"gitId":"-"},"content":"def linuxHotReloadFrontend \u003d tasks.register(\u0027linuxHotReloadFrontend\u0027, Exec) {","isFullCredit":true},{"lineNumber":305,"author":{"gitId":"-"},"content":"    dependsOn installFrontend","isFullCredit":true},{"lineNumber":306,"author":{"gitId":"-"},"content":"    onlyIf {os.isLinux()}","isFullCredit":true},{"lineNumber":307,"author":{"gitId":"-"},"content":"    workingDir \u0027frontend/\u0027","isFullCredit":true},{"lineNumber":308,"author":{"gitId":"-"},"content":"    commandLine \u0027npm\u0027, \u0027run\u0027, \u0027serveOpen\u0027","isFullCredit":true},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":310,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":311,"author":{"gitId":"-"},"content":"tasks.register(\u0027hotReloadFrontend\u0027) {","isFullCredit":true},{"lineNumber":312,"author":{"gitId":"-"},"content":"    dependsOn syncFrontendPublic","isFullCredit":true},{"lineNumber":313,"author":{"gitId":"-"},"content":"    finalizedBy windowsHotReloadFrontend","isFullCredit":true},{"lineNumber":314,"author":{"gitId":"-"},"content":"    finalizedBy macHotReloadFrontend","isFullCredit":true},{"lineNumber":315,"author":{"gitId":"-"},"content":"    finalizedBy linuxHotReloadFrontend","isFullCredit":true},{"lineNumber":316,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":317,"author":{"gitId":"-"},"content":"// End of hot reload Tasks","isFullCredit":true},{"lineNumber":318,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":319,"author":{"gitId":"-"},"content":"void deleteReposAddressDirectory() {","isFullCredit":true},{"lineNumber":320,"author":{"gitId":"-"},"content":"    final String REPOS_ADDRESS \u003d \"repos\"","isFullCredit":true},{"lineNumber":321,"author":{"gitId":"-"},"content":"    def reposDirectory \u003d new File(REPOS_ADDRESS)","isFullCredit":true},{"lineNumber":322,"author":{"gitId":"-"},"content":"    reposDirectory.deleteDir()","isFullCredit":true},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":324,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":325,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027build\u0027, \u0027systemtest\u0027, \u0027frontendTest\u0027, \u0027coverage\u0027","isFullCredit":true}],"authorContributionMap":{"ongspxm":2,"yamidark":24,"yong24s":24,"eugenepeh":7,"-":268}},{"path":"docs/_markbind/variables.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_announcement\"\u003e\u003cmd\u003e:fas-bell:\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_book\"\u003e\u003cmd\u003e:fas-book:\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_calendar\"\u003e\u003cmd\u003e:fas-calendar-alt:\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_dislike\"\u003e\u003cmd\u003e:fas-thumbs-down:\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_example\"\u003e\u003cmd\u003e:fas-cube:\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_embedding\"\u003e\u003cmd\u003e:glyphicon-log-in:\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_exercise\"\u003e\u003cmd\u003e:fas-dumbbell:\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_extra\"\u003e\u003cspan class\u003d\u0027badge rounded-pill bg-secondary\u0027\u003e\u003cmd\u003e:fas-plus: extra\u003c/md\u003e\u003c/span\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_info\"\u003e\u003cmd\u003e:fas-info-circle:\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_like\"\u003e\u003cmd\u003e:fas-thumbs-up:\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_linux\"\u003e\u003cmd\u003e:fab-linux:\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_level_basic\"\u003e\u003cmd\u003e\u003cspan class\u003d\"badge rounded-pill bg-danger\"\u003e:far-star:\u003c/span\u003e\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_level_intermediate\"\u003e\u003cmd\u003e\u003cspan class\u003d\"badge rounded-pill bg-warning text-white\"\u003e:far-star::far-star:\u003c/span\u003e\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_level_advanced\"\u003e\u003cmd\u003e\u003cspan class\u003d\"badge rounded-pill bg-success\"\u003e:far-star::far-star::far-star:\u003c/span\u003e\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_important_big_red\"\u003e\u003cfont color\u003d\"red\"\u003e\u003cbig\u003e:glyphicon-exclamation-sign:\u003c/big\u003e\u003c/font\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_important\"\u003e\u003cmd\u003e:glyphicon-exclamation-sign:\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_new_window\"\u003e\u003cmd\u003e:glyphicon-new-window:\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_outcome\"\u003e\u003cmd\u003e:fas-trophy:\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_output\"\u003e\u003cmd\u003e:fas-arrow-down:\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_output_right\"\u003e\u003cmd\u003e:fas-arrow-right:\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_print\"\u003e\u003cmd\u003e:glyphicon-print:\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_prereq\"\u003e\u003cmd\u003e:glyphicon-education:\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_preview\"\u003e\u003cmd\u003e:glyphicon-eye-open:\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_pro_tip\"\u003e\u003cspan class\u003d\"badge rounded-pill bg-warning\"\u003e:fas-lightbulb: PRO TIP\u003c/span\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_Q\"\u003e\u003cmd\u003e:glyphicon-question-sign:\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_Q_A\"\u003e{{ icon_Q | safe }}:glyphicon-ok-sign:\u003c/span\u003e","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_resource\"\u003e\u003cmd\u003e:fas-paperclip:\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_terminal\"\u003e\u003csmal\u003e\u003cspan class\u003d\"badge bg-secondary\"\u003e\u0026gt;_\u003c/span\u003e\u003c/smal\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_text\"\u003e\u003cmd\u003e:far-file-alt:\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_tick\"\u003e\u003cmd\u003e:fas-check:\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_tip\"\u003e\u003cspan class\u003d\"badge rounded-pill bg-warning\"\u003e:fas-lightbulb:\u003c/span\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_tick_green\"\u003e\u003cspan style\u003d\"color:green\"\u003e{{ icon_tick | safe }}\u003c/span\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_todo\"\u003e\u003cmd\u003e:glyphicon-check:\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_slides\"\u003e\u003cmd\u003e:far-images:\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_video\"\u003e\u003cmd\u003e:glyphicon-facetime-video:\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_windows\"\u003e\u003cmd\u003e:fab-windows:\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_x\"\u003e\u003cmd\u003e:fas-times:\u003c/md\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_x_red\"\u003e\u003cspan style\u003d\"color:red\"\u003e{{ icon_x | safe }}\u003c/span\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"bad\"\u003e\u003cfont color\u003d\"red\"\u003e\u003cmd\u003e**{{ icon_dislike | safe }} Bad**\u003c/md\u003e\u003c/font\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"good\"\u003e\u003cfont color\u003d\"green\"\u003e\u003cmd\u003e**{{ icon_like | safe }} Good**\u003c/md\u003e\u003c/font\u003e\u003c/span\u003e","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"jamessspanggg"},"content":"\u003cvariable from\u003d\"variables.json\" /\u003e","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":2,"-":40}},{"path":"docs/about.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{% set title \u003d \"About us\" %}","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"jamessspanggg"},"content":"\u003cfrontmatter\u003e","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\"","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"jamessspanggg"},"content":"\u003c/frontmatter\u003e","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-3\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"RepoSense is a project based in the [National University of Singapore, School of Computing](http://www.comp.nus.edu.sg/), funded by a _Teaching Enhancement Grant_ from the [NUS Center for Development of Teaching and Learning](https://nus.edu.sg/cdtl).","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Current team","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"eugenepeh"},"content":"### [Damith C. Rajapakse](http://www.comp.nus.edu.sg/~damithch)","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"eugenepeh"},"content":"![](https://avatars.githubusercontent.com/u/1673303?s\u003d150\u0026v\u003d4)\u003cbr/\u003e","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"eugenepeh"},"content":"**Role**: Project Advisor","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"eugenepeh"},"content":"### [Wang Chao](https://github.com/fzdy1914)","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"eugenepeh"},"content":"![](https://avatars3.githubusercontent.com/u/35621726?s\u003d150\u0026v\u003d4)\u003cbr/\u003e","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"jamessspanggg"},"content":"**Role**: Project Lead [2021 Jan - ]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"jamessspanggg"},"content":"Maintainer [2020 May - 2021 Jan]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"jamessspanggg"},"content":"Committer [2019 May - 2020 May]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"eugenepeh"},"content":"Contributor [2018 Dec - 2019 May]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"### [Hsu Zhong Jun](https://github.com/dcshzj)","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"![](https://avatars.githubusercontent.com/u/27919917?s\u003d150\u0026v\u003d4)\u003cbr/\u003e","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"**Role**: Committer [2021 June - ]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"Contributor [2020 August - 2021 May]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"### [Chan Ger Hean](https://github.com/gerhean)","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Role**: Committer [2022 January - ]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"Contributor [2021 January - 2021 December]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"### [Huang Chengyu](https://github.com/HCY123902)","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"**Role**: Committer [2022 January - ]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"Contributor [2021 January - ]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"### [Chan Jun Da](https://github.com/chan-j-d)","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"**Role**: Contributor [2021 July - ]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"### [Tay Yi Hsuen](https://github.com/yhtMinceraft1010X)","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"**Role**: Contributor [2021 July - ]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"### [Gokul Rajiv](https://github.com/gok99)","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"**Role**: Contributor [2022 January - ]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"jamessspanggg"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"### [Zhou Jiahao](https://github.com/zhoukerrr)","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"**Role**: Contributor [2022 January - ]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"jamessspanggg"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"eugenepeh"},"content":"## Past Members","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"eugenepeh"},"content":"### [Ma Tanghao](https://github.com/harryggg)","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"eugenepeh"},"content":"Main developer for the initial version [2017 May - 2018 May]","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"### [Ong Shu Peng](https://github.com/ongspxm)","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"![](https://avatars0.githubusercontent.com/u/1430854?s\u003d150\u0026v\u003d4)\u003cbr/\u003e","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"**Role**: Area Lead for UI [2018 Dec - 2019 May]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"Committer [2018 Aug - 2018 Dec]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"Contributor [2018 May - 2018 Aug]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"### [Tan Jun An](https://github.com/yamidark)","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"![](https://avatars3.githubusercontent.com/u/18352498?s\u003d150\u0026v\u003d4)\u003cbr/\u003e","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"**Role**: Area Lead for Code Quality [2018 Aug - 2019 April]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"Committer [2018 May - 2018 Aug]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"jamessspanggg"},"content":"### [Teng Yong Hao](https://github.com/yong24s)","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"jamessspanggg"},"content":"![](https://avatars2.githubusercontent.com/u/2003406?s\u003d150\u0026v\u003d4)\u003cbr/\u003e","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"jamessspanggg"},"content":"**Role**:","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"jamessspanggg"},"content":"Mentor [2018 Dec - 2020 May]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"jamessspanggg"},"content":"Committer [2018 Aug - 2018 Dec]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"jamessspanggg"},"content":"Contributor [2018 May - 2018 Aug]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"jamessspanggg"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"-"},"content":"### [Peh Xian Bin, Eugene](https://github.com/eugenepeh)","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"![](https://avatars.githubusercontent.com/u/19277206?s\u003d150\u0026v\u003d4)\u003cbr/\u003e","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"**Role**: Maintainer [2020 May - 2021 Jan]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"Project Lead [2018 May - 2020 May]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"eugenepeh"},"content":"### [Aditya Agarwal](https://github.com/adityaa1998)","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"eugenepeh"},"content":"Contributor [2018 May - 2018 Aug]","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"eugenepeh"},"content":"### [Apoorva Ullas](https://github.com/apoorva17)","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"eugenepeh"},"content":"Contributor [2018 Aug - 2019 May]","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"### [Chelsey Ong Hee](https://github.com/chel-seyy)","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"eugenepeh"},"content":"Contributor [2018 Dec - 2019 May]","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"eugenepeh"},"content":"### [Gilbert Emerson](https://github.com/emer7)","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"eugenepeh"},"content":"Contributor [2018 Dec - 2019 May]","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"eugenepeh"},"content":"### [Teo Ming Yi](https://github.com/myteo)","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"eugenepeh"},"content":"Contributor [2018 Dec - 2019 May]","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"-"},"content":"### [Jin Minjia](https://github.com/bluein-green)","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"-"},"content":"**Role**: Contributor [2019 May - 2019 Aug]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"jamessspanggg"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"-"},"content":"### [James Pang Mun Wai](https://github.com/jamessspanggg)","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"-"},"content":"![](https://avatars1.githubusercontent.com/u/32864116?s\u003d150\u0026v\u003d4)\u003cbr/\u003e","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"-"},"content":"**Role**: Committer [2020 May - 2021 Jan]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"-"},"content":"Contributor [2019 May - 2020 May]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"-"},"content":"### [Lee Jin Yao](https://github.com/jinyao-lee)","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"jamessspanggg"},"content":"![](https://avatars3.githubusercontent.com/u/35756209?s\u003d150\u0026v\u003d4)\u003cbr/\u003e","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"jamessspanggg"},"content":"**Role**: Contributor [2019 May - 2020 May]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"jamessspanggg"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"jamessspanggg"},"content":"### [Chong Chee Yuan](https://github.com/ccyccyccy)","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"jamessspanggg"},"content":"**Role**: Contributor [2020 January - 2020 May]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"jamessspanggg"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"jamessspanggg"},"content":"### [Ni Tianzhen](https://github.com/niqiukun)","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"jamessspanggg"},"content":"**Role**: Contributor [2020 January - 2020 May]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"jamessspanggg"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"jamessspanggg"},"content":"### [Yash Chowdhary](https://github.com/yash-chowdhary)","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"jamessspanggg"},"content":"![](https://avatars2.githubusercontent.com/u/21968718?s\u003d150\u0026v\u003d4)\u003cbr/\u003e","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"jamessspanggg"},"content":"**Role**: Contributor [2020 January - 2020 May]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"-"},"content":"### [Liu Yiwen](https://github.com/0blivious)","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"-"},"content":"**Role**: Contributor [2019 August - 2021 May]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"-"},"content":"### [Tejas Bhuwania](https://github.com/Tejas2805)","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"-"},"content":"![](https://avatars2.githubusercontent.com/u/35946746?s\u003d150\u0026v\u003d4)\u003cbr/\u003e","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"-"},"content":"**Role**: Contributor [2019 August - 2021 August]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"-"},"content":"### [Anubhav](https://github.com/anubh-v)","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"-"},"content":"**Role**: Contributor [2019 September - 2020 August]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":179,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":180,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":181,"author":{"gitId":"-"},"content":"### [Ang Ze Yu](https://github.com/ang-zeyu)","isFullCredit":true},{"lineNumber":182,"author":{"gitId":"-"},"content":"**Role**: Contributor [2020 January - 2021 May]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":183,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":185,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":186,"author":{"gitId":"-"},"content":"### [Roland Yu Wenyang](https://github.com/rolandyuwy)","isFullCredit":true},{"lineNumber":187,"author":{"gitId":"-"},"content":"**Role**: Contributor [2021 January - 2021 March]\u003cbr/\u003e","isFullCredit":true},{"lineNumber":188,"author":{"gitId":"-"},"content":"","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":40,"eugenepeh":38,"-":110}},{"path":"docs/index.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{% set title \u003d \"Home\" %}","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"jamessspanggg"},"content":"\u003cfrontmatter\u003e","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\"","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"jamessspanggg"},"content":"\u003c/frontmatter\u003e","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"-"},"content":"{% from \u0027scripts/macros.njk\u0027 import show_sitenav_items, thumbnail with context %}","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003cheader\u003e","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"jumbotron jumbotron-fluid text-center\" style\u003d\"padding-top: inherit; padding-bottom: inherit\"\u003e","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"container\"\u003e","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003ch1 class\u003d\"display-3\"\u003eRepoSense\u003c/h1\u003e","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"lead\"\u003e","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"Visualize programmer activities across git repositories...","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cbr\u003e\u003cbr\u003e","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/reposenseOverview.png\" width\u003d\"909\" alt\u003d\"RepoSense overview\"/\u003e","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e\u003cbr\u003e","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003c/header\u003e","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"overview\"\u003e","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"**RepoSense can generate interactive visualizations of programmer activities, even across multiple repositories.** It\u0027s ideal for educators and managers to get insights into the programming activities of their mentees. The visualizations can be **easily shared** with others (e.g., as an online dashboard), and updating the visualizations periodically **can be automated**.","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"{% macro heading(icon, text) %}\u003ch4\u003e{{ thumbnail(icon) }} \u003cspan class\u003d\"lead font-weight-bold text-green\"\u003e{{ text }}\u003c/span\u003e\u003c/h4\u003e{% endmacro %}","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"Some example insights RepoSense can provide:","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"{{ heading(\":fas-code:\", \"Insights about the code\") }}","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"* Which part of the code was written by Tom? How many lines? How many files?","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"* Which test cases were written by Kim?","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Which commit messages were written by Serene?","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"{{ heading(\":fas-chart-pie:\", \"Insights about the type of work\") }}","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Which portion of Jacob\u0027s code is documentation?","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Who hasn\u0027t written any test code yet?","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Which project did Jolene contribute to in the last month?","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"{{ heading(\":fas-business-time:\", \"Insights about the timing of work\") }}","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Who is putting in the consistent effort?","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Who waits till the deadline to do the work?","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Who hasn\u0027t started any work yet?","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"{{ heading(\":fas-list-ol:\", \"Insights based on comparisons\") }}","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Which programmers/teams are falling behind?","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"* How does everyone compare in their front-end coding work over the past two weeks?","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Who are the top 10 code contributors?","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003c/span\u003e","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"jumbotron jumbotron-fluid pt-2\"\u003e","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"container\"\u003e","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"container pt-2\"\u003e","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"row\"\u003e","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"row\"\u003e","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-sm\"\u003e","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"[**SHOWCASE** of use cases](showcase.html)","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"[**ABOUT** us](about.html)","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"[**CONTACT** us](contact.html)","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"[**:fab-github: GitHub**](https://github.com/reposense/RepoSense)","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"----","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003csmall\u003e","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"This website was built using MarkBind.","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"[\u003cimg src\u003d\"https://markbind.org/images/logo-lightbackground.png\" width\u003d\"150\"\u003e](http://markbind.org)","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"Deploy previews are powered by Netlify and Surge.","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"[\u003cimg src\u003d\"https://www.netlify.com/img/global/badges/netlify-color-bg.svg\"/\u003e](https://www.netlify.com)","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"[\u003cimg width\u003d\"55px\" src\u003d\"https://surge.sh/images/logos/svg/surge-logo.svg\"\u003e](https://surge.sh)","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003c/small\u003e","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-sm\"\u003e","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"-"},"content":"****USER GUIDE****","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"-"},"content":"{% from \"_markbind/layouts/ug-sitenav.md\" import ug_sitenav_items %}","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"{{ show_sitenav_items(ug_sitenav_items, is_flat\u003dtrue) }}","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-sm\"\u003e","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"****DEVELOPER GUIDE****","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"-"},"content":"{% from \"_markbind/layouts/dg-sitenav.md\" import dg_sitenav_items %}","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"{{ show_sitenav_items(dg_sitenav_items, is_flat\u003dtrue) }}","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":10,"-":102}},{"path":"docs/ug/cli.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{% set title \u003d \"Appendix: CLI syntax reference\" %}","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cfrontmatter\u003e","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\"","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c/frontmatter\u003e","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-4\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"lead\"\u003e","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"The command `java -jar RepoSense.jar` takes several flags.","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cbox\u003e","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Examples**:","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"An example of a command using most parameters:\u003cbr\u003e","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"`java -jar RepoSense.jar --repos https://github.com/reposense/RepoSense.git --output ./report_folder --since 31/1/2017 --until 31/12/2018 --formats java adoc xml --view --ignore-standalone-config --last-modified-date --timezone UTC+08 --find-previous-authors`","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"Same command as above but using most parameters in alias format:\u003cbr\u003e","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"`java -jar RepoSense.jar -r https://github.com/reposense/RepoSense.git -o ./report_folder -s 31/1/2017 -u 31/12/2018 -f java adoc xml -v -i -l -t UTC+08 -F`","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"The section below provides explanations for each of the flags.","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c!-- --------------------------◘---------------------------------------------------------------------------- --\u003e","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"### `--assets`, `-a`","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"section-assets\"\u003e","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"**`--assets ASSETS_DIRECTORY`**: Specifies where to place assets for report generation.","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"* Parameter: `ASSETS_DIRECTORY` The directory containing the assets files. A `favicon.ico` file can be placed here to customize the favicon of the dashboard.","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"* Alias: `-a`","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Example: `--assets ./assets` or `-a ./assets`","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"* If `--assets` is not specified, RepoSense looks for assets in the `./assets` directory.","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c!-- --------------------------◘---------------------------------------------------------------------------- --\u003e","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"### `--config`, `-c`","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"section-config\"\u003e","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"**`--config CONFIG_DIRECTORY`**: Specifies that config files located in `CONFIG_DIRECTORY` should be used to customize the report.","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Parameter: `CONFIG_DIRECTORY` The directory containing the config files. Should contain a `repo-config.csv` file. Optionally, can contain an `author-config.csv` file or/and a `group-config.csv` file or/and a `report-config.json` file.","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Alias: `-c`","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Example: `java -jar RepoSense.jar --config  ./config`","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Cannot be used with `--repos`. The `--repos` flag will take precedence over this flag.","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"* If both `--repos` and `--config` are not specified, RepoSense looks for config files in the `./config` directory.","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Config files must follow [this](./configFiles.html) format.","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"### `--formats`, `-f`","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"**`--formats LIST_OF_FORMATS`**: Specifies which file extensions to be included in the analysis.","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Parameter: `LIST_OF_FORMATS` A space-separated list of file extensions that should be included in the analysis.\u003cbr\u003e","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"  Default: all file formats","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"* Alias: `-f`","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Example:`--formats css fxml gradle` or `-f css fxml gradle`","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"Binary file formats, such as `jpg`, `png`,`exe`,`zip`, `rar`, `docx`, and `pptx`, all will be labelled as the file type `binary` in the generated report.","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"### `--find-previous-authors`, `-F`","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"**`--find-previous-authors`**: Utilizes Git blame\u0027s ignore revisions functionality, RepoSense will attempt to blame the line changes caused by commits in the ignore commit list to the previous authors who altered those lines (if available).","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"* Default: RepoSense will assume that no authors are responsible for the code changes in the lines altered by commits in the ignore commit list.","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"* Alias: `-F` (uppercase F)","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"* Example:`--find-previous-authors` or `-F`","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"* This flag only works on **git `2.23`** or later.","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"* If an earlier version of **git** is used, RepoSense can still run but this flag will be ignored.","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"-"},"content":"### `--help`, `-h`","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"**`--help`**: Shows the help message.","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"* Alias: `-h`","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"Cannot be used with any other flags. This flag takes precedence over all other flags.","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"### `--ignore-standalone-config`, `-i`","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"**`--ignore-standalone-config`**: Specifies that the standalone config file in the repo should be ignored.","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"* Default: the standalone config file is not ignored","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"-"},"content":"* Alias: `-i`","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"-"},"content":"* Example:`--ignore-standalone-config` or `-i`","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"-"},"content":"This flag overrides the `Ignore standalone config` field in the CSV config file.","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"-"},"content":"### `--ignore-filesize-limit`, `-I`","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"-"},"content":"**`--ignore-filesize-limit`**: Specifies that the file size limit (both default and user-defined) should be ignored during the analysis.","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"-"},"content":"* Default: the file size limit is not ignored","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"* Alias: `-I`","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"-"},"content":"* Example:`--ignore-filesize-limit` or `-I`","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"-"},"content":"All files are subject to a default file size limit or a custom size limit set by the user. Most files should not be","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"-"},"content":"affected by the default size limit. This flag can be useful for including files in your report that are affected by","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"-"},"content":"the size limit. Note that this flag may result in large report sizes and/or slower report generation.","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"-"},"content":"This flag overrides the `Ignore file size limit` field in the CSV config file.","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"jamessspanggg"},"content":"### `--last-modified-date`, `-l`","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"-"},"content":"**`--last-modified-date`**: Specifies that the last modified date of each line of code should be added to `authorship.json`.","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"jamessspanggg"},"content":"* Default: the last modified date of each line of code will not be added to `authorship.json`","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"jamessspanggg"},"content":"* Alias: `-l` (lowercase L)","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"jamessspanggg"},"content":"* Example:`--last-modified-date` or `-l`","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"-"},"content":"* Cannot be used with `--shallow-cloning`. This may result in an incorrect last modified date.","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"-"},"content":"* The last modified dates will be in the same timezone specified with the `--timezone` flag.","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"jamessspanggg"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"-"},"content":"### `--output`, `-o`","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"-"},"content":"**`--output OUTPUT_DIRECTORY`**: Indicates where to save the report generated.","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"-"},"content":"* Parameter: `OUTPUT_DIRECTORY` The location for the generated `reposense-report` folder.\u003cbr\u003e","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"-"},"content":"  Default: current directory","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"-"},"content":"* Alias: `-o`","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"-"},"content":"* Example: `--output ./foo` or `-o ./foo` (the report will be in the `./foo/reposense-report` folder)","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"-"},"content":"### `--period`, `-p`","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"-"},"content":"**`--period PERIOD`**: Specifies the period of analysis window.","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"-"},"content":"* Parameter: `PERIOD` The period of analysis window, in the format `nd` (for n days) or `nw` (for n weeks). It is used to calculate end date if only start date is specified, or calculate end date if only start date is specified.","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"-"},"content":"* Alias: `-p`","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"-"},"content":"* Example: `--period 30d` or `--period 4w`","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"-"},"content":"* If both start date and end date are not specified, the date of generating the report will be taken as the end date.","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"-"},"content":"* May analyze the incorrect date range if used with `--since d1`. The program will throw a warning.","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"-"},"content":"* Cannot be used with both `--since` and `--until`. The program will throw an exception.","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":true},{"lineNumber":179,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":180,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":181,"author":{"gitId":"-"},"content":"### `--repo`, `--repos`, `-r`","isFullCredit":true},{"lineNumber":182,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":183,"author":{"gitId":"-"},"content":"**`--repo REPO_LOCATION`**: Specifies which repositories to analyze.","isFullCredit":true},{"lineNumber":184,"author":{"gitId":"-"},"content":"* Parameter: `REPO_LOCATION` A list of URLs or the disk location of the git repositories to analyze, separated by spaces.","isFullCredit":true},{"lineNumber":185,"author":{"gitId":"-"},"content":"* Alias: `-r`","isFullCredit":true},{"lineNumber":186,"author":{"gitId":"-"},"content":"* Examples:","isFullCredit":true},{"lineNumber":187,"author":{"gitId":"-"},"content":"  * `--repos https://github.com/reposense/RepoSense.git`","isFullCredit":true},{"lineNumber":188,"author":{"gitId":"-"},"content":"  * `--repo https://github.com/reposense/RepoSense.git c:/myRepose/foo/bar`: analyzes the two specified repos (one remote, one local) and generates one report containing details of both.","isFullCredit":true},{"lineNumber":189,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":190,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":true},{"lineNumber":191,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":192,"author":{"gitId":"-"},"content":"Cannot be used with `--config`. This flag takes precedence over `--config`.","isFullCredit":true},{"lineNumber":193,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":true},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":195,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":196,"author":{"gitId":"-"},"content":"### `--shallow-cloning`, `-S`","isFullCredit":true},{"lineNumber":197,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":198,"author":{"gitId":"-"},"content":"**`--shallow-cloning`**: Clones repositories using Git\u0027s shallow cloning functionality, which can significantly reduce the time taken to clone large repositories. However, the flag should not be used for smaller repositories where the `.git` file is smaller than 500 MB, as it would create overhead.","isFullCredit":true},{"lineNumber":199,"author":{"gitId":"-"},"content":"* Default: RepoSense does not clone repositories using Git\u0027s shallow cloning functionality.","isFullCredit":true},{"lineNumber":200,"author":{"gitId":"-"},"content":"* Alias: `-S` (uppercase S)","isFullCredit":true},{"lineNumber":201,"author":{"gitId":"-"},"content":"* Example:`--shallow-cloning` or `-S`","isFullCredit":true},{"lineNumber":202,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":true},{"lineNumber":204,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":205,"author":{"gitId":"-"},"content":"Cannot be used with `--last-modified-date`. This may result in an incorrect last modified date.","isFullCredit":true},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":true},{"lineNumber":207,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":209,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":210,"author":{"gitId":"-"},"content":"### `--since`, `-s`","isFullCredit":true},{"lineNumber":211,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":212,"author":{"gitId":"-"},"content":"**`--since START_DATE`**: Specifies the start date for the period to be analyzed.","isFullCredit":true},{"lineNumber":213,"author":{"gitId":"-"},"content":"* Parameter: `START_DATE` The first day of the period to be analyzed, in the format `DD/MM/YYYY`.\u003cbr\u003e","isFullCredit":true},{"lineNumber":214,"author":{"gitId":"-"},"content":"  Default: one month before the current date","isFullCredit":true},{"lineNumber":215,"author":{"gitId":"-"},"content":"* Alias: `-s`","isFullCredit":true},{"lineNumber":216,"author":{"gitId":"-"},"content":"* Example:`--since 21/10/2017` or `-s 21/10/2017`","isFullCredit":true},{"lineNumber":217,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":true},{"lineNumber":219,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":220,"author":{"gitId":"-"},"content":"* If the start date is not specified, only commits made one month before the end date (if specified) or the date of generating the report, will be captured and analyzed.","isFullCredit":true},{"lineNumber":221,"author":{"gitId":"-"},"content":"* If `d1` is specified as the start date (`--since d1` or `-s d1`), then the program will search for the earliest commit date of all repositories and use that as the start date.","isFullCredit":true},{"lineNumber":222,"author":{"gitId":"-"},"content":"* If `d1` is specified together with `--period`, then the program will warn that the date range being analyzed may be incorrect.","isFullCredit":true},{"lineNumber":223,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":true},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":225,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":226,"author":{"gitId":"-"},"content":"### `--timezone`, `-t`","isFullCredit":true},{"lineNumber":227,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":228,"author":{"gitId":"-"},"content":"**`--timezone ZONE_ID`**: Indicates the timezone to be used for the analysis.","isFullCredit":true},{"lineNumber":229,"author":{"gitId":"-"},"content":"* Parameter: `ZONE_ID` The timezone in the format `ZONE_ID[±hh[mm]]`.\u003cbr\u003e","isFullCredit":true},{"lineNumber":230,"author":{"gitId":"-"},"content":"  Default: system\u0027s default timezone","isFullCredit":true},{"lineNumber":231,"author":{"gitId":"-"},"content":"* Alias: `-t`","isFullCredit":true},{"lineNumber":232,"author":{"gitId":"-"},"content":"* Example:`--timezone UTC+08` or `-t UTC-1030`","isFullCredit":true},{"lineNumber":233,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":234,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":235,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":236,"author":{"gitId":"-"},"content":"### `--until`, `-u`","isFullCredit":true},{"lineNumber":237,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":238,"author":{"gitId":"-"},"content":"**`--until END_DATE`**: Specifies the end date of the analysis period.","isFullCredit":true},{"lineNumber":239,"author":{"gitId":"-"},"content":"* Parameter: `END_DATE` The last date of the period to be analyzed, in the format `DD/MM/YYYY`.\u003cbr\u003e","isFullCredit":true},{"lineNumber":240,"author":{"gitId":"-"},"content":"  Default: current date","isFullCredit":true},{"lineNumber":241,"author":{"gitId":"-"},"content":"* Alias: `-u`","isFullCredit":true},{"lineNumber":242,"author":{"gitId":"-"},"content":"* Example:`--until 21/10/2017` or `-u 21/10/2017`","isFullCredit":true},{"lineNumber":243,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":244,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":true},{"lineNumber":245,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":246,"author":{"gitId":"-"},"content":"Note: If the end date is not specified, the date of generating the report will be taken as the end date.","isFullCredit":true},{"lineNumber":247,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":true},{"lineNumber":248,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":249,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":250,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":251,"author":{"gitId":"-"},"content":"### `--version`, `-V`","isFullCredit":true},{"lineNumber":252,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":253,"author":{"gitId":"-"},"content":"**`--version`**: Shows the version of RepoSense.","isFullCredit":true},{"lineNumber":254,"author":{"gitId":"-"},"content":"* Alias: `-V` (upper case)","isFullCredit":true},{"lineNumber":255,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":256,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":true},{"lineNumber":257,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":258,"author":{"gitId":"-"},"content":"Cannot be used with any other flags. This flag takes precedence over all other flags other than `--help`.","isFullCredit":true},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":true},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e","isFullCredit":true},{"lineNumber":261,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":262,"author":{"gitId":"-"},"content":"### `--view`, `-v`","isFullCredit":true},{"lineNumber":263,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":264,"author":{"gitId":"-"},"content":"**`--view [REPORT_FOLDER]`**: Specifies that the report should be opened in the default browser.","isFullCredit":true},{"lineNumber":265,"author":{"gitId":"-"},"content":"* Parameter: `REPORT_FOLDER` Optional. If specified, no analysis will be performed and the report specified by the argument will be opened.\u003cbr\u003e","isFullCredit":true},{"lineNumber":266,"author":{"gitId":"-"},"content":"  Default: `./reposense-report`","isFullCredit":true},{"lineNumber":267,"author":{"gitId":"-"},"content":"* Alias: `-v`","isFullCredit":true},{"lineNumber":268,"author":{"gitId":"-"},"content":"* Example:`--view` or `-v`","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":9,"-":259}},{"path":"frontend/cypress/tests/chartView/chartView_filterBreakdown.cy.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"jamessspanggg"},"content":"describe(\u0027filter breakdown\u0027, () \u003d\u003e {","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"jamessspanggg"},"content":"  it(\u0027check breakdown by file type should show file types\u0027, () \u003d\u003e {","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary label.filter-breakdown input:visible\u0027)","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.visible\u0027)","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"jamessspanggg"},"content":"      .check()","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.checked\u0027);","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"jamessspanggg"},"content":"    // should show file type checkboxes","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary div.fileTypes\u0027)","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.visible\u0027);","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"jamessspanggg"},"content":"    // should show file type legends","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary-charts div.summary-charts__fileType--breakdown\u0027)","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.visible\u0027);","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"jamessspanggg"},"content":"  });","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"  it(\u0027check, uncheck and recheck breakdown by file type should check all file types\u0027, () \u003d\u003e {","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary label.filter-breakdown input:visible\u0027)","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"      .check()","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"      .should(\u0027be.checked\u0027);","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // uncheck all file types","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary div.fileTypes input:visible[id\u003d\"all\"]\u0027)","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"      .uncheck()","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"      .should(\u0027not.be.checked\u0027);","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"    cy.contains(\u0027breakdown by file type\u0027).scrollIntoView();","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"    // uncheck and recheck breakdown by file type","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary label.filter-breakdown input:visible\u0027)","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"      .uncheck()","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"      .should(\u0027not.be.checked\u0027)","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"      .check()","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"      .should(\u0027be.checked\u0027);","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary div.fileTypes input:visible[id\u003d\"all\"]\u0027)","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"      .should(\u0027be.checked\u0027);","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"  });","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"jamessspanggg"},"content":"  it(\u0027uncheck all file types should show no file types\u0027, () \u003d\u003e {","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary label.filter-breakdown input:visible\u0027)","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.visible\u0027)","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"jamessspanggg"},"content":"      .check()","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.checked\u0027);","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"jamessspanggg"},"content":"    // uncheck all file types","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary div.fileTypes input:visible[id\u003d\"all\"]\u0027)","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"jamessspanggg"},"content":"      .uncheck()","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027not.be.checked\u0027);","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"jamessspanggg"},"content":"    // should not show file type legends","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary-charts div.summary-charts__fileType--breakdown\u0027)","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027not.be.visible\u0027);","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"jamessspanggg"},"content":"  });","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"jamessspanggg"},"content":"  it(\u0027uncheck file type should uncheck all option and not show legend\u0027, () \u003d\u003e {","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary label.filter-breakdown input:visible\u0027)","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.visible\u0027)","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"jamessspanggg"},"content":"      .check()","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.checked\u0027);","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"jamessspanggg"},"content":"    // uncheck gradle file type","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary div.fileTypes input[id\u003d\"gradle\"]\u0027)","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"jamessspanggg"},"content":"      .uncheck()","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027not.be.checked\u0027);","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"jamessspanggg"},"content":"    // should not show gradle file type legend","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary-charts \u003e div \u003e div.summary-charts__fileType--breakdown span\u0027)","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027not.contain.text\u0027, \u0027gradle\u0027);","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"jamessspanggg"},"content":"    // all option should be unchecked","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary div.fileTypes input[id\u003d\"all\"]\u0027)","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027not.be.checked\u0027);","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"jamessspanggg"},"content":"  });","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"jamessspanggg"},"content":"});","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":52,"-":25}},{"path":"frontend/cypress/tests/chartView/chartView_mergeGroup.cy.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"jamessspanggg"},"content":"describe(\u0027merge group\u0027, () \u003d\u003e {","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"jamessspanggg"},"content":"  it(\u0027check and uncheck merge group when group by repos\u0027, () \u003d\u003e {","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027div.mui-select.grouping \u003e select:visible\u0027)","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"jamessspanggg"},"content":"      .select(\u0027groupByRepos\u0027);","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input:visible\u0027)","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.visible\u0027)","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"jamessspanggg"},"content":"      .check()","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.checked\u0027);","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"jamessspanggg"},"content":"    // after checking merge group, only one merged repo group will show","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary-charts\u0027).find(\u0027.summary-chart\u0027)","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027have.length\u0027, 1);","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input:visible\u0027)","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.visible\u0027)","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"jamessspanggg"},"content":"      .uncheck()","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027not.be.checked\u0027);","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"jamessspanggg"},"content":"    // after un-checking merge group, all 5 summary charts will show","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary-charts\u0027).find(\u0027.summary-chart\u0027)","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027have.length\u0027, 5);","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"jamessspanggg"},"content":"  });","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"jamessspanggg"},"content":"  it(\u0027check and uncheck merge group when group by authors\u0027, () \u003d\u003e {","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027div.mui-select.grouping \u003e select:visible\u0027)","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"jamessspanggg"},"content":"      .select(\u0027groupByAuthors\u0027);","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input:visible\u0027)","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.visible\u0027)","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"jamessspanggg"},"content":"      .check()","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.checked\u0027);","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"jamessspanggg"},"content":"    // after checking merge group, 5 merged author groups will show","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary-charts\u0027).find(\u0027.summary-chart\u0027)","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027have.length\u0027, 5);","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input:visible\u0027)","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"jamessspanggg"},"content":"      .first()","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.visible\u0027)","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"jamessspanggg"},"content":"      .uncheck()","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027not.be.checked\u0027);","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"jamessspanggg"},"content":"    // after un-checking merge group, all 5 summary charts will show","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary-charts\u0027).find(\u0027.summary-chart\u0027)","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027have.length\u0027, 5);","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"jamessspanggg"},"content":"  });","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"jamessspanggg"},"content":"  it(\u0027merge group option should be disabled when group by none\u0027, () \u003d\u003e {","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027div.mui-select.grouping \u003e select:visible\u0027)","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"jamessspanggg"},"content":"      .select(\u0027groupByNone\u0027);","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input:visible\u0027)","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.visible\u0027)","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.disabled\u0027);","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"jamessspanggg"},"content":"  });","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"  it(\u0027should have the correct number of merge group contribution bars and correct length\u0027, () \u003d\u003e {","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"    // Assumption: The number of merge group contribution bars is 3 and the width of the third bar is 50%.","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input:visible\u0027)","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"      .check()","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"      .should(\u0027be.checked\u0027);","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"    // get the three chart bars and assert they have the correct initial widths","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"    cy.get(\u0027.stacked-bar__contrib--bar\u0027)","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"      .should(\u0027have.length\u0027, 3)","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"      .then(($bars) \u003d\u003e {","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // calculate the percentage of the width relative to the parent container","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"        const parentWidth \u003d $bars.eq(0).parent().width();","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"        const width1 \u003d (parseFloat(window.getComputedStyle($bars[0]).width) / parentWidth) * 100;","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"        const width2 \u003d (parseFloat(window.getComputedStyle($bars[1]).width) / parentWidth) * 100;","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"        const width3 \u003d (parseFloat(window.getComputedStyle($bars[2]).width) / parentWidth) * 100;","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // assert that the widths are close enough to 100% and 50%","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"        expect(width1).to.be.closeTo(100, 1);","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"        expect(width2).to.be.closeTo(100, 1);","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"        expect(width3).to.be.closeTo(50, 1);","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"      });","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"  });","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"  it(\u0027merge group contribution bars should have correct width after reload\u0027, () \u003d\u003e {","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input:visible\u0027)","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"      .check()","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"      .should(\u0027be.checked\u0027);","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"    const initialWidths \u003d [];","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"    // Store the initial widths of the contribution bars","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"-"},"content":"    cy.get(\u0027.stacked-bar__contrib--bar\u0027)","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"      .each(($bar) \u003d\u003e {","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"-"},"content":"        const width \u003d window.getComputedStyle($bar[0]).width;","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"        initialWidths.push(width);","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"-"},"content":"      })","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"      .then(() \u003d\u003e {","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Reload the page and wait for the loading div to disappear","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"        cy.reload();","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"-"},"content":"        cy.get(\u0027.overlay-loader\u0027).should(\u0027not.be.visible\u0027);","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // Get the contribution bars again and compare their widths with the initial widths","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"        cy.get(\u0027.stacked-bar__contrib--bar\u0027)","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"-"},"content":"          .should(\u0027have.length\u0027, initialWidths.length)","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"          .each(($bar, index) \u003d\u003e {","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"            const width \u003d window.getComputedStyle($bar[0]).width;","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"            expect(width).to.equal(initialWidths[index]);","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"-"},"content":"          });","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"      });","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"  });","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"jamessspanggg"},"content":"});","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":57,"-":53}},{"path":"frontend/cypress/tests/chartView/chartView_reload.cy.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"jamessspanggg"},"content":"describe(\u0027reload page\u0027, () \u003d\u003e {","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"jamessspanggg"},"content":"  it(\u0027reload page should restore all controls\u0027, () \u003d\u003e {","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"jamessspanggg"},"content":"    // search","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027div.mui-textfield.search_box \u003e input:visible\u0027)","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.visible\u0027)","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"jamessspanggg"},"content":"      .type(\u0027eugene\u0027);","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"jamessspanggg"},"content":"    // group by","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027div.mui-select.grouping \u003e select:visible\u0027)","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"jamessspanggg"},"content":"      .select(\u0027groupByAuthors\u0027);","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"jamessspanggg"},"content":"    // sort groups by","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027div.mui-select.sort-group \u003e select:visible\u0027)","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"jamessspanggg"},"content":"      .select(\u0027↓ contribution\u0027);","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"jamessspanggg"},"content":"    // sort within groups by","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027div.mui-select.sort-within-group \u003e select:visible\u0027)","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"jamessspanggg"},"content":"      .select(\u0027↓ contribution\u0027);","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"jamessspanggg"},"content":"    // granularity","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027div.mui-select.granularity \u003e select:visible\u0027)","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"jamessspanggg"},"content":"      .select(\u0027week\u0027);","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"jamessspanggg"},"content":"    // since date","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027input[name\u003d\"since\"]:visible\u0027)","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"jamessspanggg"},"content":"      .type(\u00272018-06-10\u0027);","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"jamessspanggg"},"content":"    // until date","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027input[name\u003d\"until\"]:visible\u0027)","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"jamessspanggg"},"content":"      .type(\u00272019-06-10\u0027);","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"jamessspanggg"},"content":"    // break down by file type","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary label.filter-breakdown \u003e input:visible\u0027)","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.visible\u0027)","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"jamessspanggg"},"content":"      .check()","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.checked\u0027);","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"jamessspanggg"},"content":"    // merge group","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input:visible\u0027)","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.visible\u0027)","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"jamessspanggg"},"content":"      .check()","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.checked\u0027);","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"jamessspanggg"},"content":"    cy.reload();","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027div.mui-textfield.search_box \u003e input:visible\u0027)","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027have.value\u0027, \u0027eugene\u0027);","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027div.mui-select.grouping \u003e select:visible\u0027)","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027have.value\u0027, \u0027groupByAuthors\u0027);","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027div.mui-select.sort-group \u003e select:visible\u0027)","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027have.value\u0027, \u0027totalCommits dsc\u0027);","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027div.mui-select.sort-within-group \u003e select:visible\u0027)","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027have.value\u0027, \u0027totalCommits dsc\u0027);","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027div.mui-select.granularity \u003e select:visible\u0027)","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027have.value\u0027, \u0027week\u0027);","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027input[name\u003d\"since\"]:visible\u0027)","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027have.value\u0027, \u00272018-06-10\u0027);","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027input[name\u003d\"until\"]:visible\u0027)","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027have.value\u0027, \u00272019-06-10\u0027);","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary label.filter-breakdown \u003e input:visible\u0027)","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.checked\u0027);","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input:visible\u0027)","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.checked\u0027);","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"jamessspanggg"},"content":"  });","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"jamessspanggg"},"content":"});","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":73}},{"path":"frontend/cypress/tests/chartView/chartView_zoomFeature.cy.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"jamessspanggg"},"content":"describe(\u0027zoom features in code view\u0027, () \u003d\u003e {","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"jamessspanggg"},"content":"  const zoomKey \u003d Cypress.platform \u003d\u003d\u003d \u0027darwin\u0027 ? \u0027{meta}\u0027 : \u0027{ctrl}\u0027;","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"jamessspanggg"},"content":"  it(\u0027click on view commits button\u0027, () \u003d\u003e {","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.visible\u0027)","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"jamessspanggg"},"content":"      .first()","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"jamessspanggg"},"content":"      .click();","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#tab-zoom\u0027)","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.visible\u0027);","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"jamessspanggg"},"content":"  });","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"jamessspanggg"},"content":"  it(\u0027zoom into ramp\u0027, () \u003d\u003e {","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"jamessspanggg"},"content":"    // clicking from the 10th px to the 50th px in the ramp","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027body\u0027).type(zoomKey, { release: false })","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"jamessspanggg"},"content":"      .get(\u0027#summary-charts .summary-chart__ramp .ramp\u0027)","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"jamessspanggg"},"content":"      .first()","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"jamessspanggg"},"content":"      .click(10, 20)","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"jamessspanggg"},"content":"      .click(50, 20);","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#tab-zoom\u0027)","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.visible\u0027);","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"jamessspanggg"},"content":"  });","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"jamessspanggg"},"content":"  it(\u0027zoom into ramp when merge group\u0027, () \u003d\u003e {","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input:visible\u0027)","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.visible\u0027)","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"jamessspanggg"},"content":"      .check()","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.checked\u0027);","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"jamessspanggg"},"content":"    // clicking from the 10th px to the 50th px in the ramp","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027body\u0027).type(zoomKey, { release: false })","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"jamessspanggg"},"content":"      .get(\u0027#summary-charts .summary-chart__ramp .ramp\u0027)","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"jamessspanggg"},"content":"      .first()","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"jamessspanggg"},"content":"      .click(10, 20)","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"jamessspanggg"},"content":"      .click(50, 20);","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#tab-zoom\u0027)","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.visible\u0027);","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"jamessspanggg"},"content":"  });","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"jamessspanggg"},"content":"});","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":41}},{"path":"frontend/cypress/tests/codeView/codeView.cy.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"describe(\u0027code view\u0027, () \u003d\u003e {","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"-"},"content":"  it(\u0027at first start shows tutorial message\u0027, () \u003d\u003e {","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tabs-wrapper\u0027)","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027);","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-empty \u003e .title\u0027).then(($ele) \u003d\u003e {","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"      const expected \u003d \u0027Welcome to this RepoSense report!\u0027","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"        + \u0027The charts on the left show the contribution activities, grouped by repository and author.\u0027","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"        + \"To view the code attributed to a specific author, click the    icon next to that author\u0027s name.\"","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"        + \"To view the breakdown of commits made by a specific author, click the    icon next to that author\u0027s name.\"","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"        + \u0027To hide the code view and show only the activity charts, click the    icon on the centre divider.\u0027","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"        + \u0027See the  User Guide  to get a better understanding of how to interpret the report.\u0027;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"      const message \u003d $ele.text();","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"      expect(expected).to.equal(message);","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"    });","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"  });","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"  it(\u0027can be closed\u0027, () \u003d\u003e {","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tabs-wrapper\u0027)","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027);","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"    cy.get(\u0027#app #tab-resize .tab-close\u0027)","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"      .click();","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tabs-wrapper\u0027)","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"      .should(\u0027not.exist\u0027);","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"  });","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"jamessspanggg"},"content":"  it(\u0027merge group and view code for entire repository\u0027, () \u003d\u003e {","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input\u0027)","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.visible\u0027)","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"jamessspanggg"},"content":"      .check({ force: true })","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.checked\u0027);","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.visible\u0027)","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"jamessspanggg"},"content":"      .first()","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"jamessspanggg"},"content":"      .click();","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#tab-authorship .files\u0027, { timeout: 90000 })","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"jamessspanggg"},"content":"      .should(\u0027be.visible\u0027);","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"jamessspanggg"},"content":"  });","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"});","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":15,"-":29}},{"path":"frontend/src/styles/_colors.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@import \u0027utils\u0027;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"eugenepeh"},"content":"/**","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"eugenepeh"},"content":" * MUI Colors module","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"eugenepeh"},"content":" */","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"eugenepeh"},"content":"// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"eugenepeh"},"content":"// COLOR FUNCTION","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"eugenepeh"},"content":"// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"eugenepeh"},"content":"@function mui-color($mui-key1, $mui-key2: \u0027500\u0027) {","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"eugenepeh"},"content":"  // check key1","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"  @if validate-map-key($mui-colors, $mui-key1) \u003d\u003d false {","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"eugenepeh"},"content":"    @return null;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"eugenepeh"},"content":"  }","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"eugenepeh"},"content":"  $mui-mapVal: map-get($mui-colors, $mui-key1);","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"eugenepeh"},"content":"  // use second key","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"eugenepeh"},"content":"  @if type-of($mui-mapVal) \u003d\u003d \u0027map\u0027 {","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"eugenepeh"},"content":"    // check key2","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @if validate-map-key($mui-mapVal, $mui-key2) \u003d\u003d false {","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"eugenepeh"},"content":"      @return null;","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"eugenepeh"},"content":"    $mui-mapVal: map-get($mui-mapVal, $mui-key2);","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"eugenepeh"},"content":"  }","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"eugenepeh"},"content":"  @return $mui-mapVal;","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"eugenepeh"},"content":"// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"eugenepeh"},"content":"// COLOR MAP","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"eugenepeh"},"content":"// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"eugenepeh"},"content":"$mui-colors: (","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"jamessspanggg"},"content":"  \u0027red\u0027: (","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"jamessspanggg"},"content":"    \u002750\u0027: #FFEBEE,","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"jamessspanggg"},"content":"    \u0027100\u0027: #FFCDD2,","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"jamessspanggg"},"content":"    \u0027200\u0027: #EF9A9A,","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"jamessspanggg"},"content":"    \u0027300\u0027: #E57373,","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"jamessspanggg"},"content":"    \u0027400\u0027: #EF5350,","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"jamessspanggg"},"content":"    \u0027500\u0027: #F44336,","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"jamessspanggg"},"content":"    \u0027600\u0027: #E53935,","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"jamessspanggg"},"content":"    \u0027700\u0027: #D32F2F,","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"jamessspanggg"},"content":"    \u0027800\u0027: #C62828,","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"jamessspanggg"},"content":"    \u0027900\u0027: #B71C1C,","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A100\u0027: #FF8A80,","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A200\u0027: #FF5252,","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A400\u0027: #FF1744,","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A700\u0027: #D50000,","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"eugenepeh"},"content":"  ),","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"jamessspanggg"},"content":"  \u0027pink\u0027: (","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"jamessspanggg"},"content":"    \u002750\u0027: #FCE4EC,","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"jamessspanggg"},"content":"    \u0027100\u0027: #F8BBD0,","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"jamessspanggg"},"content":"    \u0027200\u0027: #F48FB1,","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"jamessspanggg"},"content":"    \u0027300\u0027: #F06292,","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"jamessspanggg"},"content":"    \u0027400\u0027: #EC407A,","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"jamessspanggg"},"content":"    \u0027500\u0027: #E91E63,","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"jamessspanggg"},"content":"    \u0027600\u0027: #D81B60,","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"jamessspanggg"},"content":"    \u0027700\u0027: #C2185B,","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"jamessspanggg"},"content":"    \u0027800\u0027: #AD1457,","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"jamessspanggg"},"content":"    \u0027900\u0027: #880E4F,","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A100\u0027: #FF80AB,","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A200\u0027: #FF4081,","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A400\u0027: #F50057,","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A700\u0027: #C51162,","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"eugenepeh"},"content":"  ),","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"jamessspanggg"},"content":"  \u0027purple\u0027: (","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"jamessspanggg"},"content":"    \u002750\u0027: #F3E5F5,","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"jamessspanggg"},"content":"    \u0027100\u0027: #E1BEE7,","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"jamessspanggg"},"content":"    \u0027200\u0027: #CE93D8,","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"jamessspanggg"},"content":"    \u0027300\u0027: #BA68C8,","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"jamessspanggg"},"content":"    \u0027400\u0027: #AB47BC,","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"jamessspanggg"},"content":"    \u0027500\u0027: #9C27B0,","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"jamessspanggg"},"content":"    \u0027600\u0027: #8E24AA,","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"jamessspanggg"},"content":"    \u0027700\u0027: #7B1FA2,","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"jamessspanggg"},"content":"    \u0027800\u0027: #6A1B9A,","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"jamessspanggg"},"content":"    \u0027900\u0027: #4A148C,","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A100\u0027: #EA80FC,","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A200\u0027: #E040FB,","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A400\u0027: #D500F9,","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A700\u0027: #AA00FF,","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"eugenepeh"},"content":"  ),","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"jamessspanggg"},"content":"  \u0027deep-purple\u0027: (","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"jamessspanggg"},"content":"    \u002750\u0027: #EDE7F6,","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"jamessspanggg"},"content":"    \u0027100\u0027: #D1C4E9,","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"jamessspanggg"},"content":"    \u0027200\u0027: #B39DDB,","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"jamessspanggg"},"content":"    \u0027300\u0027: #9575CD,","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"jamessspanggg"},"content":"    \u0027400\u0027: #7E57C2,","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"jamessspanggg"},"content":"    \u0027500\u0027: #673AB7,","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"jamessspanggg"},"content":"    \u0027600\u0027: #5E35B1,","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"jamessspanggg"},"content":"    \u0027700\u0027: #512DA8,","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"jamessspanggg"},"content":"    \u0027800\u0027: #4527A0,","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"jamessspanggg"},"content":"    \u0027900\u0027: #311B92,","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A100\u0027: #B388FF,","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A200\u0027: #7C4DFF,","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A400\u0027: #651FFF,","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A700\u0027: #6200EA,","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"eugenepeh"},"content":"  ),","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"jamessspanggg"},"content":"  \u0027indigo\u0027: (","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"jamessspanggg"},"content":"    \u002750\u0027: #E8EAF6,","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"jamessspanggg"},"content":"    \u0027100\u0027: #C5CAE9,","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"jamessspanggg"},"content":"    \u0027200\u0027: #9FA8DA,","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"jamessspanggg"},"content":"    \u0027300\u0027: #7986CB,","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"jamessspanggg"},"content":"    \u0027400\u0027: #5C6BC0,","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"jamessspanggg"},"content":"    \u0027500\u0027: #3F51B5,","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"jamessspanggg"},"content":"    \u0027600\u0027: #3949AB,","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"jamessspanggg"},"content":"    \u0027700\u0027: #303F9F,","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"jamessspanggg"},"content":"    \u0027800\u0027: #283593,","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"jamessspanggg"},"content":"    \u0027900\u0027: #1A237E,","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A100\u0027: #8C9EFF,","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A200\u0027: #536DFE,","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A400\u0027: #3D5AFE,","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A700\u0027: #304FFE,","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"eugenepeh"},"content":"  ),","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"jamessspanggg"},"content":"  \u0027blue\u0027: (","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"jamessspanggg"},"content":"    \u002750\u0027: #E3F2FD,","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"jamessspanggg"},"content":"    \u0027100\u0027: #BBDEFB,","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"jamessspanggg"},"content":"    \u0027200\u0027: #90CAF9,","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"jamessspanggg"},"content":"    \u0027300\u0027: #64B5F6,","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"jamessspanggg"},"content":"    \u0027400\u0027: #42A5F5,","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"jamessspanggg"},"content":"    \u0027500\u0027: #2196F3,","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"jamessspanggg"},"content":"    \u0027600\u0027: #1E88E5,","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"jamessspanggg"},"content":"    \u0027700\u0027: #1976D2,","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"jamessspanggg"},"content":"    \u0027800\u0027: #1565C0,","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"jamessspanggg"},"content":"    \u0027900\u0027: #0D47A1,","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A100\u0027: #82B1FF,","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A200\u0027: #448AFF,","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A400\u0027: #2979FF,","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A700\u0027: #2962FF,","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"eugenepeh"},"content":"  ),","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"jamessspanggg"},"content":"  \u0027light-blue\u0027: (","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"jamessspanggg"},"content":"    \u002750\u0027: #E1F5FE,","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"jamessspanggg"},"content":"    \u0027100\u0027: #B3E5FC,","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"jamessspanggg"},"content":"    \u0027200\u0027: #81D4FA,","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"jamessspanggg"},"content":"    \u0027300\u0027: #4FC3F7,","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"jamessspanggg"},"content":"    \u0027400\u0027: #29B6F6,","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"jamessspanggg"},"content":"    \u0027500\u0027: #03A9F4,","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"jamessspanggg"},"content":"    \u0027600\u0027: #039BE5,","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"jamessspanggg"},"content":"    \u0027700\u0027: #0288D1,","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"jamessspanggg"},"content":"    \u0027800\u0027: #0277BD,","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"jamessspanggg"},"content":"    \u0027900\u0027: #01579B,","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A100\u0027: #80D8FF,","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A200\u0027: #40C4FF,","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A400\u0027: #00B0FF,","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A700\u0027: #0091EA,","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"eugenepeh"},"content":"  ),","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"jamessspanggg"},"content":"  \u0027cyan\u0027: (","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"jamessspanggg"},"content":"    \u002750\u0027: #E0F7FA,","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"jamessspanggg"},"content":"    \u0027100\u0027: #B2EBF2,","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"jamessspanggg"},"content":"    \u0027200\u0027: #80DEEA,","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"jamessspanggg"},"content":"    \u0027300\u0027: #4DD0E1,","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"jamessspanggg"},"content":"    \u0027400\u0027: #26C6DA,","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"jamessspanggg"},"content":"    \u0027500\u0027: #00BCD4,","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"jamessspanggg"},"content":"    \u0027600\u0027: #00ACC1,","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"jamessspanggg"},"content":"    \u0027700\u0027: #0097A7,","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"jamessspanggg"},"content":"    \u0027800\u0027: #00838F,","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"jamessspanggg"},"content":"    \u0027900\u0027: #006064,","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A100\u0027: #84FFFF,","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A200\u0027: #18FFFF,","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A400\u0027: #00E5FF,","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A700\u0027: #00B8D4,","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"eugenepeh"},"content":"  ),","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"jamessspanggg"},"content":"  \u0027teal\u0027: (","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"jamessspanggg"},"content":"    \u002750\u0027: #E0F2F1,","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"jamessspanggg"},"content":"    \u0027100\u0027: #B2DFDB,","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"jamessspanggg"},"content":"    \u0027200\u0027: #80CBC4,","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"jamessspanggg"},"content":"    \u0027300\u0027: #4DB6AC,","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"jamessspanggg"},"content":"    \u0027400\u0027: #26A69A,","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"jamessspanggg"},"content":"    \u0027500\u0027: #009688,","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"jamessspanggg"},"content":"    \u0027600\u0027: #00897B,","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"jamessspanggg"},"content":"    \u0027700\u0027: #00796B,","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"jamessspanggg"},"content":"    \u0027800\u0027: #00695C,","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"jamessspanggg"},"content":"    \u0027900\u0027: #004D40,","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A100\u0027: #A7FFEB,","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A200\u0027: #64FFDA,","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A400\u0027: #1DE9B6,","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A700\u0027: #00BFA5,","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"eugenepeh"},"content":"  ),","isFullCredit":true},{"lineNumber":179,"author":{"gitId":"jamessspanggg"},"content":"  \u0027green\u0027: (","isFullCredit":true},{"lineNumber":180,"author":{"gitId":"jamessspanggg"},"content":"    \u002750\u0027: #E8F5E9,","isFullCredit":true},{"lineNumber":181,"author":{"gitId":"jamessspanggg"},"content":"    \u0027100\u0027: #C8E6C9,","isFullCredit":true},{"lineNumber":182,"author":{"gitId":"jamessspanggg"},"content":"    \u0027200\u0027: #A5D6A7,","isFullCredit":true},{"lineNumber":183,"author":{"gitId":"jamessspanggg"},"content":"    \u0027300\u0027: #81C784,","isFullCredit":true},{"lineNumber":184,"author":{"gitId":"jamessspanggg"},"content":"    \u0027400\u0027: #66BB6A,","isFullCredit":true},{"lineNumber":185,"author":{"gitId":"jamessspanggg"},"content":"    \u0027500\u0027: #4CAF50,","isFullCredit":true},{"lineNumber":186,"author":{"gitId":"jamessspanggg"},"content":"    \u0027600\u0027: #43A047,","isFullCredit":true},{"lineNumber":187,"author":{"gitId":"jamessspanggg"},"content":"    \u0027700\u0027: #388E3C,","isFullCredit":true},{"lineNumber":188,"author":{"gitId":"jamessspanggg"},"content":"    \u0027800\u0027: #2E7D32,","isFullCredit":true},{"lineNumber":189,"author":{"gitId":"jamessspanggg"},"content":"    \u0027900\u0027: #1B5E20,","isFullCredit":true},{"lineNumber":190,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A100\u0027: #B9F6CA,","isFullCredit":true},{"lineNumber":191,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A200\u0027: #69F0AE,","isFullCredit":true},{"lineNumber":192,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A400\u0027: #00E676,","isFullCredit":true},{"lineNumber":193,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A700\u0027: #00C853,","isFullCredit":true},{"lineNumber":194,"author":{"gitId":"eugenepeh"},"content":"  ),","isFullCredit":true},{"lineNumber":195,"author":{"gitId":"jamessspanggg"},"content":"  \u0027light-green\u0027: (","isFullCredit":true},{"lineNumber":196,"author":{"gitId":"jamessspanggg"},"content":"    \u002750\u0027: #F1F8E9,","isFullCredit":true},{"lineNumber":197,"author":{"gitId":"jamessspanggg"},"content":"    \u0027100\u0027: #DCEDC8,","isFullCredit":true},{"lineNumber":198,"author":{"gitId":"jamessspanggg"},"content":"    \u0027200\u0027: #C5E1A5,","isFullCredit":true},{"lineNumber":199,"author":{"gitId":"jamessspanggg"},"content":"    \u0027300\u0027: #AED581,","isFullCredit":true},{"lineNumber":200,"author":{"gitId":"jamessspanggg"},"content":"    \u0027400\u0027: #9CCC65,","isFullCredit":true},{"lineNumber":201,"author":{"gitId":"jamessspanggg"},"content":"    \u0027500\u0027: #8BC34A,","isFullCredit":true},{"lineNumber":202,"author":{"gitId":"jamessspanggg"},"content":"    \u0027600\u0027: #7CB342,","isFullCredit":true},{"lineNumber":203,"author":{"gitId":"jamessspanggg"},"content":"    \u0027700\u0027: #689F38,","isFullCredit":true},{"lineNumber":204,"author":{"gitId":"jamessspanggg"},"content":"    \u0027800\u0027: #558B2F,","isFullCredit":true},{"lineNumber":205,"author":{"gitId":"jamessspanggg"},"content":"    \u0027900\u0027: #33691E,","isFullCredit":true},{"lineNumber":206,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A100\u0027: #CCFF90,","isFullCredit":true},{"lineNumber":207,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A200\u0027: #B2FF59,","isFullCredit":true},{"lineNumber":208,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A400\u0027: #76FF03,","isFullCredit":true},{"lineNumber":209,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A700\u0027: #64DD17,","isFullCredit":true},{"lineNumber":210,"author":{"gitId":"eugenepeh"},"content":"  ),","isFullCredit":true},{"lineNumber":211,"author":{"gitId":"jamessspanggg"},"content":"  \u0027lime\u0027: (","isFullCredit":true},{"lineNumber":212,"author":{"gitId":"jamessspanggg"},"content":"    \u002750\u0027: #F9FBE7,","isFullCredit":true},{"lineNumber":213,"author":{"gitId":"jamessspanggg"},"content":"    \u0027100\u0027: #F0F4C3,","isFullCredit":true},{"lineNumber":214,"author":{"gitId":"jamessspanggg"},"content":"    \u0027200\u0027: #E6EE9C,","isFullCredit":true},{"lineNumber":215,"author":{"gitId":"jamessspanggg"},"content":"    \u0027300\u0027: #DCE775,","isFullCredit":true},{"lineNumber":216,"author":{"gitId":"jamessspanggg"},"content":"    \u0027400\u0027: #D4E157,","isFullCredit":true},{"lineNumber":217,"author":{"gitId":"jamessspanggg"},"content":"    \u0027500\u0027: #CDDC39,","isFullCredit":true},{"lineNumber":218,"author":{"gitId":"jamessspanggg"},"content":"    \u0027600\u0027: #C0CA33,","isFullCredit":true},{"lineNumber":219,"author":{"gitId":"jamessspanggg"},"content":"    \u0027700\u0027: #AFB42B,","isFullCredit":true},{"lineNumber":220,"author":{"gitId":"jamessspanggg"},"content":"    \u0027800\u0027: #9E9D24,","isFullCredit":true},{"lineNumber":221,"author":{"gitId":"jamessspanggg"},"content":"    \u0027900\u0027: #827717,","isFullCredit":true},{"lineNumber":222,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A100\u0027: #F4FF81,","isFullCredit":true},{"lineNumber":223,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A200\u0027: #EEFF41,","isFullCredit":true},{"lineNumber":224,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A400\u0027: #C6FF00,","isFullCredit":true},{"lineNumber":225,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A700\u0027: #AEEA00,","isFullCredit":true},{"lineNumber":226,"author":{"gitId":"eugenepeh"},"content":"  ),","isFullCredit":true},{"lineNumber":227,"author":{"gitId":"jamessspanggg"},"content":"  \u0027yellow\u0027: (","isFullCredit":true},{"lineNumber":228,"author":{"gitId":"jamessspanggg"},"content":"    \u002750\u0027: #FFFDE7,","isFullCredit":true},{"lineNumber":229,"author":{"gitId":"jamessspanggg"},"content":"    \u0027100\u0027: #FFF9C4,","isFullCredit":true},{"lineNumber":230,"author":{"gitId":"jamessspanggg"},"content":"    \u0027200\u0027: #FFF59D,","isFullCredit":true},{"lineNumber":231,"author":{"gitId":"jamessspanggg"},"content":"    \u0027300\u0027: #FFF176,","isFullCredit":true},{"lineNumber":232,"author":{"gitId":"jamessspanggg"},"content":"    \u0027400\u0027: #FFEE58,","isFullCredit":true},{"lineNumber":233,"author":{"gitId":"jamessspanggg"},"content":"    \u0027500\u0027: #FFEB3B,","isFullCredit":true},{"lineNumber":234,"author":{"gitId":"jamessspanggg"},"content":"    \u0027600\u0027: #FDD835,","isFullCredit":true},{"lineNumber":235,"author":{"gitId":"jamessspanggg"},"content":"    \u0027700\u0027: #FBC02D,","isFullCredit":true},{"lineNumber":236,"author":{"gitId":"jamessspanggg"},"content":"    \u0027800\u0027: #F9A825,","isFullCredit":true},{"lineNumber":237,"author":{"gitId":"jamessspanggg"},"content":"    \u0027900\u0027: #F57F17,","isFullCredit":true},{"lineNumber":238,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A100\u0027: #FFFF8D,","isFullCredit":true},{"lineNumber":239,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A200\u0027: #FFFF00,","isFullCredit":true},{"lineNumber":240,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A400\u0027: #FFEA00,","isFullCredit":true},{"lineNumber":241,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A700\u0027: #FFD600,","isFullCredit":true},{"lineNumber":242,"author":{"gitId":"eugenepeh"},"content":"  ),","isFullCredit":true},{"lineNumber":243,"author":{"gitId":"jamessspanggg"},"content":"  \u0027amber\u0027: (","isFullCredit":true},{"lineNumber":244,"author":{"gitId":"jamessspanggg"},"content":"    \u002750\u0027: #FFF8E1,","isFullCredit":true},{"lineNumber":245,"author":{"gitId":"jamessspanggg"},"content":"    \u0027100\u0027: #FFECB3,","isFullCredit":true},{"lineNumber":246,"author":{"gitId":"jamessspanggg"},"content":"    \u0027200\u0027: #FFE082,","isFullCredit":true},{"lineNumber":247,"author":{"gitId":"jamessspanggg"},"content":"    \u0027300\u0027: #FFD54F,","isFullCredit":true},{"lineNumber":248,"author":{"gitId":"jamessspanggg"},"content":"    \u0027400\u0027: #FFCA28,","isFullCredit":true},{"lineNumber":249,"author":{"gitId":"jamessspanggg"},"content":"    \u0027500\u0027: #FFC107,","isFullCredit":true},{"lineNumber":250,"author":{"gitId":"jamessspanggg"},"content":"    \u0027600\u0027: #FFB300,","isFullCredit":true},{"lineNumber":251,"author":{"gitId":"jamessspanggg"},"content":"    \u0027700\u0027: #FFA000,","isFullCredit":true},{"lineNumber":252,"author":{"gitId":"jamessspanggg"},"content":"    \u0027800\u0027: #FF8F00,","isFullCredit":true},{"lineNumber":253,"author":{"gitId":"jamessspanggg"},"content":"    \u0027900\u0027: #FF6F00,","isFullCredit":true},{"lineNumber":254,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A100\u0027: #FFE57F,","isFullCredit":true},{"lineNumber":255,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A200\u0027: #FFD740,","isFullCredit":true},{"lineNumber":256,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A400\u0027: #FFC400,","isFullCredit":true},{"lineNumber":257,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A700\u0027: #FFAB00,","isFullCredit":true},{"lineNumber":258,"author":{"gitId":"eugenepeh"},"content":"  ),","isFullCredit":true},{"lineNumber":259,"author":{"gitId":"jamessspanggg"},"content":"  \u0027orange\u0027: (","isFullCredit":true},{"lineNumber":260,"author":{"gitId":"jamessspanggg"},"content":"    \u002750\u0027: #FFF3E0,","isFullCredit":true},{"lineNumber":261,"author":{"gitId":"jamessspanggg"},"content":"    \u0027100\u0027: #FFE0B2,","isFullCredit":true},{"lineNumber":262,"author":{"gitId":"jamessspanggg"},"content":"    \u0027200\u0027: #FFCC80,","isFullCredit":true},{"lineNumber":263,"author":{"gitId":"jamessspanggg"},"content":"    \u0027300\u0027: #FFB74D,","isFullCredit":true},{"lineNumber":264,"author":{"gitId":"jamessspanggg"},"content":"    \u0027400\u0027: #FFA726,","isFullCredit":true},{"lineNumber":265,"author":{"gitId":"jamessspanggg"},"content":"    \u0027500\u0027: #FF9800,","isFullCredit":true},{"lineNumber":266,"author":{"gitId":"jamessspanggg"},"content":"    \u0027600\u0027: #FB8C00,","isFullCredit":true},{"lineNumber":267,"author":{"gitId":"jamessspanggg"},"content":"    \u0027700\u0027: #F57C00,","isFullCredit":true},{"lineNumber":268,"author":{"gitId":"jamessspanggg"},"content":"    \u0027800\u0027: #EF6C00,","isFullCredit":true},{"lineNumber":269,"author":{"gitId":"jamessspanggg"},"content":"    \u0027900\u0027: #E65100,","isFullCredit":true},{"lineNumber":270,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A100\u0027: #FFD180,","isFullCredit":true},{"lineNumber":271,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A200\u0027: #FFAB40,","isFullCredit":true},{"lineNumber":272,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A400\u0027: #FF9100,","isFullCredit":true},{"lineNumber":273,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A700\u0027: #FF6D00,","isFullCredit":true},{"lineNumber":274,"author":{"gitId":"eugenepeh"},"content":"  ),","isFullCredit":true},{"lineNumber":275,"author":{"gitId":"jamessspanggg"},"content":"  \u0027deep-orange\u0027: (","isFullCredit":true},{"lineNumber":276,"author":{"gitId":"jamessspanggg"},"content":"    \u002750\u0027: #FBE9E7,","isFullCredit":true},{"lineNumber":277,"author":{"gitId":"jamessspanggg"},"content":"    \u0027100\u0027: #FFCCBC,","isFullCredit":true},{"lineNumber":278,"author":{"gitId":"jamessspanggg"},"content":"    \u0027200\u0027: #FFAB91,","isFullCredit":true},{"lineNumber":279,"author":{"gitId":"jamessspanggg"},"content":"    \u0027300\u0027: #FF8A65,","isFullCredit":true},{"lineNumber":280,"author":{"gitId":"jamessspanggg"},"content":"    \u0027400\u0027: #FF7043,","isFullCredit":true},{"lineNumber":281,"author":{"gitId":"jamessspanggg"},"content":"    \u0027500\u0027: #FF5722,","isFullCredit":true},{"lineNumber":282,"author":{"gitId":"jamessspanggg"},"content":"    \u0027600\u0027: #F4511E,","isFullCredit":true},{"lineNumber":283,"author":{"gitId":"jamessspanggg"},"content":"    \u0027700\u0027: #E64A19,","isFullCredit":true},{"lineNumber":284,"author":{"gitId":"jamessspanggg"},"content":"    \u0027800\u0027: #D84315,","isFullCredit":true},{"lineNumber":285,"author":{"gitId":"jamessspanggg"},"content":"    \u0027900\u0027: #BF360C,","isFullCredit":true},{"lineNumber":286,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A100\u0027: #FF9E80,","isFullCredit":true},{"lineNumber":287,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A200\u0027: #FF6E40,","isFullCredit":true},{"lineNumber":288,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A400\u0027: #FF3D00,","isFullCredit":true},{"lineNumber":289,"author":{"gitId":"jamessspanggg"},"content":"    \u0027A700\u0027: #DD2C00,","isFullCredit":true},{"lineNumber":290,"author":{"gitId":"eugenepeh"},"content":"  ),","isFullCredit":true},{"lineNumber":291,"author":{"gitId":"jamessspanggg"},"content":"  \u0027brown\u0027: (","isFullCredit":true},{"lineNumber":292,"author":{"gitId":"jamessspanggg"},"content":"    \u002750\u0027: #EFEBE9,","isFullCredit":true},{"lineNumber":293,"author":{"gitId":"jamessspanggg"},"content":"    \u0027100\u0027: #D7CCC8,","isFullCredit":true},{"lineNumber":294,"author":{"gitId":"jamessspanggg"},"content":"    \u0027200\u0027: #BCAAA4,","isFullCredit":true},{"lineNumber":295,"author":{"gitId":"jamessspanggg"},"content":"    \u0027300\u0027: #A1887F,","isFullCredit":true},{"lineNumber":296,"author":{"gitId":"jamessspanggg"},"content":"    \u0027400\u0027: #8D6E63,","isFullCredit":true},{"lineNumber":297,"author":{"gitId":"jamessspanggg"},"content":"    \u0027500\u0027: #795548,","isFullCredit":true},{"lineNumber":298,"author":{"gitId":"jamessspanggg"},"content":"    \u0027600\u0027: #6D4C41,","isFullCredit":true},{"lineNumber":299,"author":{"gitId":"jamessspanggg"},"content":"    \u0027700\u0027: #5D4037,","isFullCredit":true},{"lineNumber":300,"author":{"gitId":"jamessspanggg"},"content":"    \u0027800\u0027: #4E342E,","isFullCredit":true},{"lineNumber":301,"author":{"gitId":"jamessspanggg"},"content":"    \u0027900\u0027: #3E2723,","isFullCredit":true},{"lineNumber":302,"author":{"gitId":"eugenepeh"},"content":"  ),","isFullCredit":true},{"lineNumber":303,"author":{"gitId":"-"},"content":"  \u0027github\u0027: (","isFullCredit":true},{"lineNumber":304,"author":{"gitId":"-"},"content":"    \u0027title-background\u0027: #FAFBFC,","isFullCredit":true},{"lineNumber":305,"author":{"gitId":"-"},"content":"    \u0027border\u0027: #E1E4E8,","isFullCredit":true},{"lineNumber":306,"author":{"gitId":"-"},"content":"    \u0027authored-code-background\u0027: #E6FFED,","isFullCredit":true},{"lineNumber":307,"author":{"gitId":"-"},"content":"  ),","isFullCredit":true},{"lineNumber":308,"author":{"gitId":"jamessspanggg"},"content":"  \u0027grey\u0027: (","isFullCredit":true},{"lineNumber":309,"author":{"gitId":"jamessspanggg"},"content":"    \u002750\u0027: #FAFAFA,","isFullCredit":true},{"lineNumber":310,"author":{"gitId":"jamessspanggg"},"content":"    \u0027100\u0027: #F5F5F5,","isFullCredit":true},{"lineNumber":311,"author":{"gitId":"jamessspanggg"},"content":"    \u0027200\u0027: #EEEEEE,","isFullCredit":true},{"lineNumber":312,"author":{"gitId":"jamessspanggg"},"content":"    \u0027300\u0027: #E0E0E0,","isFullCredit":true},{"lineNumber":313,"author":{"gitId":"jamessspanggg"},"content":"    \u0027400\u0027: #BDBDBD,","isFullCredit":true},{"lineNumber":314,"author":{"gitId":"jamessspanggg"},"content":"    \u0027500\u0027: #9E9E9E,","isFullCredit":true},{"lineNumber":315,"author":{"gitId":"jamessspanggg"},"content":"    \u0027600\u0027: #757575,","isFullCredit":true},{"lineNumber":316,"author":{"gitId":"jamessspanggg"},"content":"    \u0027700\u0027: #616161,","isFullCredit":true},{"lineNumber":317,"author":{"gitId":"jamessspanggg"},"content":"    \u0027800\u0027: #424242,","isFullCredit":true},{"lineNumber":318,"author":{"gitId":"jamessspanggg"},"content":"    \u0027900\u0027: #212121,","isFullCredit":true},{"lineNumber":319,"author":{"gitId":"eugenepeh"},"content":"  ),","isFullCredit":true},{"lineNumber":320,"author":{"gitId":"jamessspanggg"},"content":"  \u0027blue-grey\u0027: (","isFullCredit":true},{"lineNumber":321,"author":{"gitId":"jamessspanggg"},"content":"    \u002750\u0027: #ECEFF1,","isFullCredit":true},{"lineNumber":322,"author":{"gitId":"jamessspanggg"},"content":"    \u0027100\u0027: #CFD8DC,","isFullCredit":true},{"lineNumber":323,"author":{"gitId":"jamessspanggg"},"content":"    \u0027200\u0027: #B0BEC5,","isFullCredit":true},{"lineNumber":324,"author":{"gitId":"jamessspanggg"},"content":"    \u0027300\u0027: #90A4AE,","isFullCredit":true},{"lineNumber":325,"author":{"gitId":"jamessspanggg"},"content":"    \u0027400\u0027: #78909C,","isFullCredit":true},{"lineNumber":326,"author":{"gitId":"jamessspanggg"},"content":"    \u0027500\u0027: #607D8B,","isFullCredit":true},{"lineNumber":327,"author":{"gitId":"jamessspanggg"},"content":"    \u0027600\u0027: #546E7A,","isFullCredit":true},{"lineNumber":328,"author":{"gitId":"jamessspanggg"},"content":"    \u0027700\u0027: #455A64,","isFullCredit":true},{"lineNumber":329,"author":{"gitId":"jamessspanggg"},"content":"    \u0027800\u0027: #37474F,","isFullCredit":true},{"lineNumber":330,"author":{"gitId":"jamessspanggg"},"content":"    \u0027900\u0027: #263238,","isFullCredit":true},{"lineNumber":331,"author":{"gitId":"eugenepeh"},"content":"  ),","isFullCredit":true},{"lineNumber":332,"author":{"gitId":"jamessspanggg"},"content":"  \u0027black\u0027: #000,","isFullCredit":true},{"lineNumber":333,"author":{"gitId":"jamessspanggg"},"content":"  \u0027white\u0027: #FFF,","isFullCredit":true},{"lineNumber":334,"author":{"gitId":"jamessspanggg"},"content":"  \u0027black-alpha-12\u0027: rgba(#000, .12),","isFullCredit":true},{"lineNumber":335,"author":{"gitId":"jamessspanggg"},"content":"  \u0027black-alpha-38\u0027: rgba(#000, .38),","isFullCredit":true},{"lineNumber":336,"author":{"gitId":"jamessspanggg"},"content":"  \u0027black-alpha-54\u0027: rgba(#000, .54),","isFullCredit":true},{"lineNumber":337,"author":{"gitId":"jamessspanggg"},"content":"  \u0027black-alpha-87\u0027: rgba(#000, .87),","isFullCredit":true},{"lineNumber":338,"author":{"gitId":"jamessspanggg"},"content":"  \u0027white-alpha-12\u0027: rgba(#FFF, .12),","isFullCredit":true},{"lineNumber":339,"author":{"gitId":"jamessspanggg"},"content":"  \u0027white-alpha-30\u0027: rgba(#FFF, .30),","isFullCredit":true},{"lineNumber":340,"author":{"gitId":"jamessspanggg"},"content":"  \u0027white-alpha-70\u0027: rgba(#FFF, .70),","isFullCredit":true},{"lineNumber":341,"author":{"gitId":"eugenepeh"},"content":");","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":282,"eugenepeh":51,"-":8}},{"path":"frontend/src/styles/style.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"jamessspanggg"},"content":"@import \u0027colors\u0027;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"-"},"content":"@import \u0027z-indices\u0027;","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"eugenepeh"},"content":"/** global **/","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"eugenepeh"},"content":"body {","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"jamessspanggg"},"content":"  font-family: \u0027Titillium Web\u0027, sans-serif;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"  @include medium-font;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"eugenepeh"},"content":"vuetemplate {","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"eugenepeh"},"content":"  display: none;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"ongspxm"},"content":"a {","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"ongspxm"},"content":"  cursor: pointer;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"ongspxm"},"content":"}","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"ongspxm"},"content":"","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"a.broken-link {","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"  color: black;","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"  cursor: default;","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"  text-decoration: none;","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"[v-cloak] {","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"  display: none;","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"eugenepeh"},"content":".wrapper {","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"eugenepeh"},"content":"  text-align: center;","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"eugenepeh"},"content":".content {","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"eugenepeh"},"content":"  max-width: 40rem;","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"eugenepeh"},"content":"  text-align: left;","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"eugenepeh"},"content":".empty {","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"eugenepeh"},"content":"  margin: 3rem 5rem;","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"eugenepeh"},"content":"  text-align: center;","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":".overlay-loader {","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"  text-align: center;","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":".overlay-loading-icon {","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"  font-size: 3em;","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":".tab-padding {","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"  padding: 2rem 1.5rem;","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":".widget-padding {","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"  padding: .5rem 1rem;","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"jamessspanggg"},"content":".warn {","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"jamessspanggg"},"content":"  color: mui-color(\u0027red\u0027);","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"jamessspanggg"},"content":"  .summary-charts__title--contribution {","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"jamessspanggg"},"content":"    color: mui-color(\u0027black\u0027);","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"jamessspanggg"},"content":"  }","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"jamessspanggg"},"content":"}","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":".tooltip {","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"  display: inline-block;","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"  position: relative;","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"  %tooltip-tail {","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"    border-color: mui-color(\u0027black\u0027) transparent transparent transparent;","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"    border-style: solid;","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"    border-width: .4rem;","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"    content: \u0027\u0027;","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"    left: 50%;","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"    margin-left: -.4rem;","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"    position: absolute;","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"  }","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"  .tooltip-text {","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @include small-font;","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"    background-color: mui-color(\u0027black\u0027);","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"    border-radius: .25rem;","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"    bottom: 125%;","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"    color: mui-color(\u0027white\u0027);","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"    left: 50%;","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"    margin-left: -3.5rem;","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"    opacity: 0;","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"    padding: .25rem .5rem;","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"    position: absolute;","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"-"},"content":"    text-align: center;","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"    top: auto;","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"-"},"content":"    transition: opacity .3s;","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"    visibility: hidden;","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"-"},"content":"    width: 6rem;","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"    word-break: normal;","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"    z-index: z-index(\u0027tooltip\u0027);","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"-"},"content":"    \u0026::before {","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"      border: none;","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"-"},"content":"    \u0026::after {","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"      @extend %tooltip-tail;","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"      bottom: auto;","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"      top: 100%;","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"    \u0026.bottom-aligned {","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"-"},"content":"      @include medium-font;","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"-"},"content":"      bottom: auto;","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"-"},"content":"      top: 125%;","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"-"},"content":"    \u0026.bottom-aligned::before {","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"      @extend %tooltip-tail;","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"      bottom: 100%;","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"-"},"content":"      top: auto;","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"-"},"content":"      transform: rotate(180deg);","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"-"},"content":"    \u0026.bottom-aligned::after {","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"-"},"content":"      border-style: none;","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"-"},"content":"    \u0026.right-aligned {","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"-"},"content":"      @include mini-font;","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"-"},"content":"      bottom: 135%;","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"-"},"content":"      margin-left: -5.5rem;","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"-"},"content":"    \u0026.right-aligned:after {","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"-"},"content":"      left: 75%;","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"-"},"content":"      margin-left: -.15rem;","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"-"},"content":"  }","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"-"},"content":"  \u0026:hover {","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"-"},"content":"    .tooltip-text {","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"-"},"content":"      opacity: 1;","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"-"},"content":"      visibility: visible;","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"-"},"content":"  }","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"eugenepeh"},"content":"/** navigation bar **/","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"eugenepeh"},"content":"header {","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"eugenepeh"},"content":"  display: flex;","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"eugenepeh"},"content":"  justify-content: center;","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"jamessspanggg"},"content":"  position: relative;","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"-"},"content":"  z-index: z-index(\u0027header\u0027);","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"eugenepeh"},"content":"  .content {","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"eugenepeh"},"content":"    align-items: center;","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"jamessspanggg"},"content":"    display: flex;","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"eugenepeh"},"content":"    flex-grow: 1;","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"jamessspanggg"},"content":"    justify-content: space-between;","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"eugenepeh"},"content":"  }","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"jamessspanggg"},"content":"  .repo,","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"jamessspanggg"},"content":"  .logo {","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"eugenepeh"},"content":"    margin: 0;","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"eugenepeh"},"content":"  }","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"eugenepeh"},"content":"#file-upload {","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"eugenepeh"},"content":"  text-align: center;","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"eugenepeh"},"content":"#app-wrapper {","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"eugenepeh"},"content":"  #summary-wrapper {","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"eugenepeh"},"content":"    height: 100%;","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"eugenepeh"},"content":"    overflow-y: scroll;","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"ongspxm"},"content":"    text-align: center;","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"ongspxm"},"content":"","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"ongspxm"},"content":"    .timestamp-footer {","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"-"},"content":"      @include small-font;","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"ongspxm"},"content":"      color: mui-color(\u0027grey\u0027, \u0027700\u0027);","isFullCredit":true},{"lineNumber":179,"author":{"gitId":"jamessspanggg"},"content":"      margin-bottom: 1em;","isFullCredit":true},{"lineNumber":180,"author":{"gitId":"jamessspanggg"},"content":"      margin-left: 1em;","isFullCredit":true},{"lineNumber":181,"author":{"gitId":"ongspxm"},"content":"    }","isFullCredit":true},{"lineNumber":182,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":183,"author":{"gitId":"-"},"content":"    .error-message-box {","isFullCredit":true},{"lineNumber":184,"author":{"gitId":"-"},"content":"      @include small-font;","isFullCredit":true},{"lineNumber":185,"author":{"gitId":"-"},"content":"      background-color: mui-color(\u0027red\u0027, \u0027100\u0027);","isFullCredit":true},{"lineNumber":186,"author":{"gitId":"-"},"content":"      border: .1rem solid mui-color(\u0027red\u0027, \u0027900\u0027);","isFullCredit":true},{"lineNumber":187,"author":{"gitId":"-"},"content":"      border-radius: .25rem;","isFullCredit":true},{"lineNumber":188,"author":{"gitId":"-"},"content":"      color: mui-color(\u0027red\u0027, \u0027900\u0027);","isFullCredit":true},{"lineNumber":189,"author":{"gitId":"-"},"content":"      margin-bottom: .9rem;","isFullCredit":true},{"lineNumber":190,"author":{"gitId":"-"},"content":"      padding: .9rem;","isFullCredit":true},{"lineNumber":191,"author":{"gitId":"-"},"content":"      text-align: left;","isFullCredit":true},{"lineNumber":192,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":193,"author":{"gitId":"-"},"content":"      \u0026__close-button {","isFullCredit":true},{"lineNumber":194,"author":{"gitId":"-"},"content":"        @include large-font;","isFullCredit":true},{"lineNumber":195,"author":{"gitId":"-"},"content":"        cursor: pointer;","isFullCredit":true},{"lineNumber":196,"author":{"gitId":"-"},"content":"        float: right;","isFullCredit":true},{"lineNumber":197,"author":{"gitId":"-"},"content":"        font-weight: bold;","isFullCredit":true},{"lineNumber":198,"author":{"gitId":"-"},"content":"        line-height: .625rem;","isFullCredit":true},{"lineNumber":199,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":200,"author":{"gitId":"-"},"content":"        \u0026:hover {","isFullCredit":true},{"lineNumber":201,"author":{"gitId":"-"},"content":"          color: mui-color(\u0027white\u0027);","isFullCredit":true},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":203,"author":{"gitId":"-"},"content":"      }","isFullCredit":true},{"lineNumber":204,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":205,"author":{"gitId":"-"},"content":"      \u0026__message {","isFullCredit":true},{"lineNumber":206,"author":{"gitId":"-"},"content":"        border-bottom: .1rem solid;","isFullCredit":true},{"lineNumber":207,"author":{"gitId":"-"},"content":"        font-weight: bolder;","isFullCredit":true},{"lineNumber":208,"author":{"gitId":"-"},"content":"        padding-bottom: .5rem;","isFullCredit":true},{"lineNumber":209,"author":{"gitId":"-"},"content":"      }","isFullCredit":true},{"lineNumber":210,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":211,"author":{"gitId":"-"},"content":"      .icon {","isFullCredit":true},{"lineNumber":212,"author":{"gitId":"-"},"content":"        padding-right: .4rem;","isFullCredit":true},{"lineNumber":213,"author":{"gitId":"-"},"content":"        padding-top: .2rem;","isFullCredit":true},{"lineNumber":214,"author":{"gitId":"-"},"content":"        width: 1rem;","isFullCredit":true},{"lineNumber":215,"author":{"gitId":"-"},"content":"      }","isFullCredit":true},{"lineNumber":216,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":217,"author":{"gitId":"-"},"content":"      \u0026__failed-repo {","isFullCredit":true},{"lineNumber":218,"author":{"gitId":"-"},"content":"        .fa-exclamation {","isFullCredit":true},{"lineNumber":219,"author":{"gitId":"-"},"content":"          @include mini-font;","isFullCredit":true},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":221,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":222,"author":{"gitId":"-"},"content":"        \u0026--name {","isFullCredit":true},{"lineNumber":223,"author":{"gitId":"-"},"content":"          font-weight: bolder;","isFullCredit":true},{"lineNumber":224,"author":{"gitId":"-"},"content":"          padding-left: .2rem;","isFullCredit":true},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":226,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":227,"author":{"gitId":"-"},"content":"        \u0026--reason {","isFullCredit":true},{"lineNumber":228,"author":{"gitId":"-"},"content":"          padding-left: 3rem;","isFullCredit":true},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":230,"author":{"gitId":"-"},"content":"      }","isFullCredit":true},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":232,"author":{"gitId":"eugenepeh"},"content":"  }","isFullCredit":true},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","isFullCredit":true}],"authorContributionMap":{"ongspxm":9,"jamessspanggg":17,"eugenepeh":46,"-":161}},{"path":"frontend/src/utils/safari_date.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"jamessspanggg"},"content":"// date keys for handling safari date input //","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"jamessspanggg"},"content":"function isIntegerKey(key) {","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"jamessspanggg"},"content":"  return (key \u003e\u003d 48 \u0026\u0026 key \u003c\u003d 57) || (key \u003e\u003d 96 \u0026\u0026 key \u003c\u003d 105);","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"jamessspanggg"},"content":"}","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"jamessspanggg"},"content":"function isArrowOrEnterKey(key) {","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"jamessspanggg"},"content":"  return (key \u003e\u003d 37 \u0026\u0026 key \u003c\u003d 40) || key \u003d\u003d\u003d 13;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"jamessspanggg"},"content":"}","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"jamessspanggg"},"content":"function isBackSpaceOrDeleteKey(key) {","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"jamessspanggg"},"content":"  return key \u003d\u003d\u003d 8 || key \u003d\u003d\u003d 46;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"jamessspanggg"},"content":"}","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"jamessspanggg"},"content":"function validateInputDate(event) {","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"jamessspanggg"},"content":"  const key \u003d event.keyCode;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"jamessspanggg"},"content":"  // only allow integer, backspace, delete, arrow or enter keys","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"jamessspanggg"},"content":"  if (!(isIntegerKey(key) || isBackSpaceOrDeleteKey(key) || isArrowOrEnterKey(key))) {","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"jamessspanggg"},"content":"    event.preventDefault();","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"jamessspanggg"},"content":"  }","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"jamessspanggg"},"content":"}","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"jamessspanggg"},"content":"function deleteDashInputDate(event) {","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"jamessspanggg"},"content":"  const key \u003d event.keyCode;","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"jamessspanggg"},"content":"  const date \u003d event.target.value;","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"jamessspanggg"},"content":"  // remove two chars before the cursor\u0027s position if deleting dash character","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"jamessspanggg"},"content":"  if (isBackSpaceOrDeleteKey(key)) {","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"jamessspanggg"},"content":"    const cursorPosition \u003d event.target.selectionStart;","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"jamessspanggg"},"content":"    if (date[cursorPosition - 1] \u003d\u003d\u003d \u0027-\u0027) {","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"jamessspanggg"},"content":"      event.target.value \u003d date.slice(0, cursorPosition - 1);","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"jamessspanggg"},"content":"  }","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"jamessspanggg"},"content":"}","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"window.formatInputDateOnKeyDown \u003d function formatInputDateOnKeyDown(event) {","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"jamessspanggg"},"content":"  validateInputDate(event);","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"jamessspanggg"},"content":"  deleteDashInputDate(event);","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"jamessspanggg"},"content":"};","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"window.appendDashInputDate \u003d function appendDashInputDate(event) {","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"jamessspanggg"},"content":"  const date \u003d event.target.value;","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"jamessspanggg"},"content":"  // append dash to date with format yyyy-mm-dd","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"jamessspanggg"},"content":"  if (date.match(/^\\d{4}$/) !\u003d\u003d null) {","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"    event.target.value \u003d `${event.target.value}-`;","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"jamessspanggg"},"content":"  } else if (date.match(/^\\d{4}-\\d{2}$/) !\u003d\u003d null) {","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"    event.target.value \u003d `${event.target.value}-`;","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"jamessspanggg"},"content":"  }","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"jamessspanggg"},"content":"};","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"export default \u0027test\u0027;","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":43,"-":6}},{"path":"src/main/java/reposense/RepoSense.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yamidark"},"content":"package reposense;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"yong24s"},"content":"import java.io.IOException;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.ZonedDateTime;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yong24s"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"yamidark"},"content":"import java.util.logging.Level;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"yong24s"},"content":"import java.util.logging.Logger;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"eugenepeh"},"content":"import net.sourceforge.argparse4j.helper.HelpScreenException;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.git.GitConfig;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.git.GitVersion;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"yamidark"},"content":"import reposense.model.CliArguments;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"yamidark"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.model.ReportConfiguration;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.model.RunConfigurationDecider;","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"yong24s"},"content":"import reposense.parser.ArgsParser;","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.parser.InvalidCsvException;","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.parser.InvalidHeaderException;","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"yamidark"},"content":"import reposense.parser.ParseException;","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"yamidark"},"content":"import reposense.report.ReportGenerator;","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"yong24s"},"content":"import reposense.system.LogsManager;","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.system.ReportServer;","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"jamessspanggg"},"content":"import reposense.util.TimeUtil;","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":" * The main RepoSense class.","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"yong24s"},"content":"public class RepoSense {","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"yong24s"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(RepoSense.class);","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final int SERVER_PORT_NUMBER \u003d 9000;","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"E MMM d HH:mm:ss yyyy z\");","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VERSION_UNSPECIFIED \u003d \"unspecified\";","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String FINDING_PREVIOUS_AUTHORS_INVALID_VERSION_WARNING_MESSAGE \u003d","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \"--find-previous-authors/-F requires git version 2.23 and above. Feature will be disabled for this run\";","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The entry point of the program.","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Additional flags are provided by the user in {@code args}.","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"yong24s"},"content":"    public static void main(String[] args) {","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"yong24s"},"content":"        try {","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"jamessspanggg"},"content":"            TimeUtil.startTimer();","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"yong24s"},"content":"            CliArguments cliArguments \u003d ArgsParser.parse(args);","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"yong24s"},"content":"            List\u003cRepoConfiguration\u003e configs \u003d null;","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"            ReportConfiguration reportConfig \u003d new ReportConfiguration();","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"            if (cliArguments.isViewModeOnly()) {","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"                ReportServer.startServer(SERVER_PORT_NUMBER, cliArguments.getReportDirectoryPath().toAbsolutePath());","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"                return;","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"            configs \u003d RunConfigurationDecider.getRunConfiguration(cliArguments).getRepoConfigurations();","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"            reportConfig \u003d cliArguments.getReportConfiguration();","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"yong24s"},"content":"            RepoConfiguration.setFormatsToRepoConfigs(configs, cliArguments.getFormats());","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"yong24s"},"content":"            RepoConfiguration.setDatesToRepoConfigs(configs, cliArguments.getSinceDate(), cliArguments.getUntilDate());","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"            RepoConfiguration.setZoneIdToRepoConfigs(configs, cliArguments.getZoneId());","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"            RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(configs,","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"                    cliArguments.isStandaloneConfigIgnored());","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"            RepoConfiguration.setFileSizeLimitIgnoredToRepoConfigs(configs,","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"                    cliArguments.isFileSizeLimitIgnored());","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"jamessspanggg"},"content":"            RepoConfiguration.setIsLastModifiedDateIncludedToRepoConfigs(configs,","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"jamessspanggg"},"content":"                    cliArguments.isLastModifiedDateIncluded());","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"            RepoConfiguration.setIsShallowCloningPerformedToRepoConfigs(configs,","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"                    cliArguments.isShallowCloningPerformed());","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"            RepoConfiguration.setIsFindingPreviousAuthorsPerformedToRepoConfigs(configs,","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"                    cliArguments.isFindingPreviousAuthorsPerformed());","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"            if (RepoConfiguration.isAnyRepoFindingPreviousAuthors(configs)","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"                    \u0026\u0026 !GitVersion.isGitVersionSufficientForFindingPreviousAuthors()) {","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"                logger.warning(FINDING_PREVIOUS_AUTHORS_INVALID_VERSION_WARNING_MESSAGE);","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"                RepoConfiguration.setToFalseIsFindingPreviousAuthorsPerformedToRepoConfigs(configs);","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"            List\u003cString[]\u003e globalGitConfig \u003d GitConfig.getGlobalGitLfsConfig();","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"            if (globalGitConfig.size() !\u003d 0) {","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"                GitConfig.setGlobalGitLfsConfig(GitConfig.SKIP_SMUDGE_CONFIG_SETTINGS);","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"            ReportGenerator reportGenerator \u003d new ReportGenerator();","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"            List\u003cPath\u003e reportFoldersAndFiles \u003d reportGenerator.generateReposReport(configs,","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"                    cliArguments.getOutputFilePath().toAbsolutePath().toString(),","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"                    cliArguments.getAssetsFilePath().toAbsolutePath().toString(), reportConfig,","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"                    formatter.format(ZonedDateTime.now(cliArguments.getZoneId())),","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"jamessspanggg"},"content":"                    cliArguments.getSinceDate(), cliArguments.getUntilDate(),","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    cliArguments.isSinceDateProvided(), cliArguments.isUntilDateProvided(),","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"                    cliArguments.getNumCloningThreads(), cliArguments.getNumAnalysisThreads(),","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"-"},"content":"                    TimeUtil::getElapsedTime, cliArguments.getZoneId(), cliArguments.isFreshClonePerformed());","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"-"},"content":"            FileUtil.zipFoldersAndFiles(reportFoldersAndFiles, cliArguments.getOutputFilePath().toAbsolutePath(),","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"                    \".json\");","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"            // Set back to user\u0027s initial global git lfs config","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"            GitConfig.setGlobalGitLfsConfig(globalGitConfig);","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"jamessspanggg"},"content":"            logger.info(TimeUtil.getElapsedTimeMessage());","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"            if (cliArguments.isAutomaticallyLaunching()) {","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"                ReportServer.startServer(SERVER_PORT_NUMBER, cliArguments.getOutputFilePath().toAbsolutePath());","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } catch (IOException | ParseException | InvalidCsvException | InvalidHeaderException e) {","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"            logger.log(Level.WARNING, e.getMessage(), e);","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"eugenepeh"},"content":"        } catch (HelpScreenException e) {","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"eugenepeh"},"content":"            // help message was printed by the ArgumentParser; it is safe to exit.","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"-"},"content":"        LogsManager.moveLogFileToOutputFolder();","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static String getVersion() {","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String version \u003d RepoSense.class.getPackage().getImplementationVersion();","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (version \u003d\u003d null || version.equals(VERSION_UNSPECIFIED)) {","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"            version \u003d System.getProperty(\"version\");","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return version;","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":7,"yamidark":7,"yong24s":15,"eugenepeh":5,"-":88}},{"path":"src/main/java/reposense/authorship/AuthorshipReporter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yamidark"},"content":"package reposense.authorship;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"yamidark"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"yamidark"},"content":"import java.util.Objects;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yamidark"},"content":"import java.util.stream.Collectors;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"yamidark"},"content":"import reposense.authorship.model.AuthorshipSummary;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"yamidark"},"content":"import reposense.authorship.model.FileInfo;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yamidark"},"content":"import reposense.authorship.model.FileResult;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"yamidark"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"yamidark"},"content":"/**","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"yamidark"},"content":" * Generates the authorship summary data for each repository.","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"yamidark"},"content":" */","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"yamidark"},"content":"public class AuthorshipReporter {","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(AuthorshipReporter.class);","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int HIGH_NUMBER_LINES_THRESHOLD \u003d 500000;","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String HIGH_NUMBER_LINES_MESSAGE \u003d \"There are a large number (%s) of text files to be \"","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"analyzed, comprising a total of %s lines. As such, RepoSense may take a long time to generate the \"","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"report. Performance may be improved by setting values for the \\\"File formats\\\" and \"","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \" \\\"Ignore Glob List\\\" columns in the repo-config.csv so as to reduce the number of files to be \"","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \" analyzed.\";","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final FileInfoExtractor fileInfoExtractor \u003d new FileInfoExtractor();","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final FileInfoAnalyzer fileInfoAnalyzer \u003d new FileInfoAnalyzer();","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final FileResultAggregator fileResultAggregator \u003d new FileResultAggregator();","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"yamidark"},"content":"     * Generates and returns the authorship summary for each repo in {@code config}.","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AuthorshipSummary generateAuthorshipSummary(RepoConfiguration config) {","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e textFileInfos \u003d fileInfoExtractor.extractTextFileInfos(config);","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"        int numFiles \u003d textFileInfos.size();","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"        int totalNumLines \u003d textFileInfos.stream()","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .mapToInt(fileInfo -\u003e fileInfo.getNumOfLines())","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .sum();","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (totalNumLines \u003e HIGH_NUMBER_LINES_THRESHOLD) {","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"            logger.warning(String.format(HIGH_NUMBER_LINES_MESSAGE, numFiles, totalNumLines));","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cFileResult\u003e fileResults \u003d textFileInfos.stream()","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .map(fileInfo -\u003e fileInfoAnalyzer.analyzeTextFile(config, fileInfo))","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"yamidark"},"content":"                .filter(Objects::nonNull)","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"yamidark"},"content":"                .collect(Collectors.toList());","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e binaryFileInfos \u003d fileInfoExtractor.extractBinaryFileInfos(config);","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"        List\u003cFileResult\u003e binaryFileResults \u003d binaryFileInfos.stream()","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .map(fileInfo -\u003e fileInfoAnalyzer.analyzeBinaryFile(config, fileInfo))","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .filter(Objects::nonNull)","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"        fileResults.addAll(binaryFileResults);","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return fileResultAggregator.aggregateFileResult(fileResults, config.getAuthorList(),","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"                config.getAllFileTypes());","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"yamidark"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yamidark":25,"-":40}},{"path":"src/main/java/reposense/authorship/FileInfoAnalyzer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yamidark"},"content":"package reposense.authorship;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"yamidark"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"yamidark"},"content":"import java.nio.file.Paths;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.Instant;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"yamidark"},"content":"import java.util.HashMap;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"yamidark"},"content":"import java.util.logging.Logger;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"yamidark"},"content":"import reposense.authorship.analyzer.AnnotatorAnalyzer;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"yamidark"},"content":"import reposense.authorship.model.FileInfo;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"yamidark"},"content":"import reposense.authorship.model.FileResult;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"yamidark"},"content":"import reposense.authorship.model.LineInfo;","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"eugenepeh"},"content":"import reposense.git.GitBlame;","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.git.GitLog;","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"yamidark"},"content":"import reposense.model.Author;","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"yamidark"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"yamidark"},"content":"import reposense.system.LogsManager;","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"yamidark"},"content":"/**","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Analyzes the target and information given in the {@link FileInfo}.","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"yamidark"},"content":" */","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"yamidark"},"content":"public class FileInfoAnalyzer {","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"yamidark"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(FileInfoAnalyzer.class);","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"yamidark"},"content":"    private static final int AUTHOR_NAME_OFFSET \u003d \"author \".length();","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"eugenepeh"},"content":"    private static final int AUTHOR_EMAIL_OFFSET \u003d \"author-mail \".length();","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"jamessspanggg"},"content":"    private static final int AUTHOR_TIME_OFFSET \u003d \"author-time \".length();","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"jamessspanggg"},"content":"    private static final int AUTHOR_TIMEZONE_OFFSET \u003d \"author-tz \".length();","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"yamidark"},"content":"    private static final int FULL_COMMIT_HASH_LENGTH \u003d 40;","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_FILE_MISSING \u003d \"Unable to analyze the file located at \\\"%s\\\" \"","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"as the file is missing from your system. Skipping this file.\";","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_SHALLOW_CLONING_LAST_MODIFIED_DATE_CONFLICT \u003d \"Repo %s was cloned using \"","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"shallow cloning. As such, the \\\"last modified date\\\" values may be incorrect.\";","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"yamidark"},"content":"     * Analyzes the lines of the file, given in the {@code fileInfo}, that has changed in the time period provided","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"yamidark"},"content":"     * by {@code config}.","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns null if the file is missing from the local system, or none of the","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * {@link Author} specified in {@code config} contributed to the file in {@code fileInfo}.","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public FileResult analyzeTextFile(RepoConfiguration config, FileInfo fileInfo) {","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"yamidark"},"content":"        String relativePath \u003d fileInfo.getPath();","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (Files.notExists(Paths.get(config.getRepoRoot(), relativePath))) {","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"            logger.severe(String.format(MESSAGE_FILE_MISSING, relativePath));","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return null;","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (FileUtil.isEmptyFile(config.getRepoRoot(), relativePath)) {","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return null;","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"jamessspanggg"},"content":"        aggregateBlameAuthorModifiedAndDateInfo(config, fileInfo);","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"        fileInfo.setFileType(config.getFileType(fileInfo.getPath()));","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AnnotatorAnalyzer.aggregateAnnotationAuthorInfo(fileInfo, config.getAuthorConfig());","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"yamidark"},"content":"        if (!config.getAuthorList().isEmpty() \u0026\u0026 fileInfo.isAllAuthorsIgnored(config.getAuthorList())) {","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"yamidark"},"content":"            return null;","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"yamidark"},"content":"        }","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return generateTextFileResult(fileInfo);","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Analyzes the binary file, given in the {@code fileInfo}, that has changed in the time period provided","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * by {@code config}.","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns null if the file is missing from the local system, or none of the","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@link Author} specified in {@code config} contributed to the file in {@code fileInfo}.","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public FileResult analyzeBinaryFile(RepoConfiguration config, FileInfo fileInfo) {","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String relativePath \u003d fileInfo.getPath();","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (Files.notExists(Paths.get(config.getRepoRoot(), relativePath))) {","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"            logger.severe(String.format(MESSAGE_FILE_MISSING, relativePath));","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return null;","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"        fileInfo.setFileType(config.getFileType(fileInfo.getPath()));","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return generateBinaryFileResult(config, fileInfo);","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Generates and returns a {@link FileResult} with the authorship results from {@code fileInfo} consolidated.","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private FileResult generateTextFileResult(FileInfo fileInfo) {","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"yamidark"},"content":"        HashMap\u003cAuthor, Integer\u003e authorContributionMap \u003d new HashMap\u003c\u003e();","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"yamidark"},"content":"        for (LineInfo line : fileInfo.getLines()) {","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"yamidark"},"content":"            Author author \u003d line.getAuthor();","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"yamidark"},"content":"            authorContributionMap.put(author, authorContributionMap.getOrDefault(author, 0) + 1);","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"yamidark"},"content":"        }","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return FileResult.createTextFileResult(","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"            fileInfo.getPath(), fileInfo.getFileType(), fileInfo.getLines(), authorContributionMap,","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"            fileInfo.exceedsFileLimit());","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Generates and returns a {@link FileResult} with the authorship results from binary {@code fileInfo} consolidated.","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Authorship results are indicated in the {@code authorContributionMap} as contributions with zero line counts.","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Returns {@code null} if none of the {@link Author} specified in {@code config} contributed to the file in","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * {@code fileInfo}.","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private FileResult generateBinaryFileResult(RepoConfiguration config, FileInfo fileInfo) {","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"-"},"content":"        List\u003cString[]\u003e authorsString \u003d GitLog.getFileAuthors(config, fileInfo.getPath());","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (authorsString.size() \u003d\u003d 0) {","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return null;","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Set\u003cAuthor\u003e authors \u003d new HashSet\u003c\u003e();","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"-"},"content":"        HashMap\u003cAuthor, Integer\u003e authorContributionMap \u003d new HashMap\u003c\u003e();","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"-"},"content":"        for (String[] lineDetails : authorsString) {","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"            String authorName \u003d lineDetails[0];","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"-"},"content":"            String authorEmail \u003d lineDetails[1];","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"-"},"content":"            authors.add(config.getAuthor(authorName, authorEmail));","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"-"},"content":"        for (Author author : authors) {","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"-"},"content":"            authorContributionMap.put(author, 0);","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return FileResult.createBinaryFileResult(fileInfo.getPath(), fileInfo.getFileType(), authorContributionMap);","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Sets the {@link Author} and {@link LocalDateTime} for each line in {@code fileInfo} based on the git blame","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * analysis of the file.","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * The {@code config} is used to obtain the root directory for running git blame as well as other parameters used","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * in determining which author to assign to each line and whether to set the last modified date for a","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * {@code lineInfo}.","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void aggregateBlameAuthorModifiedAndDateInfo(RepoConfiguration config, FileInfo fileInfo) {","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String blameResults;","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (!config.isFindingPreviousAuthorsPerformed()) {","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"-"},"content":"            blameResults \u003d getGitBlameResult(config, fileInfo.getPath());","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"-"},"content":"        } else {","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"-"},"content":"            blameResults \u003d getGitBlameWithPreviousAuthorsResult(config, fileInfo.getPath());","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"yamidark"},"content":"        String[] blameResultLines \u003d blameResults.split(\"\\n\");","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Path filePath \u003d Paths.get(fileInfo.getPath());","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"-"},"content":"        LocalDateTime sinceDate \u003d config.getSinceDate();","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"-"},"content":"        LocalDateTime untilDate \u003d config.getUntilDate();","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"jamessspanggg"},"content":"        for (int lineCount \u003d 0; lineCount \u003c blameResultLines.length; lineCount +\u003d 5) {","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"yamidark"},"content":"            String commitHash \u003d blameResultLines[lineCount].substring(0, FULL_COMMIT_HASH_LENGTH);","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"eugenepeh"},"content":"            String authorName \u003d blameResultLines[lineCount + 1].substring(AUTHOR_NAME_OFFSET);","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"eugenepeh"},"content":"            String authorEmail \u003d blameResultLines[lineCount + 2]","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"eugenepeh"},"content":"                    .substring(AUTHOR_EMAIL_OFFSET).replaceAll(\"\u003c|\u003e\", \"\");","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"jamessspanggg"},"content":"            Long commitDateInMs \u003d Long.parseLong(blameResultLines[lineCount + 3].substring(AUTHOR_TIME_OFFSET)) * 1000;","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"-"},"content":"            LocalDateTime commitDate \u003d LocalDateTime.ofInstant(Instant.ofEpochMilli(commitDateInMs),","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"-"},"content":"                    config.getZoneId());","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"-"},"content":"            Author author \u003d config.getAuthor(authorName, authorEmail);","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"-"},"content":"            if (!fileInfo.isFileLineTracked(lineCount / 5) || author.isIgnoringFile(filePath)","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"jamessspanggg"},"content":"                    || CommitHash.isInsideCommitList(commitHash, config.getIgnoreCommitList())","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"-"},"content":"                    || commitDate.compareTo(sinceDate) \u003c 0 || commitDate.compareTo(untilDate) \u003e 0) {","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"eugenepeh"},"content":"                author \u003d Author.UNKNOWN_AUTHOR;","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"yamidark"},"content":"            }","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"jamessspanggg"},"content":"            if (config.isLastModifiedDateIncluded()) {","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"-"},"content":"                if (config.isShallowCloningPerformed()) {","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"-"},"content":"                    logger.warning(String.format(","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"-"},"content":"                            MESSAGE_SHALLOW_CLONING_LAST_MODIFIED_DATE_CONFLICT, config.getRepoName()));","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"-"},"content":"                }","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":179,"author":{"gitId":"-"},"content":"                fileInfo.setLineLastModifiedDate(lineCount / 5, commitDate);","isFullCredit":true},{"lineNumber":180,"author":{"gitId":"jamessspanggg"},"content":"            }","isFullCredit":true},{"lineNumber":181,"author":{"gitId":"jamessspanggg"},"content":"            fileInfo.setLineAuthor(lineCount / 5, author);","isFullCredit":true},{"lineNumber":182,"author":{"gitId":"yamidark"},"content":"        }","isFullCredit":true},{"lineNumber":183,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":184,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":185,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Returns the analysis result from running git blame on {@code filePath} with reference to the root directory","isFullCredit":true},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * given in {@code config}.","isFullCredit":true},{"lineNumber":188,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":189,"author":{"gitId":"-"},"content":"    private String getGitBlameResult(RepoConfiguration config, String filePath) {","isFullCredit":true},{"lineNumber":190,"author":{"gitId":"eugenepeh"},"content":"        return GitBlame.blame(config.getRepoRoot(), filePath);","isFullCredit":true},{"lineNumber":191,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":192,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":193,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * Returns the analysis result from running git blame with finding previous authors enabled on {@code filePath}","isFullCredit":true},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * with reference to the root directory given in {@code config}.","isFullCredit":true},{"lineNumber":196,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":197,"author":{"gitId":"-"},"content":"    private String getGitBlameWithPreviousAuthorsResult(RepoConfiguration config, String filePath) {","isFullCredit":true},{"lineNumber":198,"author":{"gitId":"-"},"content":"        return GitBlame.blameWithPreviousAuthors(config.getRepoRoot(), filePath);","isFullCredit":true},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":200,"author":{"gitId":"yamidark"},"content":"}","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":10,"yamidark":61,"eugenepeh":7,"-":122}},{"path":"src/main/java/reposense/authorship/FileInfoExtractor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yamidark"},"content":"package reposense.authorship;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"yamidark"},"content":"import java.io.BufferedReader;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"yamidark"},"content":"import java.io.FileReader;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"yamidark"},"content":"import java.io.IOException;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"yamidark"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"yamidark"},"content":"import java.nio.file.Paths;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yamidark"},"content":"import java.util.ArrayList;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"yamidark"},"content":"import java.util.Comparator;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"yamidark"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"yamidark"},"content":"import java.util.logging.Level;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"yamidark"},"content":"import java.util.logging.Logger;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"yamidark"},"content":"import java.util.regex.Matcher;","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"yamidark"},"content":"import java.util.regex.Pattern;","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"yamidark"},"content":"import java.util.stream.Collectors;","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"yamidark"},"content":"import reposense.authorship.model.FileInfo;","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"yamidark"},"content":"import reposense.authorship.model.LineInfo;","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"eugenepeh"},"content":"import reposense.git.GitCheckout;","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"eugenepeh"},"content":"import reposense.git.GitDiff;","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"eugenepeh"},"content":"import reposense.git.GitRevList;","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"import reposense.git.exception.CommitNotFoundException;","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"yamidark"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"yamidark"},"content":"import reposense.system.LogsManager;","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"yamidark"},"content":"/**","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"yamidark"},"content":" * Extracts out all the relevant {@code FileInfo} from the repository.","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"yamidark"},"content":" */","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"yamidark"},"content":"public class FileInfoExtractor {","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"yamidark"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(FileInfoExtractor.class);","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_START_EXTRACTING_FILE_INFO \u003d \"Extracting relevant file info from %s (%s)...\";","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FILE_PATH \u003d \"\\\"%s\\\" is an invalid file path for current OS or \"","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"indicates a possible regex match issue. Skipping this directory.\";","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_FILE_SIZE_LIMIT_EXCEEDED \u003d \"File \\\"%s\\\" has %dB size. The file size \"","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"limit is set at %dB. %s\";","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_FILE_ANALYSIS_SKIPPED \u003d \"Skipping analysis of this file...\";","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_FILE_EXCLUDED_FROM_REPORT \u003d \"Exact line diffs will be excluded from report...\";","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"jamessspanggg"},"content":"    private static final String DIFF_FILE_CHUNK_SEPARATOR \u003d \"\\ndiff --git \\\"?\\\u0027?a/.*\\n\";","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"yamidark"},"content":"    private static final String LINE_CHUNKS_SEPARATOR \u003d \"\\n@@ \";","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"yamidark"},"content":"    private static final String LINE_INSERTED_SYMBOL \u003d \"+\";","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"yamidark"},"content":"    private static final String STARTING_LINE_NUMBER_GROUP_NAME \u003d \"startingLineNumber\";","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"yamidark"},"content":"    private static final String FILE_CHANGED_GROUP_NAME \u003d \"filePath\";","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String FILE_DELETED_SYMBOL \u003d \"dev/null\";","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"yamidark"},"content":"    private static final String MATCH_GROUP_FAIL_MESSAGE_FORMAT \u003d \"Failed to match the %s group for:\\n%s\";","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String BINARY_FILE_LINE_DIFF_RESULT \u003d \"-\\t-\\t\";","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"yamidark"},"content":"    private static final int LINE_CHANGED_HEADER_INDEX \u003d 0;","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"yamidark"},"content":"    private static final Pattern STARTING_LINE_NUMBER_PATTERN \u003d Pattern.compile(","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"yamidark"},"content":"            \"-(\\\\d)+(,)?(\\\\d)* \\\\+(?\u003cstartingLineNumber\u003e\\\\d+)(,)?(\\\\d)* @@\");","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final Pattern FILE_CHANGED_PATTERN \u003d Pattern.compile(\"\\n(\\\\+){3} b?/(?\u003cfilePath\u003e.*?)\\t?\\n\");","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Extracts a list of relevant non-binary files given in {@code config}.","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public List\u003cFileInfo\u003e extractTextFileInfos(RepoConfiguration config) {","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.info(String.format(MESSAGE_START_EXTRACTING_FILE_INFO, config.getLocation(), config.getBranch()));","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"eugenepeh"},"content":"        List\u003cFileInfo\u003e fileInfos \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"yamidark"},"content":"        // checks out to the latest commit of the date range to ensure the FileInfo generated correspond to the","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"yamidark"},"content":"        // git blame file analyze output","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"eugenepeh"},"content":"        try {","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"            GitCheckout.checkoutDate(config.getRepoRoot(), config.getBranch(), config.getUntilDate(),","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"                    config.getZoneId());","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"eugenepeh"},"content":"        } catch (CommitNotFoundException cnfe) {","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"eugenepeh"},"content":"            return fileInfos;","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"eugenepeh"},"content":"        }","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String lastCommitHash \u003d GitRevList.getCommitHashUntilDate(","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"                config.getRepoRoot(), config.getBranch(), config.getSinceDate(), config.getZoneId());","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"        fileInfos \u003d (lastCommitHash.isEmpty())","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"                ? getAllFileInfo(config, false)","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"                : getEditedFileInfos(config, lastCommitHash);","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"yamidark"},"content":"        fileInfos.sort(Comparator.comparing(FileInfo::getPath));","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"yamidark"},"content":"        return fileInfos;","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Extracts a list of relevant binary files given in {@code config}.","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public List\u003cFileInfo\u003e extractBinaryFileInfos(RepoConfiguration config) {","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e binaryFileInfos \u003d getAllFileInfo(config, true);","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"-"},"content":"        binaryFileInfos.sort(Comparator.comparing(FileInfo::getPath));","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return binaryFileInfos;","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Returns a list of {@link FileInfo}s for all files in the repo with lines marked indicating if they were edited","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * in between the current commit and the commit given by {@code lastCommitHash}.","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * The repo is given by {@code config}.","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public List\u003cFileInfo\u003e getEditedFileInfos(RepoConfiguration config, String lastCommitHash) {","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"yamidark"},"content":"        List\u003cFileInfo\u003e fileInfos \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"eugenepeh"},"content":"        String fullDiffResult \u003d GitDiff.diffCommit(config.getRepoRoot(), lastCommitHash);","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"yamidark"},"content":"        // no diff between the 2 commits, return an empty list","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"yamidark"},"content":"        if (fullDiffResult.isEmpty()) {","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"yamidark"},"content":"            return fileInfos;","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"yamidark"},"content":"        }","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"yamidark"},"content":"        String[] fileDiffResultList \u003d fullDiffResult.split(DIFF_FILE_CHUNK_SEPARATOR);","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Set\u003cPath\u003e textFilesSet \u003d getFiles(config, false);","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"yamidark"},"content":"        for (String fileDiffResult : fileDiffResultList) {","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"yamidark"},"content":"            Matcher filePathMatcher \u003d FILE_CHANGED_PATTERN.matcher(fileDiffResult);","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"yamidark"},"content":"            // diff result does not have the markers to indicate that file has any line changes, skip it","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"yamidark"},"content":"            if (!filePathMatcher.find()) {","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"yamidark"},"content":"                continue;","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"yamidark"},"content":"            }","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"yamidark"},"content":"            String filePath \u003d filePathMatcher.group(FILE_CHANGED_GROUP_NAME);","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"-"},"content":"            if (filePath.equals(FILE_DELETED_SYMBOL) // file is deleted, skip it as well","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"-"},"content":"                    || !isValidTextFile(filePath, textFilesSet)","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    || !config.getFileTypeManager().isInsideWhitelistedFormats(filePath)","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"                    || FileUtil.isFileIgnoredByGlob(config, Paths.get(filePath))) {","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"yamidark"},"content":"                continue;","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"yamidark"},"content":"            }","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"-"},"content":"            FileInfo currentFileInfo \u003d generateFileInfo(config, filePath);","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"yamidark"},"content":"            setLinesToTrack(currentFileInfo, fileDiffResult);","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"-"},"content":"            if (currentFileInfo.isFileAnalyzed()) {","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"yamidark"},"content":"                fileInfos.add(currentFileInfo);","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"yamidark"},"content":"            }","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"yamidark"},"content":"        }","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"yamidark"},"content":"        return fileInfos;","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Returns a {@link Set} of non-binary files for the repo {@code repoConfig}","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * if {@code isBinaryFiles} is set to `false`.","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Otherwise, returns a {@link Set} of binary files for the repo {@code repoConfig}.","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public Set\u003cPath\u003e getFiles(RepoConfiguration repoConfig, boolean isBinaryFile) {","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"-"},"content":"        List\u003cString\u003e modifiedFileList \u003d GitDiff.getModifiedFilesList(Paths.get(repoConfig.getRepoRoot()));","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // Gets rid of files with invalid directory name and filters by the {@code isBinaryFile} flag","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return modifiedFileList.stream()","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .filter(file -\u003e isBinaryFile \u003d\u003d file.startsWith(BINARY_FILE_LINE_DIFF_RESULT))","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .map(file -\u003e file.split(\"\\t\")[2])","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .filter(FileUtil::isValidPathWithLogging)","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"-"},"content":"                .map(filteredFile -\u003e Paths.get(filteredFile))","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"-"},"content":"                .collect(Collectors.toCollection(HashSet::new));","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Analyzes the {@code fileDiffResult} and marks each {@link LineInfo} in {@code fileInfo} on whether they were","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"yamidark"},"content":"     * inserted in between the commit range.","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"-"},"content":"    private void setLinesToTrack(FileInfo fileInfo, String fileDiffResult) {","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"yamidark"},"content":"        String[] linesChangedChunk \u003d fileDiffResult.split(LINE_CHUNKS_SEPARATOR);","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"yamidark"},"content":"        List\u003cLineInfo\u003e lineInfos \u003d fileInfo.getLines();","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"yamidark"},"content":"        int fileLinePointer \u003d 0;","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"yamidark"},"content":"        // skips the header, index starts from 1","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"yamidark"},"content":"        for (int sectionIndex \u003d 1; sectionIndex \u003c linesChangedChunk.length; sectionIndex++) {","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"yamidark"},"content":"            String linesChangedInSection \u003d linesChangedChunk[sectionIndex];","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"yamidark"},"content":"            String[] linesChanged \u003d linesChangedInSection.split(\"\\n\");","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"yamidark"},"content":"            int startingLineNumber \u003d getStartingLineNumber(linesChanged[LINE_CHANGED_HEADER_INDEX]);","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"yamidark"},"content":"            // mark all untouched lines between sections as untracked","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"yamidark"},"content":"            while (fileLinePointer \u003c startingLineNumber - 1) {","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"yamidark"},"content":"                lineInfos.get(fileLinePointer++).setTracked(false);","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"yamidark"},"content":"            }","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"yamidark"},"content":"            // skips the header, index starts from 1","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"yamidark"},"content":"            for (int lineIndex \u003d 1; lineIndex \u003c linesChanged.length; lineIndex++) {","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"yamidark"},"content":"                String lineChanged \u003d linesChanged[lineIndex];","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"yamidark"},"content":"                // set line added to be tracked","isFullCredit":true},{"lineNumber":179,"author":{"gitId":"yamidark"},"content":"                if (lineChanged.startsWith(LINE_INSERTED_SYMBOL)) {","isFullCredit":true},{"lineNumber":180,"author":{"gitId":"yamidark"},"content":"                    lineInfos.get(fileLinePointer++).setTracked(true);","isFullCredit":true},{"lineNumber":181,"author":{"gitId":"yamidark"},"content":"                }","isFullCredit":true},{"lineNumber":182,"author":{"gitId":"yamidark"},"content":"            }","isFullCredit":true},{"lineNumber":183,"author":{"gitId":"yamidark"},"content":"        }","isFullCredit":true},{"lineNumber":184,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":185,"author":{"gitId":"yamidark"},"content":"        // set all remaining lines in file that were untouched to be untracked","isFullCredit":true},{"lineNumber":186,"author":{"gitId":"yamidark"},"content":"        while (fileLinePointer \u003c lineInfos.size()) {","isFullCredit":true},{"lineNumber":187,"author":{"gitId":"yamidark"},"content":"            lineInfos.get(fileLinePointer++).setTracked(false);","isFullCredit":true},{"lineNumber":188,"author":{"gitId":"yamidark"},"content":"        }","isFullCredit":true},{"lineNumber":189,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":190,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":191,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * Traverses each file from the repo root directory, generates the {@link FileInfo} for each relevant file found","isFullCredit":true},{"lineNumber":193,"author":{"gitId":"yamidark"},"content":"     * based on {@code config} and inserts it into {@code fileInfos}.","isFullCredit":true},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * Adds binary files to {@link List} if {@code isBinaryFiles} is true. Otherwise, adds non-binary files","isFullCredit":true},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * to {@link List}.","isFullCredit":true},{"lineNumber":196,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":197,"author":{"gitId":"-"},"content":"    private List\u003cFileInfo\u003e getAllFileInfo(RepoConfiguration config, boolean isBinaryFiles) {","isFullCredit":true},{"lineNumber":198,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e fileInfos \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Set\u003cPath\u003e files \u003d getFiles(config, isBinaryFiles);","isFullCredit":true},{"lineNumber":200,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":201,"author":{"gitId":"-"},"content":"        for (Path relativePath : files) {","isFullCredit":true},{"lineNumber":202,"author":{"gitId":"-"},"content":"            if (!config.getFileTypeManager().isInsideWhitelistedFormats(relativePath.toString())","isFullCredit":true},{"lineNumber":203,"author":{"gitId":"-"},"content":"                    || FileUtil.isFileIgnoredByGlob(config, relativePath)) {","isFullCredit":true},{"lineNumber":204,"author":{"gitId":"-"},"content":"                continue;","isFullCredit":true},{"lineNumber":205,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":206,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":207,"author":{"gitId":"-"},"content":"            FileInfo fileInfo \u003d (isBinaryFiles)","isFullCredit":true},{"lineNumber":208,"author":{"gitId":"-"},"content":"                    ? new FileInfo(relativePath.toString())","isFullCredit":true},{"lineNumber":209,"author":{"gitId":"-"},"content":"                    : generateFileInfo(config, relativePath.toString());","isFullCredit":true},{"lineNumber":210,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":211,"author":{"gitId":"-"},"content":"            if (fileInfo.isFileAnalyzed()) {","isFullCredit":true},{"lineNumber":212,"author":{"gitId":"-"},"content":"                fileInfos.add(fileInfo);","isFullCredit":true},{"lineNumber":213,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":214,"author":{"gitId":"yamidark"},"content":"        }","isFullCredit":true},{"lineNumber":215,"author":{"gitId":"-"},"content":"        return fileInfos;","isFullCredit":true},{"lineNumber":216,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":217,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":218,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * Returns a {@link FileInfo} with a list of {@link LineInfo} for each line content in the","isFullCredit":true},{"lineNumber":220,"author":{"gitId":"-"},"content":"     * file located in the repository given by {@code config}/{@code relativePath}.","isFullCredit":true},{"lineNumber":221,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public FileInfo generateFileInfo(RepoConfiguration config, String relativePath) {","isFullCredit":true},{"lineNumber":223,"author":{"gitId":"-"},"content":"        return generateFileInfo(config.getRepoRoot(), relativePath, config.getFileSizeLimit(),","isFullCredit":true},{"lineNumber":224,"author":{"gitId":"-"},"content":"            config.isFileSizeLimitIgnored(), config.isIgnoredFileAnalysisSkipped());","isFullCredit":true},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":226,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Returns a {@link FileInfo} with a list of {@link LineInfo} for each line content in the","isFullCredit":true},{"lineNumber":229,"author":{"gitId":"-"},"content":"     * file located at the {@link Path} given by {@code repoRoot}/{@code relativePath}. {@code fileSizeLimit} and","isFullCredit":true},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * {@code ignoreFileSizeLimit} are used to set whether the file size limit is exceeding. {@link LineInfo}s are","isFullCredit":true},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * not included in {@link FileInfo} if  {@code skipIgnoredFileAnalysis} is true and file size limit is exceeding.","isFullCredit":true},{"lineNumber":232,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public FileInfo generateFileInfo(String repoRoot, String relativePath, long fileSizeLimit,","isFullCredit":true},{"lineNumber":234,"author":{"gitId":"-"},"content":"            boolean ignoreFileSizeLimit, boolean skipIgnoredFileAnalysis) {","isFullCredit":true},{"lineNumber":235,"author":{"gitId":"yong24s"},"content":"        FileInfo fileInfo \u003d new FileInfo(relativePath);","isFullCredit":true},{"lineNumber":236,"author":{"gitId":"yamidark"},"content":"        Path path \u003d Paths.get(repoRoot, fileInfo.getPath());","isFullCredit":true},{"lineNumber":237,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":238,"author":{"gitId":"yamidark"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(path.toFile()))) {","isFullCredit":true},{"lineNumber":239,"author":{"gitId":"-"},"content":"            long fileSize \u003d Files.size(path);","isFullCredit":true},{"lineNumber":240,"author":{"gitId":"-"},"content":"            fileInfo.setFileSize(fileSize);","isFullCredit":true},{"lineNumber":241,"author":{"gitId":"-"},"content":"            if (!ignoreFileSizeLimit \u0026\u0026 fileSize \u003e fileSizeLimit) {","isFullCredit":true},{"lineNumber":242,"author":{"gitId":"-"},"content":"                fileInfo.setExceedsSizeLimit(true);","isFullCredit":true},{"lineNumber":243,"author":{"gitId":"-"},"content":"                if (skipIgnoredFileAnalysis) {","isFullCredit":true},{"lineNumber":244,"author":{"gitId":"-"},"content":"                    logger.log(Level.WARNING, String.format(MESSAGE_FILE_SIZE_LIMIT_EXCEEDED,","isFullCredit":true},{"lineNumber":245,"author":{"gitId":"-"},"content":"                            fileInfo.getPath(), fileSize, fileSizeLimit, MESSAGE_FILE_ANALYSIS_SKIPPED));","isFullCredit":true},{"lineNumber":246,"author":{"gitId":"-"},"content":"                    fileInfo.setFileAnalyzed(false);","isFullCredit":true},{"lineNumber":247,"author":{"gitId":"-"},"content":"                    return fileInfo;","isFullCredit":true},{"lineNumber":248,"author":{"gitId":"-"},"content":"                }","isFullCredit":true},{"lineNumber":249,"author":{"gitId":"-"},"content":"                logger.log(Level.WARNING, String.format(MESSAGE_FILE_SIZE_LIMIT_EXCEEDED,","isFullCredit":true},{"lineNumber":250,"author":{"gitId":"-"},"content":"                        fileInfo.getPath(), fileSize, fileSizeLimit, MESSAGE_FILE_EXCLUDED_FROM_REPORT));","isFullCredit":true},{"lineNumber":251,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":252,"author":{"gitId":"yamidark"},"content":"            String line;","isFullCredit":true},{"lineNumber":253,"author":{"gitId":"yamidark"},"content":"            int lineNum \u003d 1;","isFullCredit":true},{"lineNumber":254,"author":{"gitId":"yamidark"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","isFullCredit":true},{"lineNumber":255,"author":{"gitId":"yamidark"},"content":"                fileInfo.addLine(new LineInfo(lineNum++, line));","isFullCredit":true},{"lineNumber":256,"author":{"gitId":"yamidark"},"content":"            }","isFullCredit":true},{"lineNumber":257,"author":{"gitId":"yamidark"},"content":"        } catch (IOException ioe) {","isFullCredit":true},{"lineNumber":258,"author":{"gitId":"yamidark"},"content":"            logger.log(Level.SEVERE, ioe.getMessage(), ioe);","isFullCredit":true},{"lineNumber":259,"author":{"gitId":"yamidark"},"content":"        }","isFullCredit":true},{"lineNumber":260,"author":{"gitId":"yamidark"},"content":"        return fileInfo;","isFullCredit":true},{"lineNumber":261,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":262,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":263,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":264,"author":{"gitId":"yamidark"},"content":"     * Returns the starting line changed number, within the file diff result, by matching the pattern inside","isFullCredit":true},{"lineNumber":265,"author":{"gitId":"yamidark"},"content":"     * {@code linesChanged}.","isFullCredit":true},{"lineNumber":266,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":267,"author":{"gitId":"-"},"content":"     * @throws AssertionError if matching line number pattern in chunk header fails.","isFullCredit":true},{"lineNumber":268,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":269,"author":{"gitId":"-"},"content":"    private int getStartingLineNumber(String linesChanged) throws AssertionError {","isFullCredit":true},{"lineNumber":270,"author":{"gitId":"yamidark"},"content":"        Matcher chunkHeaderMatcher \u003d STARTING_LINE_NUMBER_PATTERN.matcher(linesChanged);","isFullCredit":true},{"lineNumber":271,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":272,"author":{"gitId":"yamidark"},"content":"        if (!chunkHeaderMatcher.find()) {","isFullCredit":true},{"lineNumber":273,"author":{"gitId":"yamidark"},"content":"            logger.severe(String.format(MATCH_GROUP_FAIL_MESSAGE_FORMAT, \"line changed\", linesChanged));","isFullCredit":true},{"lineNumber":274,"author":{"gitId":"yamidark"},"content":"            throw new AssertionError(\"Should not have error matching line number pattern inside chunk header!\");","isFullCredit":true},{"lineNumber":275,"author":{"gitId":"yamidark"},"content":"        }","isFullCredit":true},{"lineNumber":276,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":277,"author":{"gitId":"yamidark"},"content":"        return Integer.parseInt(chunkHeaderMatcher.group(STARTING_LINE_NUMBER_GROUP_NAME));","isFullCredit":true},{"lineNumber":278,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":279,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":280,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":281,"author":{"gitId":"-"},"content":"     * Returns true if {@code filePath} is valid and the file is not in binary (i.e. part of {@code textFilesSet}).","isFullCredit":true},{"lineNumber":282,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":283,"author":{"gitId":"-"},"content":"    private boolean isValidTextFile(String filePath, Set\u003cPath\u003e textFilesSet) {","isFullCredit":true},{"lineNumber":284,"author":{"gitId":"-"},"content":"        boolean isValidFilePath;","isFullCredit":true},{"lineNumber":285,"author":{"gitId":"-"},"content":"        try {","isFullCredit":true},{"lineNumber":286,"author":{"gitId":"-"},"content":"            isValidFilePath \u003d FileUtil.isValidPathWithLogging(filePath);","isFullCredit":true},{"lineNumber":287,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","isFullCredit":true},{"lineNumber":288,"author":{"gitId":"-"},"content":"            logger.log(Level.WARNING, String.format(MESSAGE_INVALID_FILE_PATH, filePath));","isFullCredit":true},{"lineNumber":289,"author":{"gitId":"-"},"content":"            isValidFilePath \u003d false;","isFullCredit":true},{"lineNumber":290,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":291,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":292,"author":{"gitId":"-"},"content":"        return isValidFilePath \u0026\u0026 textFilesSet.contains(Paths.get(filePath));","isFullCredit":true},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":294,"author":{"gitId":"yamidark"},"content":"}","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":1,"yamidark":150,"yong24s":1,"eugenepeh":10,"-":132}},{"path":"src/main/java/reposense/authorship/FileResultAggregator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yamidark"},"content":"package reposense.authorship;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"yamidark"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"yamidark"},"content":"import reposense.authorship.model.AuthorshipSummary;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yamidark"},"content":"import reposense.authorship.model.FileResult;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yamidark"},"content":"import reposense.authorship.model.LineInfo;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"yamidark"},"content":"import reposense.model.Author;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import reposense.model.FileType;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"yamidark"},"content":"/**","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"yamidark"},"content":" * Aggregates the file analysis results to get the contribution and issue summary for all authors.","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"yamidark"},"content":" */","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"yamidark"},"content":"public class FileResultAggregator {","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the {@link AuthorshipSummary} generated from aggregating the {@code fileResults} and {@code fileTypes}","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * for each {@link Author} in the list of {@code authors}.","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public AuthorshipSummary aggregateFileResult(List\u003cFileResult\u003e fileResults, List\u003cAuthor\u003e authors,","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"            List\u003cFileType\u003e fileTypes) {","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AuthorshipSummary authorContributionSummary \u003d new AuthorshipSummary(fileResults, authors, fileTypes);","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"yamidark"},"content":"        for (FileResult fileResult : fileResults) {","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"            if (fileResult.isBinary()) {","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"                continue;","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"yamidark"},"content":"            for (LineInfo lineInfo : fileResult.getLines()) {","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"yamidark"},"content":"                Author author \u003d lineInfo.getAuthor();","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"yamidark"},"content":"                if (!authors.contains(author)) {","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"yamidark"},"content":"                    continue;","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"yamidark"},"content":"                }","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"                authorContributionSummary.addAuthorContributionCount(author, fileResult.getFileType());","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"yamidark"},"content":"            }","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"            if (fileResult.isIgnored()) {","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"                fileResult.clearLines();","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"yamidark"},"content":"        }","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"yamidark"},"content":"        return authorContributionSummary;","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"yamidark"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yamidark":27,"-":13}},{"path":"src/main/java/reposense/authorship/analyzer/AnnotatorAnalyzer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yamidark"},"content":"package reposense.authorship.analyzer;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"eugenepeh"},"content":"import java.util.regex.Matcher;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"eugenepeh"},"content":"import java.util.regex.Pattern;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"yamidark"},"content":"import reposense.authorship.model.FileInfo;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yamidark"},"content":"import reposense.authorship.model.LineInfo;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"yamidark"},"content":"import reposense.model.Author;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.model.AuthorConfiguration;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"yamidark"},"content":"/**","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"yamidark"},"content":" * Analyzes the authorship of a {@code FileInfo} using the given annotations on the file.","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Only the lines with the format (START OF LINE) COMMENT_SYMBOL @@author ONE_STRING_WITH_NO_SPACE (END OF LINE)","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":" * will be analyzed. Otherwise, the line will be ignored and treated as normal lines.","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":" * If the line is analyzed, and the string following the author tag is a valid git id, and there is no author config","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":" * file, then the code will be attributed to the author with that git id. Otherwise, the code will be attributed to","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":" * unknown author.","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"yamidark"},"content":" */","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AnnotatorAnalyzer {","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String AUTHOR_TAG \u003d \"@@author\";","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String REGEX_AUTHOR_TAG_FORMAT \u003d \"@@author(\\\\s+.*)?\";","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String[][] COMMENT_FORMATS \u003d {","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"            {\"//\", null},","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"            {\"/\\\\*\", \"\\\\*/\"},","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"            {\"#\", null},","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"            {\"\u003c!--\", \"--\u003e\"},","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"            {\"%\", null},","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"            {\"\\\\[.*]:\\\\s*#\\\\s*\\\\(\", \"\\\\)\"},","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"            {\"\u003c!---\", \"---\u003e\"}","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"    };","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Pattern[] COMMENT_PATTERNS \u003d {","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"            Pattern.compile(generateCommentRegex(COMMENT_FORMATS[0][0], COMMENT_FORMATS[0][1])),","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"            Pattern.compile(generateCommentRegex(COMMENT_FORMATS[1][0], COMMENT_FORMATS[1][1])),","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"            Pattern.compile(generateCommentRegex(COMMENT_FORMATS[2][0], COMMENT_FORMATS[2][1])),","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"            Pattern.compile(generateCommentRegex(COMMENT_FORMATS[3][0], COMMENT_FORMATS[3][1])),","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"            Pattern.compile(generateCommentRegex(COMMENT_FORMATS[4][0], COMMENT_FORMATS[4][1])),","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"            Pattern.compile(generateCommentRegex(COMMENT_FORMATS[5][0], COMMENT_FORMATS[5][1])),","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"            Pattern.compile(generateCommentRegex(COMMENT_FORMATS[6][0], COMMENT_FORMATS[6][1]))","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"    };","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"yamidark"},"content":"     * Overrides the authorship information in {@code fileInfo} based on annotations given on the file.","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @param fileInfo FileInfo to be further analyzed with author annotations.","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param authorConfig AuthorConfiguration for current analysis.","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static void aggregateAnnotationAuthorInfo(FileInfo fileInfo, AuthorConfiguration authorConfig) {","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Optional\u003cAuthor\u003e currentAnnotatedAuthor \u003d Optional.empty();","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Path filePath \u003d Paths.get(fileInfo.getPath());","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"yamidark"},"content":"        for (LineInfo lineInfo : fileInfo.getLines()) {","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"            String lineContent \u003d lineInfo.getContent();","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (lineContent.contains(AUTHOR_TAG) \u0026\u0026 isValidCommentLine(lineContent)) {","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"                Optional\u003cAuthor\u003e newAnnotatedAuthor \u003d findAuthorInLine(lineContent, authorConfig);","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"                boolean isEndOfAnnotatedSegment \u003d currentAnnotatedAuthor.isPresent() \u0026\u0026 !newAnnotatedAuthor.isPresent();","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"                boolean isUnknownAuthorSegment \u003d !currentAnnotatedAuthor.isPresent() \u0026\u0026 !newAnnotatedAuthor.isPresent();","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"                if (isEndOfAnnotatedSegment) {","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"                    lineInfo.setAuthor(currentAnnotatedAuthor.get());","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"                    currentAnnotatedAuthor \u003d Optional.empty();","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"                } else if (isUnknownAuthorSegment) {","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"                    currentAnnotatedAuthor \u003d Optional.of(Author.UNKNOWN_AUTHOR);","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"                } else {","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"                    currentAnnotatedAuthor \u003d newAnnotatedAuthor.filter(author -\u003e !author.isIgnoringFile(filePath));","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"                }","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"            currentAnnotatedAuthor.ifPresent(lineInfo::setAuthor);","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns an optional {@code Author} corresponding to the @@author tag in {@code line}.","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * It looks for the corresponding {@code Author} object in the {@code authorAliasMap} inside","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code authorConfig} and returns it. If an author config file is specified and the","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * author name found is not in it, then it returns {@code Author#UNKNOWN_AUTHOR} instead.","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param line Line to be analyzed.","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param authorConfig AuthorConfiguration for the analysis of this repo.","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @return Optional {@code Author} found in the line.","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static Optional\u003cAuthor\u003e findAuthorInLine(String line, AuthorConfiguration authorConfig) {","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Optional\u003cString\u003e optionalName \u003d extractAuthorName(line);","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"        optionalName.filter(name -\u003e !authorConfig.containsName(name) \u0026\u0026 !authorConfig.hasAuthorConfigFile())","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .ifPresent(name -\u003e authorConfig.addAuthor(new Author(name)));","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return optionalName.map(name -\u003e authorConfig.getAuthor(name, name));","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Extracts the {@link Author} name that follows the specific format from {@code line} at {@code formatIndex}.","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param line Line to extract the author\u0027s name from.","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return An optional string containing the author\u0027s name.","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static Optional\u003cString\u003e extractAuthorName(String line) {","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return Optional.of(line)","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"                // gets component after AUTHOR_TAG","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .map(l -\u003e l.split(AUTHOR_TAG))","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .filter(array -\u003e array.length \u003e\u003d 2)","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"                // separates by end-comment format to obtain the author\u0027s name at the zeroth index","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .map(array -\u003e COMMENT_FORMATS[getCommentTypeIndex(line)][1] !\u003d null","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"-"},"content":"                        ? array[1].trim().split(COMMENT_FORMATS[getCommentTypeIndex(line)][1])","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"                        : new String[]{ array[1].trim() })","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .filter(array -\u003e array.length \u003e 0)","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .map(array -\u003e array[0].trim())","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"-"},"content":"                // checks if the author name is not empty","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .filter(trimmedParameters -\u003e !trimmedParameters.isEmpty());","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Generates regex for valid comment formats in which author tag is found, with {@code REGEX_AUTHOR_TAG_FORMAT}","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * flanked by {@code commentStart} and {@code commentEnd}.","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private static String generateCommentRegex(String commentStart, String commentEnd) {","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (commentEnd \u003d\u003d null) {","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return \"^[\\\\s]*\" + commentStart + \"[\\\\s]*\" + REGEX_AUTHOR_TAG_FORMAT + \"[\\\\s]*$\";","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return \"^[\\\\s]*\" + commentStart + \"[\\\\s]*\" + REGEX_AUTHOR_TAG_FORMAT + \"[\\\\s]*(\" + commentEnd + \")?[\\\\s]*$\";","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Returns the index in {@code COMMENT_FORMATS} representing the type of comment the @@author tag line is.","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @param line The line to be checked","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @return The index of the comment syntax type if the comment pattern matches, -1 if no match could be found","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static int getCommentTypeIndex(String line) {","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c COMMENT_PATTERNS.length; i++) {","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"-"},"content":"            Pattern commentPattern \u003d COMMENT_PATTERNS[i];","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"-"},"content":"            Matcher matcher \u003d commentPattern.matcher(line);","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"-"},"content":"            if (matcher.find()) {","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"-"},"content":"                return i;","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return -1;","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Returns true if line is one of the supported comment types.","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @param line Line to be checked.","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @return True if line is a valid comment line.","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private static boolean isValidCommentLine(String line) {","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return getCommentTypeIndex(line) \u003e\u003d 0;","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yamidark":11,"eugenepeh":3,"-":138}},{"path":"src/main/java/reposense/authorship/model/AuthorshipSummary.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yamidark"},"content":"package reposense.authorship.model;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"yamidark"},"content":"import java.util.HashMap;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.LinkedHashMap;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"yamidark"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"yamidark"},"content":"import reposense.model.Author;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import reposense.model.FileType;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"yamidark"},"content":"/**","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"yamidark"},"content":" * Stores the contribution summary of the authors in the repo.","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"yamidark"},"content":" */","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"yamidark"},"content":"public class AuthorshipSummary {","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"yamidark"},"content":"    private final List\u003cFileResult\u003e fileResults;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final Map\u003cAuthor, LinkedHashMap\u003cFileType, Integer\u003e\u003e authorFileTypeContributionMap;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public AuthorshipSummary(List\u003cFileResult\u003e fileResults, List\u003cAuthor\u003e authors, List\u003cFileType\u003e fileTypes) {","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"yamidark"},"content":"        this.fileResults \u003d fileResults;","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"        authorFileTypeContributionMap \u003d new HashMap\u003c\u003e();","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"        for (Author author : authors) {","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"            LinkedHashMap\u003cFileType, Integer\u003e defaultFileTypeContribution \u003d new LinkedHashMap\u003c\u003e();","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"            fileTypes.forEach(fileType -\u003e defaultFileTypeContribution.put(fileType, 0));","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"            authorFileTypeContributionMap.put(author, defaultFileTypeContribution);","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Increments the corresponding {@code fileType} contribution count of {@code author} by one.","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void addAuthorContributionCount(Author author, FileType fileType) {","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cFileType, Integer\u003e fileTypeContributionMap \u003d authorFileTypeContributionMap.get(author);","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"        fileTypeContributionMap.put(fileType, fileTypeContributionMap.getOrDefault(fileType, 0) + 1);","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Map\u003cAuthor, LinkedHashMap\u003cFileType, Integer\u003e\u003e getAuthorFileTypeContributionMap() {","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return authorFileTypeContributionMap;","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"yamidark"},"content":"    public List\u003cFileResult\u003e getFileResults() {","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"yamidark"},"content":"        return fileResults;","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"yamidark"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yamidark":25,"-":20}},{"path":"src/main/java/reposense/authorship/model/FileInfo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yamidark"},"content":"package reposense.authorship.model;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"yamidark"},"content":"import java.util.ArrayList;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"yamidark"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yamidark"},"content":"import reposense.model.Author;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"import reposense.model.FileType;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"yong24s"},"content":"import reposense.util.SystemUtil;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"yamidark"},"content":"/**","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Stores the path to the file, the list of {@code LineInfo} for each line in the file and file size.","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"yamidark"},"content":" */","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"yamidark"},"content":"public class FileInfo {","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"yamidark"},"content":"    private final String path;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"yamidark"},"content":"    private final ArrayList\u003cLineInfo\u003e lines;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private FileType fileType;","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private long fileSize;","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private boolean exceedsFileLimit \u003d false;","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private boolean isFileAnalyzed \u003d true;","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"yamidark"},"content":"    public FileInfo(String path) {","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"yong24s"},"content":"        if (SystemUtil.isWindows()) {","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"yong24s"},"content":"            // Only replace \\ to / in Windows paths, so it does not interferes with a correct Unix path","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"yong24s"},"content":"            path \u003d path.replace(\u0027\\\\\u0027, \u0027/\u0027);","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"yong24s"},"content":"        }","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"yamidark"},"content":"        this.path \u003d path;","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"yamidark"},"content":"        lines \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if none of the {@link Author} in {@code listedAuthors} contributed to this file.","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"yamidark"},"content":"    public boolean isAllAuthorsIgnored(List\u003cAuthor\u003e listedAuthors) {","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"yamidark"},"content":"        return lines.stream().noneMatch(line -\u003e listedAuthors.contains(line.getAuthor()));","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"yamidark"},"content":"    public LineInfo getLine(int num) {","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"yamidark"},"content":"        return lines.get(num - 1);","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"yamidark"},"content":"    public void addLine(LineInfo line) {","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"yamidark"},"content":"        lines.add(line);","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public int getNumOfLines() {","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return lines.size();","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"yamidark"},"content":"    public ArrayList\u003cLineInfo\u003e getLines() {","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"yamidark"},"content":"        return lines;","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"yamidark"},"content":"    public String getPath() {","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"yamidark"},"content":"        return path;","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public FileType getFileType() {","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return fileType;","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setFileType(FileType fileType) {","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.fileType \u003d fileType;","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public long getFileSize() {","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this.fileSize;","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setFileSize(long fileSize) {","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.fileSize \u003d fileSize;","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setFileAnalyzed(boolean isFileAnalyzed) {","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.isFileAnalyzed \u003d isFileAnalyzed;","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean isFileAnalyzed() {","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return isFileAnalyzed;","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public boolean exceedsFileLimit() {","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return exceedsFileLimit;","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setExceedsSizeLimit(boolean exceedsFileLimit) {","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.exceedsFileLimit \u003d exceedsFileLimit;","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Sets the {@code author} of the {@link LineInfo} in {@code lineNumber} for this {@link FileInfo}.","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"yamidark"},"content":"    public void setLineAuthor(int lineNumber, Author author) {","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"yamidark"},"content":"        lines.get(lineNumber).setAuthor(author);","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"jamessspanggg"},"content":"    /**","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Sets the {@code lastModifiedDate} of the {@link LineInfo} in {@code lineNumber} for this {@link FileInfo}.","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"jamessspanggg"},"content":"     */","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void setLineLastModifiedDate(int lineNumber, LocalDateTime lastModifiedDate) {","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"jamessspanggg"},"content":"        lines.get(lineNumber).setLastModifiedDate(lastModifiedDate);","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Returns true if the {@link LineInfo} in {@code lineNumber} index is being tracked.","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"yamidark"},"content":"    public boolean isFileLineTracked(int lineNumber) {","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"yamidark"},"content":"        return getLines().get(lineNumber).isTracked();","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"yamidark"},"content":"    @Override","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"yamidark"},"content":"    public boolean equals(Object other) {","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"yamidark"},"content":"        if (this \u003d\u003d other) {","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"yamidark"},"content":"            return true;","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"yamidark"},"content":"        }","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"yamidark"},"content":"        if (!(other instanceof FileInfo)) {","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"yamidark"},"content":"            return false;","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"yamidark"},"content":"        }","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"yamidark"},"content":"        FileInfo otherFileInfo \u003d (FileInfo) other;","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"yamidark"},"content":"        return path.equals(otherFileInfo.path)","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"yamidark"},"content":"                \u0026\u0026 lines.equals(otherFileInfo.lines);","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"yamidark"},"content":"}","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":5,"yamidark":67,"yong24s":6,"-":49}},{"path":"src/main/java/reposense/authorship/model/FileResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yamidark"},"content":"package reposense.authorship.model;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"yamidark"},"content":"import java.util.ArrayList;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"yamidark"},"content":"import java.util.HashMap;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"yamidark"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yamidark"},"content":"import reposense.model.Author;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"import reposense.model.FileType;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yamidark"},"content":"/**","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Stores the result from analyzing a {@link FileInfo}.","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"yamidark"},"content":" */","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"yamidark"},"content":"public class FileResult {","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"yamidark"},"content":"    private final String path;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private FileType fileType;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Boolean isBinary \u003d null; // Should only be true or null to prevent it from being serialized","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Boolean isIgnored \u003d null;","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"yamidark"},"content":"    private final ArrayList\u003cLineInfo\u003e lines;","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"yamidark"},"content":"    private final HashMap\u003cAuthor, Integer\u003e authorContributionMap;","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FileResult(String path, FileType fileType, ArrayList\u003cLineInfo\u003e lines,","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"            HashMap\u003cAuthor, Integer\u003e authorContributionMap, boolean isBinary, boolean isIgnored) {","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"yamidark"},"content":"        this.path \u003d path;","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.fileType \u003d fileType;","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"yamidark"},"content":"        this.lines \u003d lines;","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"yamidark"},"content":"        this.authorContributionMap \u003d authorContributionMap;","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // isBinary and isIgnored are mutually exclusive","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assert !(isBinary \u0026\u0026 isIgnored);","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (isBinary) {","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"            this.isBinary \u003d true;","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"        } else if (isIgnored) {","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"            this.isIgnored \u003d true;","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static FileResult createTextFileResult(String path, FileType fileType, ArrayList\u003cLineInfo\u003e lines,","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"            HashMap\u003cAuthor, Integer\u003e authorContributionMap, boolean isIgnored) {","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new FileResult(path, fileType, lines, authorContributionMap, false, isIgnored);","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static FileResult createBinaryFileResult(String path, FileType fileType, HashMap\u003cAuthor,","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"            Integer\u003e authorContributionMap) {","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new FileResult(path, fileType, new ArrayList\u003c\u003e(), authorContributionMap, true, false);","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean isBinary() {","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return isBinary !\u003d null;","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean isIgnored() {","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return isIgnored !\u003d null;","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"yamidark"},"content":"    public List\u003cLineInfo\u003e getLines() {","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"yamidark"},"content":"        return lines;","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"yamidark"},"content":"    public String getPath() {","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"yamidark"},"content":"        return path;","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public FileType getFileType() {","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return fileType;","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void clearLines() {","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.lines.clear();","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"yamidark"},"content":"    public HashMap\u003cAuthor, Integer\u003e getAuthorContributionMap() {","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"yamidark"},"content":"        return authorContributionMap;","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"yamidark"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yamidark":32,"-":41}},{"path":"src/main/java/reposense/authorship/model/LineInfo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yamidark"},"content":"package reposense.authorship.model;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"yamidark"},"content":"import java.util.Objects;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yamidark"},"content":"import reposense.model.Author;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"yamidark"},"content":"/**","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Stores the information of a line in a {@link FileInfo}.","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yamidark"},"content":" */","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"eugenepeh"},"content":"public class LineInfo {","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int lineNumber;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Author author;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private String content;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private LocalDateTime lastModifiedDate;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"yamidark"},"content":"    private transient boolean isTracked;","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public LineInfo(int lineNumber, String content) {","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.lineNumber \u003d lineNumber;","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.content \u003d content;","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"yamidark"},"content":"        isTracked \u003d true;","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Author getAuthor() {","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return author;","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void setAuthor(Author author) {","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.author \u003d author;","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public int getLineNumber() {","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return lineNumber;","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String getContent() {","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return content;","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"yamidark"},"content":"    public void setTracked(boolean isTracked) {","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"yamidark"},"content":"        this.isTracked \u003d isTracked;","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public LocalDateTime getLastModifiedDate() {","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"jamessspanggg"},"content":"        return lastModifiedDate;","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setLastModifiedDate(LocalDateTime lastModifiedDate) {","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"jamessspanggg"},"content":"        this.lastModifiedDate \u003d lastModifiedDate;","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"yamidark"},"content":"    public boolean isTracked() {","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"yamidark"},"content":"        return isTracked;","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"yamidark"},"content":"    @Override","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"yamidark"},"content":"    public boolean equals(Object other) {","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"yamidark"},"content":"        if (this \u003d\u003d other) {","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"yamidark"},"content":"            return true;","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"yamidark"},"content":"        }","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"yamidark"},"content":"        if (!(other instanceof LineInfo)) {","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"yamidark"},"content":"            return false;","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"yamidark"},"content":"        }","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"yamidark"},"content":"        LineInfo otherLineInfo \u003d (LineInfo) other;","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"yamidark"},"content":"        return lineNumber \u003d\u003d otherLineInfo.lineNumber","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"yamidark"},"content":"                \u0026\u0026 Objects.equals(author, otherLineInfo.author)","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"yamidark"},"content":"                \u0026\u0026 content.equals(otherLineInfo.content)","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"jamessspanggg"},"content":"                \u0026\u0026 isTracked \u003d\u003d otherLineInfo.isTracked","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"jamessspanggg"},"content":"                \u0026\u0026 ((lastModifiedDate \u003d\u003d null \u0026\u0026 otherLineInfo.lastModifiedDate \u003d\u003d null)","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"jamessspanggg"},"content":"                    || (lastModifiedDate.equals(otherLineInfo.lastModifiedDate)));","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":9,"yamidark":32,"eugenepeh":1,"-":35}},{"path":"src/main/java/reposense/commits/CommitInfoAnalyzer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yamidark"},"content":"package reposense.commits;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"jamessspanggg"},"content":"import static reposense.util.StringsUtil.removeQuote;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.ZonedDateTime;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"jamessspanggg"},"content":"import java.util.Arrays;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yamidark"},"content":"import java.util.Comparator;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"jamessspanggg"},"content":"import java.util.HashMap;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"yamidark"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"jamessspanggg"},"content":"import java.util.Map;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"yamidark"},"content":"import java.util.logging.Level;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"yamidark"},"content":"import java.util.logging.Logger;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"yamidark"},"content":"import java.util.regex.Matcher;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"yamidark"},"content":"import java.util.regex.Pattern;","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"yamidark"},"content":"import java.util.stream.Collectors;","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"yamidark"},"content":"import reposense.commits.model.CommitInfo;","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"yamidark"},"content":"import reposense.commits.model.CommitResult;","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"jamessspanggg"},"content":"import reposense.commits.model.ContributionPair;","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"yamidark"},"content":"import reposense.model.Author;","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"jamessspanggg"},"content":"import reposense.model.FileType;","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"yamidark"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"yamidark"},"content":"import reposense.system.LogsManager;","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"yamidark"},"content":"/**","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"yamidark"},"content":" * Analyzes commit information found in the git log.","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"yamidark"},"content":" */","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"yamidark"},"content":"public class CommitInfoAnalyzer {","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final DateTimeFormatter GIT_STRICT_ISO_DATE_FORMAT \u003d","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm:ssz\");","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"jamessspanggg"},"content":"    private static final String TAB_SPLITTER \u003d \"\\t\";","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"jamessspanggg"},"content":"    private static final String MOVED_FILE_INDICATION \u003d \"\u003d\u003e \";","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"jamessspanggg"},"content":"    private static final String BINARY_FILE_CONTRIBUTION \u003d \"-\";","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"jamessspanggg"},"content":"    private static final int STAT_ADDITION_INDEX \u003d 0;","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"jamessspanggg"},"content":"    private static final int STAT_DELETION_INDEX \u003d 1;","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"jamessspanggg"},"content":"    private static final int STAT_FILE_PATH_INDEX \u003d 2;","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"yamidark"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(CommitInfoAnalyzer.class);","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_START_ANALYZING_COMMIT_INFO \u003d \"Analyzing commits info for %s (%s)...\";","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String HASH_SPLITTER \u003d \"\\\\s\";","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String LOG_SPLITTER \u003d \"\\\\|\\\\n\\\\|\";","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"jamessspanggg"},"content":"    private static final String REF_SPLITTER \u003d \",\\\\s\";","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"jamessspanggg"},"content":"    private static final String NEW_LINE_SPLITTER \u003d \"\\\\n\";","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"jamessspanggg"},"content":"    private static final String TAG_PREFIX \u003d \"tag:\";","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"yamidark"},"content":"    private static final int COMMIT_HASH_INDEX \u003d 0;","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final int PARENT_HASHES_INDEX \u003d 1;","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final int AUTHOR_INDEX \u003d 2;","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final int EMAIL_INDEX \u003d 3;","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final int DATE_INDEX \u003d 4;","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final int MESSAGE_TITLE_INDEX \u003d 5;","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static final int MESSAGE_BODY_INDEX \u003d 6;","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static final int REF_NAME_INDEX \u003d 7;","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static final Pattern MESSAGEBODY_LEADING_PATTERN \u003d Pattern.compile(\"^ {4}\", Pattern.MULTILINE);","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Analyzes each {@link CommitInfo} in {@code commitInfos} and returns a list of {@link CommitResult} that is not","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"yamidark"},"content":"     * specified to be ignored or the author is inside {@code config}.","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public List\u003cCommitResult\u003e analyzeCommits(List\u003cCommitInfo\u003e commitInfos, RepoConfiguration config) {","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logger.info(String.format(MESSAGE_START_ANALYZING_COMMIT_INFO, config.getLocation(), config.getBranch()));","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"yamidark"},"content":"        return commitInfos.stream()","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .map(commitInfo -\u003e analyzeCommit(commitInfo, config))","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"eugenepeh"},"content":"                .filter(commitResult -\u003e !commitResult.getAuthor().equals(Author.UNKNOWN_AUTHOR)","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"                        \u0026\u0026 !CommitHash.isInsideCommitList(commitResult.getHash(), config.getIgnoreCommitList()))","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .distinct()","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"yamidark"},"content":"                .sorted(Comparator.comparing(CommitResult::getTime))","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"yamidark"},"content":"                .collect(Collectors.toList());","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Extracts the relevant data from {@code commitInfo} into a {@link CommitResult}. Retrieves the author of the","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * commit from {@code config}.","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public CommitResult analyzeCommit(CommitInfo commitInfo, RepoConfiguration config) {","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"yamidark"},"content":"        String infoLine \u003d commitInfo.getInfoLine();","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"yamidark"},"content":"        String statLine \u003d commitInfo.getStatLine();","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String[] elements \u003d infoLine.split(LOG_SPLITTER, 8);","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"yamidark"},"content":"        String hash \u003d elements[COMMIT_HASH_INDEX];","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Boolean isMergeCommit \u003d elements[PARENT_HASHES_INDEX].split(HASH_SPLITTER).length \u003e 1;","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Author author \u003d config.getAuthor(elements[AUTHOR_INDEX], elements[EMAIL_INDEX]);","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"        ZonedDateTime date \u003d null;","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"yamidark"},"content":"        try {","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"            date \u003d ZonedDateTime.parse(elements[DATE_INDEX], GIT_STRICT_ISO_DATE_FORMAT);","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException pe) {","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"yamidark"},"content":"            logger.log(Level.WARNING, \"Unable to parse the date from git log result for commit.\", pe);","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"yamidark"},"content":"        }","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // Commit date may be in a timezone different from the one given in the config.","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"        LocalDateTime adjustedDate \u003d date.withZoneSameInstant(config.getZoneId()).toLocalDateTime();","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String messageTitle \u003d (elements.length \u003e MESSAGE_TITLE_INDEX) ? elements[MESSAGE_TITLE_INDEX] : \"\";","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String messageBody \u003d (elements.length \u003e MESSAGE_BODY_INDEX)","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"                ? getCommitMessageBody(elements[MESSAGE_BODY_INDEX]) : \"\";","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"jamessspanggg"},"content":"        String[] refs \u003d (elements.length \u003e REF_NAME_INDEX)","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"jamessspanggg"},"content":"                ? elements[REF_NAME_INDEX].split(REF_SPLITTER)","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"jamessspanggg"},"content":"                : new String[]{\"\"};","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"jamessspanggg"},"content":"        String[] tags \u003d Arrays.stream(refs).filter(ref -\u003e ref.contains(TAG_PREFIX)).toArray(String[]::new);","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"jamessspanggg"},"content":"        if (tags.length \u003d\u003d 0) {","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"jamessspanggg"},"content":"            tags \u003d null; // set to null so it won\u0027t be converted to json","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"jamessspanggg"},"content":"        } else {","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"jamessspanggg"},"content":"            extractTagNames(tags);","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"jamessspanggg"},"content":"        }","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"jamessspanggg"},"content":"        if (statLine.isEmpty()) { // empty commit, no files changed","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return new CommitResult(author, hash, isMergeCommit, adjustedDate, messageTitle, messageBody, tags);","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"jamessspanggg"},"content":"        }","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"jamessspanggg"},"content":"        String[] statInfos \u003d statLine.split(NEW_LINE_SPLITTER);","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"jamessspanggg"},"content":"        String[] fileTypeContributions \u003d Arrays.copyOfRange(statInfos, 0, statInfos.length - 1);","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"jamessspanggg"},"content":"        Map\u003cFileType, ContributionPair\u003e fileTypeAndContributionMap \u003d","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"jamessspanggg"},"content":"                getFileTypesAndContribution(fileTypeContributions, config);","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return new CommitResult(author, hash, isMergeCommit, adjustedDate, messageTitle, messageBody, tags,","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"-"},"content":"                fileTypeAndContributionMap);","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"jamessspanggg"},"content":"    /**","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Returns the number of lines added and deleted in {@code filePathContributions} for the specified file types","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * in {@code config}.","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"jamessspanggg"},"content":"     */","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private Map\u003cFileType, ContributionPair\u003e getFileTypesAndContribution(String[] filePathContributions,","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"jamessspanggg"},"content":"            RepoConfiguration config) {","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"jamessspanggg"},"content":"        Map\u003cFileType, ContributionPair\u003e fileTypesAndContributionMap \u003d new HashMap\u003c\u003e();","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"jamessspanggg"},"content":"        for (String filePathContribution : filePathContributions) {","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"jamessspanggg"},"content":"            String[] infos \u003d filePathContribution.split(TAB_SPLITTER);","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"jamessspanggg"},"content":"            if (isBinaryContribution(infos[STAT_ADDITION_INDEX], infos[STAT_DELETION_INDEX])) {","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"jamessspanggg"},"content":"                continue; // skip binary file contributions","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"jamessspanggg"},"content":"            }","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"jamessspanggg"},"content":"            int addition \u003d Integer.parseInt(infos[STAT_ADDITION_INDEX]);","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"jamessspanggg"},"content":"            int deletion \u003d Integer.parseInt(infos[STAT_DELETION_INDEX]);","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"jamessspanggg"},"content":"            String filePath \u003d extractFilePath(infos[STAT_FILE_PATH_INDEX]);","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"jamessspanggg"},"content":"            FileType fileType \u003d config.getFileType(filePath);","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"jamessspanggg"},"content":"            if (!fileTypesAndContributionMap.containsKey(fileType)) {","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"jamessspanggg"},"content":"                fileTypesAndContributionMap.put(fileType, new ContributionPair());","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"jamessspanggg"},"content":"            }","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"jamessspanggg"},"content":"            ContributionPair contributionPair \u003d fileTypesAndContributionMap.get(fileType);","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"jamessspanggg"},"content":"            contributionPair.addInsertions(addition);","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"jamessspanggg"},"content":"            contributionPair.addDeletions(deletion);","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"jamessspanggg"},"content":"        }","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"jamessspanggg"},"content":"        return fileTypesAndContributionMap;","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"jamessspanggg"},"content":"    /**","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Extracts the correct file path from the unprocessed git log {@code filePath}.","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"jamessspanggg"},"content":"     */","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"-"},"content":"    private String extractFilePath(String filePath) {","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"jamessspanggg"},"content":"        String filteredFilePath \u003d filePath;","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"jamessspanggg"},"content":"        if (filteredFilePath.contains(MOVED_FILE_INDICATION)) {","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"jamessspanggg"},"content":"            // moved file has the format: fileA \u003d\u003e newPosition/fileA","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"jamessspanggg"},"content":"            filteredFilePath \u003d filteredFilePath.substring(filePath.indexOf(MOVED_FILE_INDICATION)","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"jamessspanggg"},"content":"                    + MOVED_FILE_INDICATION.length());","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"jamessspanggg"},"content":"            // Removes the trailing \u0027}\u0027 character from the file name, as renamed file names have ending \u0027}\u0027 character.","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"jamessspanggg"},"content":"            filteredFilePath \u003d filteredFilePath.replaceAll(\"}$\", \"\");","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"jamessspanggg"},"content":"        }","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"jamessspanggg"},"content":"        // Removes the trailing double quotes from the file name, as filenames that have special characters","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"jamessspanggg"},"content":"        // will be escaped and surrounded by double quotes automatically. e.g. READ\\ME.md -\u003e \"READ\\\\ME.md\"","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"jamessspanggg"},"content":"        filteredFilePath \u003d removeQuote(filteredFilePath);","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"jamessspanggg"},"content":"        return filteredFilePath;","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"jamessspanggg"},"content":"    /**","isFullCredit":true},{"lineNumber":179,"author":{"gitId":"jamessspanggg"},"content":"     * Detects binary file contribution based on the git log {@code addition} and {@code deletion}.","isFullCredit":true},{"lineNumber":180,"author":{"gitId":"jamessspanggg"},"content":"     */","isFullCredit":true},{"lineNumber":181,"author":{"gitId":"-"},"content":"    private boolean isBinaryContribution(String addition, String deletion) {","isFullCredit":true},{"lineNumber":182,"author":{"gitId":"jamessspanggg"},"content":"        // git log returns \"-\" for binary file additions and deletions","isFullCredit":true},{"lineNumber":183,"author":{"gitId":"jamessspanggg"},"content":"        return addition.equals(BINARY_FILE_CONTRIBUTION) \u0026\u0026 deletion.equals(BINARY_FILE_CONTRIBUTION);","isFullCredit":true},{"lineNumber":184,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":185,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":186,"author":{"gitId":"jamessspanggg"},"content":"    /**","isFullCredit":true},{"lineNumber":187,"author":{"gitId":"jamessspanggg"},"content":"     * Extracts the tag names in {@code tags}.","isFullCredit":true},{"lineNumber":188,"author":{"gitId":"jamessspanggg"},"content":"     */","isFullCredit":true},{"lineNumber":189,"author":{"gitId":"-"},"content":"    private void extractTagNames(String[] tags) {","isFullCredit":true},{"lineNumber":190,"author":{"gitId":"jamessspanggg"},"content":"        for (int i \u003d 0; i \u003c tags.length; i++) {","isFullCredit":true},{"lineNumber":191,"author":{"gitId":"jamessspanggg"},"content":"            tags[i] \u003d tags[i].substring(tags[i].lastIndexOf(TAG_PREFIX) + TAG_PREFIX.length()).trim();","isFullCredit":true},{"lineNumber":192,"author":{"gitId":"jamessspanggg"},"content":"        }","isFullCredit":true},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":194,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":195,"author":{"gitId":"-"},"content":"    private String getCommitMessageBody(String raw) {","isFullCredit":true},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Matcher matcher \u003d MESSAGEBODY_LEADING_PATTERN.matcher(raw);","isFullCredit":true},{"lineNumber":197,"author":{"gitId":"-"},"content":"        return matcher.replaceAll(\"\");","isFullCredit":true},{"lineNumber":198,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":199,"author":{"gitId":"yamidark"},"content":"}","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":95,"yamidark":46,"eugenepeh":1,"-":57}},{"path":"src/main/java/reposense/commits/CommitInfoExtractor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yamidark"},"content":"package reposense.commits;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"yamidark"},"content":"import java.util.ArrayList;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"yamidark"},"content":"import java.util.Collections;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"yamidark"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yamidark"},"content":"import java.util.logging.Logger;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yamidark"},"content":"import reposense.commits.model.CommitInfo;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"eugenepeh"},"content":"import reposense.git.GitCheckout;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"eugenepeh"},"content":"import reposense.git.GitLog;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"yamidark"},"content":"import reposense.model.Author;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"yamidark"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"yamidark"},"content":"import reposense.system.LogsManager;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"yamidark"},"content":"/**","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"yamidark"},"content":" * Extracts commit information of a repository.","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"yamidark"},"content":" */","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"yamidark"},"content":"public class CommitInfoExtractor {","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"yamidark"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(CommitInfoExtractor.class);","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_START_EXTRACTING_COMMIT_INFO \u003d \"Extracting commits info for %s (%s)...\";","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"jamessspanggg"},"content":"    private static final String INFO_STAT_SEPARATOR \u003d \"|\";","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Pattern TRAILING_NEWLINES_PATTERN \u003d Pattern.compile(\"\\n+$\");","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"yamidark"},"content":"     * Extracts out and returns the raw information of each commit for the repo in {@code config}.","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public List\u003cCommitInfo\u003e extractCommitInfos(RepoConfiguration config) {","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger.info(String.format(MESSAGE_START_EXTRACTING_COMMIT_INFO, config.getLocation(), config.getBranch()));","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"eugenepeh"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), config.getBranch());","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"yamidark"},"content":"        List\u003cCommitInfo\u003e repoCommitInfos \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"yamidark"},"content":"        for (Author author : config.getAuthorList()) {","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"jamessspanggg"},"content":"            String gitLogResult \u003d GitLog.getWithFiles(config, author);","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"yamidark"},"content":"            List\u003cCommitInfo\u003e authorCommitInfos \u003d parseGitLogResults(gitLogResult);","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"yamidark"},"content":"            repoCommitInfos.addAll(authorCommitInfos);","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"yamidark"},"content":"        }","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"yamidark"},"content":"        return repoCommitInfos;","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Parses the {@code gitLogResult} into a list of {@link CommitInfo} and returns it.","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private ArrayList\u003cCommitInfo\u003e parseGitLogResults(String gitLogResult) {","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"yamidark"},"content":"        ArrayList\u003cCommitInfo\u003e commitInfos \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String[] rawCommitInfos \u003d gitLogResult.split(GitLog.COMMIT_INFO_DELIMITER);","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (rawCommitInfos.length \u003c 2) {","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"yamidark"},"content":"            //no log (maybe because no contribution for that file type)","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"yamidark"},"content":"            return commitInfos;","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"yamidark"},"content":"        }","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Starts from 1 as index 0 is always empty.","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"        for (int i \u003d 1; i \u003c rawCommitInfos.length; i++) {","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Matcher matcher \u003d TRAILING_NEWLINES_PATTERN.matcher(rawCommitInfos[i]);","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"            String rawCommitInfo \u003d matcher.replaceAll(\"\");","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"jamessspanggg"},"content":"            int statLineSeparatorIndex \u003d rawCommitInfo.lastIndexOf(INFO_STAT_SEPARATOR);","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"            String infoLine \u003d rawCommitInfo.substring(0, statLineSeparatorIndex);","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"jamessspanggg"},"content":"            String statLine \u003d rawCommitInfo.substring(statLineSeparatorIndex + 1).trim();","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"            commitInfos.add(new CommitInfo(infoLine, statLine));","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"yamidark"},"content":"        }","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"yamidark"},"content":"        Collections.reverse(commitInfos);","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"yamidark"},"content":"        return commitInfos;","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"yamidark"},"content":"}","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":4,"yamidark":47,"eugenepeh":3,"-":18}},{"path":"src/main/java/reposense/commits/CommitResultAggregator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yamidark"},"content":"package reposense.commits;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.ZoneId;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.ZonedDateTime;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"eugenepeh"},"content":"import java.util.ArrayList;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"eugenepeh"},"content":"import java.util.HashMap;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"eugenepeh"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"eugenepeh"},"content":"import java.util.Map;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"eugenepeh"},"content":"import java.util.Set;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"ongspxm"},"content":"import reposense.commits.model.AuthorDailyContribution;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"yamidark"},"content":"import reposense.commits.model.CommitContributionSummary;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"yamidark"},"content":"import reposense.commits.model.CommitResult;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"yamidark"},"content":"import reposense.model.Author;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"yamidark"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.util.TimeUtil;","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"yamidark"},"content":"/**","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"yamidark"},"content":" * Uses the commit analysis results to generate the summary information of a repository.","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"yamidark"},"content":" */","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"yamidark"},"content":"public class CommitResultAggregator {","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final int DAYS_IN_MS \u003d 24 * 60 * 60 * 1000;","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"eugenepeh"},"content":"    /**","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the {@link CommitContributionSummary} generated from aggregating the {@code commitResults}.","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Uses {@code config} to obtain details like author name, since date and timezone.","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"eugenepeh"},"content":"     */","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommitContributionSummary aggregateCommitResults(","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"yamidark"},"content":"            RepoConfiguration config, List\u003cCommitResult\u003e commitResults) {","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"        LocalDateTime startDate;","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ZoneId zoneId \u003d config.getZoneId();","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"        startDate \u003d (TimeUtil.isEqualToArbitraryFirstDateConverted(config.getSinceDate(), zoneId))","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ? getStartOfDate(getStartDate(commitResults, zoneId), zoneId)","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"                : config.getSinceDate();","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"ongspxm"},"content":"        Map\u003cAuthor, List\u003cAuthorDailyContribution\u003e\u003e authorDailyContributionsMap \u003d","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"                getAuthorDailyContributionsMap(config.getAuthorDisplayNameMap().keySet(), commitResults, zoneId);","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"        LocalDateTime lastDate \u003d commitResults.size() \u003d\u003d 0","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"                ? null","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"                : getStartOfDate(commitResults.get(commitResults.size() - 1).getTime(), zoneId);","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"yamidark"},"content":"        Map\u003cAuthor, Float\u003e authorContributionVariance \u003d","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"                calcAuthorContributionVariance(authorDailyContributionsMap, startDate, lastDate, zoneId);","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"yamidark"},"content":"        return new CommitContributionSummary(","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"yamidark"},"content":"                config.getAuthorDisplayNameMap(),","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"ongspxm"},"content":"                authorDailyContributionsMap,","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"                authorContributionVariance,","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"                startDate);","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Calculates the contribution variance of all authors across contributions made within a date range.","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * This date range is between {@code startDate} and {@code lastDate}, which are determined based on {@code zoneId}.","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * The authors and their respective contributions are stored in {@code intervalContributionMaps}.","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private Map\u003cAuthor, Float\u003e calcAuthorContributionVariance(","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Map\u003cAuthor, List\u003cAuthorDailyContribution\u003e\u003e intervalContributionMaps, LocalDateTime startDate,","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"            LocalDateTime lastDate, ZoneId zoneId) {","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Map\u003cAuthor, Float\u003e result \u003d new HashMap\u003c\u003e();","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"        for (Author author : intervalContributionMaps.keySet()) {","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"ongspxm"},"content":"            List\u003cAuthorDailyContribution\u003e contributions \u003d intervalContributionMaps.get(author);","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"            result.put(author, getContributionVariance(contributions, startDate, lastDate, zoneId));","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return result;","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Calculates the contribution variance for each author across the author\u0027s {@code contributions} made","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * between {@code startDate} and {@code lastDate}.","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The {@code startDate} and {@code lastDate} are determined based on {@code zoneId}.","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private float getContributionVariance(List\u003cAuthorDailyContribution\u003e contributions, LocalDateTime startDate,","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"            LocalDateTime lastDate, ZoneId zoneId) {","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"eugenepeh"},"content":"        if (contributions.size() \u003d\u003d 0) {","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"eugenepeh"},"content":"            return 0;","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"eugenepeh"},"content":"        }","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"        //get mean","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"        float total \u003d 0;","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"        long startDateInMs \u003d ZonedDateTime.of(startDate, zoneId).toInstant().toEpochMilli();","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"        long lastDateInMs \u003d ZonedDateTime.of(lastDate, zoneId).toInstant().toEpochMilli();","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"        long totalDays \u003d (lastDateInMs - startDateInMs) / DAYS_IN_MS + 1;","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"ongspxm"},"content":"        for (AuthorDailyContribution contribution : contributions) {","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"            total +\u003d contribution.getTotalContribution();","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"        float mean \u003d total / totalDays;","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"-"},"content":"        float variance \u003d 0;","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"        long currentDate \u003d ZonedDateTime.of(startDate, zoneId).toInstant().toEpochMilli();","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"        int contributionIndex \u003d 0;","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c totalDays; i +\u003d 1) {","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"            // Check whether the contributionIndex is valid and the date being looked at has any contributions.","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"            if (contributionIndex \u003c contributions.size() \u0026\u0026 currentDate","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"-"},"content":"                    \u003d\u003d ZonedDateTime.of(contributions.get(contributionIndex).getDate(), zoneId)","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .toInstant().toEpochMilli()) {","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"                variance +\u003d Math.pow((mean - contributions.get(contributionIndex).getTotalContribution()), 2);","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"                contributionIndex +\u003d 1;","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"-"},"content":"            } else {","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"                variance +\u003d Math.pow(mean, 2);","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"            currentDate +\u003d DAYS_IN_MS;","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return variance / totalDays;","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Returns a mapping of each {@link Author} to their respective commit contributions.","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * For each author, commit contributions are consolidated into {@link AuthorDailyContribution}s based on the date","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * of each {@link CommitResult}.","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @param authorSet The set of authors.","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @param commitResults The consolidated list of {@link CommitResult}s.","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @param zoneId The timezone for all {@link CommitResult}s\u0027 dates.","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @return a {@link Map} of each author to a list of {@link AuthorDailyContribution} across all dates in which","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * the author made commits.","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private Map\u003cAuthor, List\u003cAuthorDailyContribution\u003e\u003e getAuthorDailyContributionsMap(","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"-"},"content":"            Set\u003cAuthor\u003e authorSet, List\u003cCommitResult\u003e commitResults, ZoneId zoneId) {","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"ongspxm"},"content":"        Map\u003cAuthor, List\u003cAuthorDailyContribution\u003e\u003e authorDailyContributionsMap \u003d new HashMap\u003c\u003e();","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"ongspxm"},"content":"        authorSet.forEach(author -\u003e authorDailyContributionsMap.put(author, new ArrayList\u003c\u003e()));","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"ongspxm"},"content":"","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"-"},"content":"        LocalDateTime commitStartDate;","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"ongspxm"},"content":"        for (CommitResult commitResult : commitResults) {","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"-"},"content":"            commitStartDate \u003d getStartOfDate(commitResult.getTime(), zoneId);","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"-"},"content":"            Author commitAuthor \u003d commitResult.getAuthor();","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"-"},"content":"            List\u003cAuthorDailyContribution\u003e authorDailyContributions \u003d authorDailyContributionsMap.get(commitAuthor);","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"-"},"content":"            // Check whether there are no contribution dates present or if the current commit date is not yet in","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"-"},"content":"            // the authorDailyContributions list.","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"-"},"content":"            if (authorDailyContributions.isEmpty() || !getStartOfDate(authorDailyContributions","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"-"},"content":"                    .get(authorDailyContributions.size() - 1).getDate(), zoneId)","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"-"},"content":"                            .equals(commitStartDate)) {","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"-"},"content":"                addDailyContributionForNewDate(authorDailyContributions, commitStartDate);","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"ongspxm"},"content":"","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"-"},"content":"            authorDailyContributions.get(authorDailyContributions.size() - 1).addCommitContribution(commitResult);","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"ongspxm"},"content":"        return authorDailyContributionsMap;","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"ongspxm"},"content":"","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void addDailyContributionForNewDate(","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"-"},"content":"            List\u003cAuthorDailyContribution\u003e authorDailyContributions, LocalDateTime date) {","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"-"},"content":"        authorDailyContributions.add(new AuthorDailyContribution(date));","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Gets the starting point of the {@code current} date.","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * @return the {@code current} date if it is equal to the {@code ARBITRARY_FIRST_COMMIT_DATE} adjusted to the","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * timezone given by {@code zoneId}. Otherwise, return a {@link LocalDateTime} adjusted to have a time of 00:00:00.","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"-"},"content":"    private LocalDateTime getStartOfDate(LocalDateTime current, ZoneId zoneId) {","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (TimeUtil.isEqualToArbitraryFirstDateConverted(current, zoneId)) {","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return current;","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return current.withHour(0).withMinute(0).withSecond(0).withNano(0);","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Gets the earliest commit date from {@code commitInfos}.","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * @return First commit date if there is at least one {@link CommitResult}. Otherwise, return","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * the {@code ARBITRARY_FIRST_COMMIT_DATE} converted to the timezone given by {@code zoneId}.","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"-"},"content":"    private LocalDateTime getStartDate(List\u003cCommitResult\u003e commitInfos, ZoneId zoneId) {","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return (commitInfos.isEmpty())","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"-"},"content":"                ? TimeUtil.getArbitraryFirstCommitDateConverted(zoneId)","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"-"},"content":"                : commitInfos.get(0).getTime();","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","isFullCredit":true}],"authorContributionMap":{"ongspxm":12,"yamidark":16,"eugenepeh":11,"-":139}},{"path":"src/main/java/reposense/commits/CommitsReporter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yamidark"},"content":"package reposense.commits;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"yamidark"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"yamidark"},"content":"import reposense.commits.model.CommitContributionSummary;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yamidark"},"content":"import reposense.commits.model.CommitInfo;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yamidark"},"content":"import reposense.commits.model.CommitResult;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"yamidark"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yamidark"},"content":"/**","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"yamidark"},"content":" * Generates the commit summary data for each repository.","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"yamidark"},"content":" */","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"yamidark"},"content":"public class CommitsReporter {","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final CommitInfoExtractor commitInfoExtractor \u003d new CommitInfoExtractor();","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final CommitInfoAnalyzer commitInfoAnalyzer \u003d new CommitInfoAnalyzer();","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final CommitResultAggregator commitResultAggregator \u003d new CommitResultAggregator();","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"yamidark"},"content":"     * Generates and returns the commit contribution summary for each repo in {@code config}.","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommitContributionSummary generateCommitSummary(RepoConfiguration config) {","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d commitInfoExtractor.extractCommitInfos(config);","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e commitResults \u003d commitInfoAnalyzer.analyzeCommits(commitInfos, config);","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return commitResultAggregator.aggregateCommitResults(config, commitResults);","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"yamidark"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yamidark":21,"-":7}},{"path":"src/main/java/reposense/commits/model/AuthorDailyContribution.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongspxm"},"content":"package reposense.commits.model;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"ongspxm"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"ongspxm"},"content":"import java.util.ArrayList;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"ongspxm"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"ongspxm"},"content":"","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"ongspxm"},"content":"/**","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Holds the commits made by an {@code Author} for a single day.","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"ongspxm"},"content":" */","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"ongspxm"},"content":"public class AuthorDailyContribution {","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private LocalDateTime date;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"ongspxm"},"content":"    private List\u003cCommitResult\u003e commitResults;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"ongspxm"},"content":"","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public AuthorDailyContribution(LocalDateTime date) {","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"ongspxm"},"content":"        this.date \u003d date;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"ongspxm"},"content":"        commitResults \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"ongspxm"},"content":"    }","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"ongspxm"},"content":"","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public LocalDateTime getDate() {","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"ongspxm"},"content":"        return date;","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"ongspxm"},"content":"    }","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"ongspxm"},"content":"","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setDate(LocalDateTime date) {","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"ongspxm"},"content":"        this.date \u003d date;","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"ongspxm"},"content":"    }","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"ongspxm"},"content":"","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"ongspxm"},"content":"    /**","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Adds the {@code commitResult} into the {@code Author}\u0027s daily contribution.","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"ongspxm"},"content":"     */","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"ongspxm"},"content":"    public void addCommitContribution(CommitResult commitResult) {","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"ongspxm"},"content":"        commitResults.add(commitResult);","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"ongspxm"},"content":"    }","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"ongspxm"},"content":"","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"ongspxm"},"content":"    /**","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"ongspxm"},"content":"     * Returns the total line contribution made by the {@code Author} for the day.","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"ongspxm"},"content":"     */","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"ongspxm"},"content":"    public int getTotalContribution() {","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"        int totalContribution \u003d 0;","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"        for (CommitResult commitResult : commitResults) {","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"            totalContribution +\u003d commitResult.getDeletions();","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"            totalContribution +\u003d commitResult.getInsertions();","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return totalContribution;","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"ongspxm"},"content":"    }","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"ongspxm"},"content":"}","isFullCredit":true}],"authorContributionMap":{"ongspxm":32,"-":13}},{"path":"src/main/java/reposense/commits/model/CommitContributionSummary.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yamidark"},"content":"package reposense.commits.model;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"yamidark"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"yamidark"},"content":"import java.util.Map;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yamidark"},"content":"import reposense.model.Author;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"yamidark"},"content":"/**","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yamidark"},"content":" * Stores the consolidated results of commit analysis.","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"yamidark"},"content":" */","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"yamidark"},"content":"public class CommitContributionSummary {","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"ongspxm"},"content":"    private final Map\u003cAuthor, List\u003cAuthorDailyContribution\u003e\u003e authorDailyContributionsMap;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"yamidark"},"content":"    private final Map\u003cAuthor, Float\u003e authorContributionVariance;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"yamidark"},"content":"    private final Map\u003cAuthor, String\u003e authorDisplayNameMap;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final LocalDateTime earliestSinceDate;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"yamidark"},"content":"    public CommitContributionSummary(","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"yamidark"},"content":"            Map\u003cAuthor, String\u003e authorDisplayNameMap,","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"ongspxm"},"content":"            Map\u003cAuthor, List\u003cAuthorDailyContribution\u003e\u003e authorDailyContributionsMap,","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Map\u003cAuthor, Float\u003e authorContributionVariance,","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"            LocalDateTime earliestSinceDate) {","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"yamidark"},"content":"        this.authorDisplayNameMap \u003d authorDisplayNameMap;","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"ongspxm"},"content":"        this.authorDailyContributionsMap \u003d authorDailyContributionsMap;","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"yamidark"},"content":"        this.authorContributionVariance \u003d authorContributionVariance;","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.earliestSinceDate \u003d earliestSinceDate;","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"yamidark"},"content":"    public Map\u003cAuthor, String\u003e getAuthorDisplayNameMap() {","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"yamidark"},"content":"        return authorDisplayNameMap;","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"ongspxm"},"content":"    public Map\u003cAuthor, List\u003cAuthorDailyContribution\u003e\u003e getAuthorDailyContributionsMap() {","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"ongspxm"},"content":"        return authorDailyContributionsMap;","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"yamidark"},"content":"    public Map\u003cAuthor, Float\u003e getAuthorContributionVariance() {","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"yamidark"},"content":"        return authorContributionVariance;","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public LocalDateTime getEarliestSinceDate() {","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return earliestSinceDate;","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"yamidark"},"content":"}","isFullCredit":true}],"authorContributionMap":{"ongspxm":5,"yamidark":30,"-":9}},{"path":"src/main/java/reposense/commits/model/CommitInfo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yamidark"},"content":"package reposense.commits.model;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"yamidark"},"content":"/**","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"yamidark"},"content":" * Stores the raw information generated for each commit.","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"yamidark"},"content":" */","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yamidark"},"content":"public class CommitInfo {","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yamidark"},"content":"    private final String infoLine;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"yamidark"},"content":"    private final String statLine;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yamidark"},"content":"    public CommitInfo(String infoLine, String statLine) {","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"yamidark"},"content":"        this.infoLine \u003d infoLine;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"yamidark"},"content":"        this.statLine \u003d statLine;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"yamidark"},"content":"    public String getInfoLine() {","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"yamidark"},"content":"        return infoLine;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"yamidark"},"content":"    public String getStatLine() {","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"yamidark"},"content":"        return statLine;","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"yamidark"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yamidark":22}},{"path":"src/main/java/reposense/commits/model/CommitResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yamidark"},"content":"package reposense.commits.model;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"jamessspanggg"},"content":"import java.util.Arrays;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"jamessspanggg"},"content":"import java.util.Collections;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"jamessspanggg"},"content":"import java.util.Map;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"yamidark"},"content":"import reposense.model.Author;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"jamessspanggg"},"content":"import reposense.model.FileType;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"yamidark"},"content":"/**","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"yamidark"},"content":" * Stores the result from analyzing a {@code CommitInfo}.","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"yamidark"},"content":" */","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"yamidark"},"content":"public class CommitResult {","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"yamidark"},"content":"    private final String hash;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final Boolean isMergeCommit;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final String messageTitle;","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final String messageBody;","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"jamessspanggg"},"content":"    private final String[] tags;","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"jamessspanggg"},"content":"    private final Map\u003cFileType, ContributionPair\u003e fileTypesAndContributionMap;","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"ongspxm"},"content":"    private final transient Author author;","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final transient LocalDateTime time;","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"ongspxm"},"content":"","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public CommitResult(Author author, String hash, Boolean isMergeCommit, LocalDateTime time, String messageTitle,","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"            String messageBody, String[] tags, Map\u003cFileType, ContributionPair\u003e fileTypesAndContributionMap) {","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"yamidark"},"content":"        this.author \u003d author;","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"yamidark"},"content":"        this.hash \u003d hash;","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.isMergeCommit \u003d isMergeCommit;","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"yamidark"},"content":"        this.time \u003d time;","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.messageTitle \u003d messageTitle;","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.messageBody \u003d messageBody;","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"jamessspanggg"},"content":"        this.tags \u003d tags;","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"jamessspanggg"},"content":"        this.fileTypesAndContributionMap \u003d fileTypesAndContributionMap;","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommitResult(Author author, String hash, Boolean isMergeCommit, LocalDateTime time, String messageTitle,","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"            String messageBody, String[] tags) {","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"jamessspanggg"},"content":"        this.author \u003d author;","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"jamessspanggg"},"content":"        this.hash \u003d hash;","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.isMergeCommit \u003d isMergeCommit;","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"jamessspanggg"},"content":"        this.time \u003d time;","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"jamessspanggg"},"content":"        this.messageTitle \u003d messageTitle;","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"jamessspanggg"},"content":"        this.messageBody \u003d messageBody;","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"jamessspanggg"},"content":"        this.tags \u003d tags;","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"jamessspanggg"},"content":"        this.fileTypesAndContributionMap \u003d Collections.emptyMap();","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public String getMessageTitle() {","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return messageTitle;","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String getMessageBody() {","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return messageBody;","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"jamessspanggg"},"content":"    public String[] getTags() {","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"jamessspanggg"},"content":"        return tags;","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"yamidark"},"content":"    public Author getAuthor() {","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"yamidark"},"content":"        return author;","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"yamidark"},"content":"    public String getHash() {","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"yamidark"},"content":"        return hash;","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public LocalDateTime getTime() {","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"yamidark"},"content":"        return time;","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"yamidark"},"content":"    public int getInsertions() {","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"jamessspanggg"},"content":"        int insertions \u003d 0;","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"jamessspanggg"},"content":"        for (ContributionPair contributionPair : fileTypesAndContributionMap.values()) {","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"jamessspanggg"},"content":"            insertions +\u003d contributionPair.getInsertions();","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"jamessspanggg"},"content":"        }","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"yamidark"},"content":"        return insertions;","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"yamidark"},"content":"    public int getDeletions() {","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"jamessspanggg"},"content":"        int deletions \u003d 0;","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"jamessspanggg"},"content":"        for (ContributionPair contributionPair : fileTypesAndContributionMap.values()) {","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"jamessspanggg"},"content":"            deletions +\u003d contributionPair.getDeletions();","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"jamessspanggg"},"content":"        }","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"yamidark"},"content":"        return deletions;","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"jamessspanggg"},"content":"    public Map\u003cFileType, ContributionPair\u003e getFileTypesAndContributionMap() {","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"jamessspanggg"},"content":"        return fileTypesAndContributionMap;","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"yamidark"},"content":"    @Override","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"yamidark"},"content":"    public boolean equals(Object other) {","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"yamidark"},"content":"        if (this \u003d\u003d other) {","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"yamidark"},"content":"            return true;","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"yamidark"},"content":"        }","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"yamidark"},"content":"        if (!(other instanceof CommitResult)) {","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"yamidark"},"content":"            return false;","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"yamidark"},"content":"        }","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"yamidark"},"content":"        CommitResult otherCommitResult \u003d (CommitResult) other;","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"yamidark"},"content":"        return author.equals(otherCommitResult.author)","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"yamidark"},"content":"                \u0026\u0026 hash.equals(otherCommitResult.hash)","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"                \u0026\u0026 isMergeCommit.equals(otherCommitResult.isMergeCommit)","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"yamidark"},"content":"                \u0026\u0026 time.equals(otherCommitResult.time)","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 messageTitle.equals(otherCommitResult.messageTitle)","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 messageBody.equals(otherCommitResult.messageBody)","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"jamessspanggg"},"content":"                \u0026\u0026 Arrays.equals(tags, otherCommitResult.tags)","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"jamessspanggg"},"content":"                \u0026\u0026 fileTypesAndContributionMap.equals(otherCommitResult.fileTypesAndContributionMap);","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return hash.hashCode();","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"yamidark"},"content":"}","isFullCredit":true}],"authorContributionMap":{"ongspxm":2,"jamessspanggg":35,"yamidark":53,"-":28}},{"path":"src/main/java/reposense/commits/model/ContributionPair.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamessspanggg"},"content":"package reposense.commits.model;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"jamessspanggg"},"content":"/**","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"jamessspanggg"},"content":" * Stores the insertions and deletions as a pair.","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"jamessspanggg"},"content":" */","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"jamessspanggg"},"content":"public class ContributionPair {","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"jamessspanggg"},"content":"    private int insertions;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"jamessspanggg"},"content":"    private int deletions;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"jamessspanggg"},"content":"    public ContributionPair() {","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"jamessspanggg"},"content":"    public ContributionPair(int insertions, int deletions) {","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"jamessspanggg"},"content":"        this.insertions \u003d insertions;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"jamessspanggg"},"content":"        this.deletions \u003d deletions;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"jamessspanggg"},"content":"    public int getInsertions() {","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"jamessspanggg"},"content":"        return insertions;","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"jamessspanggg"},"content":"    public int getDeletions() {","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"jamessspanggg"},"content":"        return deletions;","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"jamessspanggg"},"content":"    public void addInsertions(int insertions) {","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"jamessspanggg"},"content":"        this.insertions +\u003d insertions;","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"jamessspanggg"},"content":"    public void addDeletions(int deletions) {","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"jamessspanggg"},"content":"        this.deletions +\u003d deletions;","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"jamessspanggg"},"content":"    @Override","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"jamessspanggg"},"content":"    public boolean equals(Object other) {","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"jamessspanggg"},"content":"        if (this \u003d\u003d other) {","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"jamessspanggg"},"content":"            return true;","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"jamessspanggg"},"content":"        }","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"jamessspanggg"},"content":"        if (!(other instanceof ContributionPair)) {","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"jamessspanggg"},"content":"            return false;","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"jamessspanggg"},"content":"        }","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"jamessspanggg"},"content":"        ContributionPair otherContributionPair \u003d (ContributionPair) other;","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"jamessspanggg"},"content":"        return insertions \u003d\u003d otherContributionPair.insertions \u0026\u0026 deletions \u003d\u003d otherContributionPair.deletions;","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"jamessspanggg"},"content":"}","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":47}},{"path":"src/main/java/reposense/git/GitBlame.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenepeh"},"content":"package reposense.git;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"eugenepeh"},"content":"import static reposense.system.CommandRunner.runCommand;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static reposense.util.StringsUtil.addQuotesForFilePath;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"eugenepeh"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"eugenepeh"},"content":"import java.nio.file.Paths;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"eugenepeh"},"content":"import reposense.util.StringsUtil;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"eugenepeh"},"content":"/**","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"eugenepeh"},"content":" * Contains git blame related functionalities.","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"eugenepeh"},"content":" * Git blame is responsible for showing which revision and author last modified each line of a file.","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"eugenepeh"},"content":" */","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"eugenepeh"},"content":"public class GitBlame {","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String IGNORE_COMMIT_LIST_FILE_NAME \u003d \".git-blame-ignore-revs\";","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"eugenepeh"},"content":"    private static final String COMMIT_HASH_REGEX \u003d \"(^[0-9a-f]{40} .*)\";","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"eugenepeh"},"content":"    private static final String AUTHOR_NAME_REGEX \u003d \"(^author .*)\";","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"eugenepeh"},"content":"    private static final String AUTHOR_EMAIL_REGEX \u003d \"(^author-mail .*)\";","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"jamessspanggg"},"content":"    private static final String AUTHOR_TIME_REGEX \u003d \"(^author-time [0-9]+)\";","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"jamessspanggg"},"content":"    private static final String AUTHOR_TIMEZONE_REGEX \u003d \"(^author-tz .*)\";","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"jamessspanggg"},"content":"    private static final String COMBINATION_REGEX \u003d COMMIT_HASH_REGEX + \"|\" + AUTHOR_NAME_REGEX + \"|\"","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"jamessspanggg"},"content":"            + AUTHOR_EMAIL_REGEX + \"|\" + AUTHOR_TIME_REGEX + \"|\" + AUTHOR_TIMEZONE_REGEX;","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"eugenepeh"},"content":"    /**","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"eugenepeh"},"content":"     * Returns the raw git blame result for the {@code fileDirectory}, performed at the {@code root} directory.","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"eugenepeh"},"content":"     */","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"eugenepeh"},"content":"    public static String blame(String root, String fileDirectory) {","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"eugenepeh"},"content":"        Path rootPath \u003d Paths.get(root);","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"eugenepeh"},"content":"        String blameCommand \u003d \"git blame -w --line-porcelain\";","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"        blameCommand +\u003d \" \" + addQuotesForFilePath(fileDirectory);","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"eugenepeh"},"content":"        return StringsUtil.filterText(runCommand(rootPath, blameCommand), COMBINATION_REGEX);","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the raw git blame result with finding previous authors enabled for the {@code fileDirectory},","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * performed at the {@code root} directory.","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static String blameWithPreviousAuthors(String root, String fileDirectory) {","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Path rootPath \u003d Paths.get(root);","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String blameCommandWithFindingPreviousAuthors \u003d \"git blame -w --line-porcelain --ignore-revs-file\";","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"        blameCommandWithFindingPreviousAuthors +\u003d \" \" + addQuotesForFilePath(IGNORE_COMMIT_LIST_FILE_NAME);","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"        blameCommandWithFindingPreviousAuthors +\u003d \" \" + addQuotesForFilePath(fileDirectory);","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return StringsUtil.filterText(runCommand(rootPath, blameCommandWithFindingPreviousAuthors), COMBINATION_REGEX);","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":4,"eugenepeh":30,"-":17}},{"path":"src/main/java/reposense/git/GitBranch.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenepeh"},"content":"package reposense.git;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"eugenepeh"},"content":"import static reposense.system.CommandRunner.runCommand;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"eugenepeh"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"eugenepeh"},"content":"import java.nio.file.Paths;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"import reposense.git.exception.GitBranchException;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"eugenepeh"},"content":"import reposense.util.StringsUtil;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"eugenepeh"},"content":"/**","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"eugenepeh"},"content":" * Contains git branch related functionalities.","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"eugenepeh"},"content":" * Git branch is responsible for list, create, or delete branches.","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"eugenepeh"},"content":" */","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"eugenepeh"},"content":"public class GitBranch {","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"eugenepeh"},"content":"    /**","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"eugenepeh"},"content":"     * Returns the current working branch of the repository at {@code root}.","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws GitBranchException if command execution is unsuccessful.","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"eugenepeh"},"content":"     */","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static String getCurrentBranch(String root) throws GitBranchException {","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"eugenepeh"},"content":"        Path rootPath \u003d Paths.get(root);","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"eugenepeh"},"content":"        String gitBranchCommand \u003d \"git branch\";","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"eugenepeh"},"content":"            return StringsUtil.filterText(runCommand(rootPath, gitBranchCommand), \"\\\\* (.*)\").split(\"\\\\*\")[1].trim();","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (RuntimeException rte) {","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"            throw new GitBranchException(rte);","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true}],"authorContributionMap":{"eugenepeh":24,"-":8}},{"path":"src/main/java/reposense/git/GitCheckout.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenepeh"},"content":"package reposense.git;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"eugenepeh"},"content":"import static reposense.system.CommandRunner.runCommand;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"eugenepeh"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"eugenepeh"},"content":"import java.nio.file.Paths;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.ZoneId;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"eugenepeh"},"content":"import java.util.logging.Logger;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"eugenepeh"},"content":"import reposense.commits.model.CommitResult;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.git.exception.CommitNotFoundException;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"eugenepeh"},"content":"import reposense.system.LogsManager;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"eugenepeh"},"content":"/**","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"eugenepeh"},"content":" * Contains git checkout related functionalities.","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"eugenepeh"},"content":" * Git branch is responsible for switch branches, revision or restore working tree files.","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"eugenepeh"},"content":" */","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"eugenepeh"},"content":"public class GitCheckout {","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"eugenepeh"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(GitCheckout.class);","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"eugenepeh"},"content":"    public static void checkoutRecentBranch(String root) {","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"eugenepeh"},"content":"        checkout(root, \"-\");","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"eugenepeh"},"content":"    public static void checkoutBranch(String root, String branch) {","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"eugenepeh"},"content":"        checkout(root, branch);","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"eugenepeh"},"content":"    /**","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"eugenepeh"},"content":"     * Checkouts to the hash revision given in the {@code commit}.","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * The {@link Path} given by {@code root} is the working directory.","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"eugenepeh"},"content":"     */","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"eugenepeh"},"content":"    public static void checkoutCommit(String root, CommitResult commit) {","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"eugenepeh"},"content":"        logger.info(\"Checking out \" + commit.getHash() + \"time:\" + commit.getTime());","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"eugenepeh"},"content":"        checkout(root, commit.getHash());","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"eugenepeh"},"content":"    /**","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"eugenepeh"},"content":"     * Checkouts to the given {@code hash} revision.","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * The {@link Path} given by {@code root} is the working directory.","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"eugenepeh"},"content":"     */","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"eugenepeh"},"content":"    public static void checkout(String root, String hash) {","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"eugenepeh"},"content":"        Path rootPath \u003d Paths.get(root);","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"eugenepeh"},"content":"        runCommand(rootPath, \"git checkout \" + hash);","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"eugenepeh"},"content":"    /**","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Checks out to the latest commit before {@code untilDate}, associated with timezone given by {@code zoneId} in","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * {@code branchName} branch if {@code untilDate} is not null.","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * The {@link Path} given by {@code root} is the working directory.","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"eugenepeh"},"content":"     * @throws CommitNotFoundException if commits before {@code untilDate} cannot be found.","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"eugenepeh"},"content":"     */","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static void checkoutDate(String root, String branchName, LocalDateTime untilDate, ZoneId zoneId)","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throws CommitNotFoundException {","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"eugenepeh"},"content":"        if (untilDate \u003d\u003d null) {","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"eugenepeh"},"content":"            return;","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"eugenepeh"},"content":"        }","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String hash \u003d GitRevList.getCommitHashUntilDate(root, branchName, untilDate, zoneId);","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"eugenepeh"},"content":"        if (hash.isEmpty()) {","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"eugenepeh"},"content":"            throw new CommitNotFoundException(\"Commit before until date is not found.\");","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"eugenepeh"},"content":"        }","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"eugenepeh"},"content":"        Path rootPath \u003d Paths.get(root);","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"eugenepeh"},"content":"        String checkoutCommand \u003d \"git checkout \" + hash;","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"eugenepeh"},"content":"        runCommand(rootPath, checkoutCommand);","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true}],"authorContributionMap":{"eugenepeh":59,"-":12}},{"path":"src/main/java/reposense/git/GitClone.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenepeh"},"content":"package reposense.git;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"eugenepeh"},"content":"import static reposense.system.CommandRunner.runCommand;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static reposense.util.StringsUtil.addQuotes;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static reposense.util.StringsUtil.addQuotesForFilePath;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"eugenepeh"},"content":"import java.io.IOException;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"eugenepeh"},"content":"import java.nio.file.Files;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"eugenepeh"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"eugenepeh"},"content":"import java.nio.file.Paths;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"eugenepeh"},"content":"import java.util.logging.Level;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"eugenepeh"},"content":"import java.util.logging.Logger;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.git.exception.GitCloneException;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"eugenepeh"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.system.CommandRunner;","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.system.CommandRunnerProcess;","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"eugenepeh"},"content":"import reposense.system.LogsManager;","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"eugenepeh"},"content":"import reposense.util.FileUtil;","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.util.SystemUtil;","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"eugenepeh"},"content":"/**","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"eugenepeh"},"content":" * Contains git clone related functionalities.","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"eugenepeh"},"content":" * Git clone is responsible for cloning a local/remote repository into a new directory.","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"eugenepeh"},"content":" */","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"eugenepeh"},"content":"public class GitClone {","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"eugenepeh"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(GitClone.class);","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"yong24s"},"content":"    /**","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Runs \"git clone --bare\" command asynchronously with {@code rootPath} as working directory to clone a bare repo","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * specified in the {@code config} into the folder {@code outputFolderName}.","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @return an instance of {@link CommandRunnerProcess} to allow tracking the status of the cloning process.","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws GitCloneException when an error occurs while attempting to clone the repo.","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"yong24s"},"content":"     */","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static CommandRunnerProcess cloneBareAsync(RepoConfiguration config, Path rootPath, String outputFolderName)","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throws GitCloneException {","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return CommandRunner.runCommandAsync(rootPath, getCloneBareCommand(config, outputFolderName));","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (RuntimeException rte) {","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new GitCloneException(rte);","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Runs \"git clone --bare --shallow-since\u003d\" command asynchronously with {@code rootPath} as working directory","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * to clone a bare repo specified in the {@code config} into the folder {@code outputFolderName}.","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Uses {@code sinceDate} for the \"--shallow-since\u003d\" flag.","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @return an instance of {@link CommandRunnerProcess} to allow tracking the status of the cloning process.","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws GitCloneException when an error occurs while attempting to clone the repo.","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static CommandRunnerProcess cloneShallowBareAsync(RepoConfiguration config, Path rootPath,","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"            String outputFolderName, LocalDateTime sinceDate) throws GitCloneException {","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return CommandRunner.runCommandAsync(rootPath,","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"                    getCloneShallowBareCommand(config, outputFolderName, sinceDate));","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (RuntimeException rte) {","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new GitCloneException(rte);","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Runs \"git clone --bare\" command asynchronously with {@code rootPath} as working directory to clone a bare repo","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * specified in the {@code config} into the folder {@code outputFolderName}.","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @throws GitCloneException when an error occurs while attempting to clone the repo.","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static void clonePartialBare(RepoConfiguration config, Path rootPath, String outputFolderName)","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throws GitCloneException {","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"        try {","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"            CommandRunner.runCommand(rootPath, getClonePartialBareCommand(config, outputFolderName));","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return;","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"        } catch (RuntimeException rte) {","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new GitCloneException(rte);","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Runs \"git clone --bare\" command asynchronously with {@code rootPath} as working directory to clone a bare repo","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * specified in the {@code config} into the folder {@code outputFolderName}.","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Uses {@code sinceDate} for the \"--shallow-since\u003d\" flag.","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws GitCloneException when an error occurs while attempting to clone the repo.","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static void cloneShallowPartialBare(RepoConfiguration config, Path rootPath, String outputFolderName,","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"            LocalDateTime sinceDate) throws GitCloneException {","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"        try {","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"            CommandRunner.runCommand(rootPath, getCloneShallowPartialBareCommand(config, outputFolderName, sinceDate));","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return;","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (RuntimeException rte) {","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new GitCloneException(rte);","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Performs a full clone with {@code rootPath} as working directory relative to the location of the bare repo","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * version of {@code config} into the folder {@code outputFolderName} and checks out the branch specified in","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * {@code config}.","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @throws GitCloneException when an error occurs while attempting to clone the repo.","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws IOException if it fails to delete a directory.","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static void cloneFromBareAndUpdateBranch(Path rootPath, RepoConfiguration config)","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throws GitCloneException, IOException {","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path relativePath \u003d FileUtil.getBareRepoPath(config);","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String outputFolderName \u003d Paths.get(config.getRepoFolderName(), config.getRepoName()).toString();","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path outputFolderPath \u003d Paths.get(FileUtil.REPOS_ADDRESS, outputFolderName);","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!SystemUtil.isTestEnvironment()) {","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"-"},"content":"            FileUtil.deleteDirectory(outputFolderPath.toString());","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"-"},"content":"        } else if (SystemUtil.isTestEnvironment() \u0026\u0026 Files.exists(outputFolderPath)) {","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"            GitCheckout.checkoutBranch(outputFolderPath.toString(), config.getBranch());","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return;","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String command \u003d getCloneBareAndBranchCommand(relativePath, config, outputFolderPath.toString());","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"-"},"content":"        try {","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"yong24s"},"content":"            runCommand(rootPath, command);","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"-"},"content":"        } catch (RuntimeException rte) {","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"-"},"content":"            logger.log(Level.SEVERE, \"Exception met while cloning or checking out \" + config.getDisplayName() + \".\"","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"                    + \"Analysis terminated.\", rte);","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new GitCloneException(rte);","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Constructs the command to clone a bare repo specified in the {@code config}","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * into the folder {@code outputFolderName}.","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private static String getCloneBareCommand(RepoConfiguration config, String outputFolderName) {","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String output \u003d \"git clone --bare \"","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"-"},"content":"                + addQuotesForFilePath(config.getLocation().toString()) + \" \"","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"-"},"content":"                + addQuotesForFilePath(outputFolderName);","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return output;","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Constructs the command to clone from {@code repoPath} into {@code outputFolderName} and","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * branch to the designated branch in {@code config}.","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @param repoPath Location of repo.","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @param config Config of the repo to be analyzed.","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @param outputFolderName Output directory for the cloned repo.","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @return Command to be used.","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private static String getCloneBareAndBranchCommand(Path repoPath, RepoConfiguration config,","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"-"},"content":"            String outputFolderName) {","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return \"git clone \"","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"-"},"content":"                + addQuotesForFilePath(repoPath.toString())","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"-"},"content":"                + \" --branch \" + config.getBranch()","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"-"},"content":"                + \" \" + addQuotesForFilePath(outputFolderName);","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Constructs the command to shallow clone a bare repo specified in the {@code config}","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * with {@code shallowSinceDate} into the folder {@code outputFolderName}.","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"-"},"content":"    private static String getCloneShallowBareCommand(RepoConfiguration config, String outputFolderName,","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"-"},"content":"            LocalDateTime shallowSinceDate) {","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return \"git clone --bare --shallow-since\u003d\"","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"-"},"content":"                + addQuotes(shallowSinceDate.toString()) + \" \"","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"-"},"content":"                + addQuotesForFilePath(config.getLocation().toString()) + \" \"","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"-"},"content":"                + addQuotesForFilePath(outputFolderName);","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Constructs the command to partial clone a bare repo specified in the {@code config}","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * into the folder {@code outputFolderName}.","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"-"},"content":"    private static String getClonePartialBareCommand(RepoConfiguration config, String outputFolderName) {","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return \"git clone --bare --filter\u003dblob:none \"","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"-"},"content":"                + addQuotesForFilePath(config.getLocation().toString()) + \" \"","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"-"},"content":"                + addQuotesForFilePath(outputFolderName);","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":179,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Constructs the command to shallow partial clone a bare repo specified in the {@code config}","isFullCredit":true},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * with {@code shallowSinceDate} into the folder {@code outputFolderName}.","isFullCredit":true},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private static String getCloneShallowPartialBareCommand(RepoConfiguration config, String outputFolderName,","isFullCredit":true},{"lineNumber":185,"author":{"gitId":"-"},"content":"            LocalDateTime shallowSinceDate) {","isFullCredit":true},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return \"git clone --bare --filter\u003dblob:none --shallow-since\u003d\"","isFullCredit":true},{"lineNumber":187,"author":{"gitId":"-"},"content":"                + addQuotes(shallowSinceDate.toString()) + \" \"","isFullCredit":true},{"lineNumber":188,"author":{"gitId":"-"},"content":"                + addQuotesForFilePath(config.getLocation().toString()) + \" \"","isFullCredit":true},{"lineNumber":189,"author":{"gitId":"-"},"content":"                + addQuotesForFilePath(outputFolderName);","isFullCredit":true},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":191,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yong24s":5,"eugenepeh":24,"-":162}},{"path":"src/main/java/reposense/git/GitDiff.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenepeh"},"content":"package reposense.git;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"eugenepeh"},"content":"import static reposense.system.CommandRunner.runCommand;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"eugenepeh"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"eugenepeh"},"content":"import java.nio.file.Paths;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"eugenepeh"},"content":"/**","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"eugenepeh"},"content":" * Contains git diff related functionalities.","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"eugenepeh"},"content":" * Git diff is responsible for obtaining the changes between commits, commit and working tree, etc.","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"eugenepeh"},"content":" */","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"eugenepeh"},"content":"public class GitDiff {","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String EMPTY_TREE_HASH \u003d \"4b825dc642cb6eb9a060e54bf8d69288fbee4904\";","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String CHECKED_OUT_COMMIT_REFERENCE \u003d \"HEAD\";","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"eugenepeh"},"content":"    /**","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"eugenepeh"},"content":"     * Returns the git diff result of the current commit compared to {@code lastCommitHash}, without any context.","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The {@link Path} given by {@code root} is the working directory.","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"eugenepeh"},"content":"     */","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"eugenepeh"},"content":"    public static String diffCommit(String root, String lastCommitHash) {","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"eugenepeh"},"content":"        Path rootPath \u003d Paths.get(root);","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return runCommand(rootPath, \"git diff -U0 --ignore-submodules\u003dall \" + lastCommitHash);","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns a list of committed files with the corresponding number of lines added and deleted in the repo","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * {@code repoRoot}.","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static List\u003cString\u003e getModifiedFilesList(Path repoRoot) {","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String diffCommand \u003d String.format(\"git diff --ignore-submodules\u003dall --numstat %s %s\",","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"                EMPTY_TREE_HASH, CHECKED_OUT_COMMIT_REFERENCE);","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String diffResult \u003d runCommand(repoRoot.toAbsolutePath(), diffCommand);","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return Arrays.asList(diffResult.split(\"\\n\"));","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true}],"authorContributionMap":{"eugenepeh":20,"-":17}},{"path":"src/main/java/reposense/git/GitLog.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenepeh"},"content":"package reposense.git;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"eugenepeh"},"content":"import static reposense.system.CommandRunner.runCommand;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static reposense.util.StringsUtil.addQuotesForFilePath;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"eugenepeh"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"eugenepeh"},"content":"import java.nio.file.Paths;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"eugenepeh"},"content":"import reposense.model.Author;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"eugenepeh"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"eugenepeh"},"content":"/**","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"eugenepeh"},"content":" * Contains git log related functionalities.","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"eugenepeh"},"content":" * Git log is responsible to obtain the commit logs and the authors\u0027 info.","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"eugenepeh"},"content":" */","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"eugenepeh"},"content":"public class GitLog {","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMIT_INFO_DELIMITER \u003d \"(?m)^\u003e\u003e\u003eCOMMIT INFO\u003c\u003c\u003c\\\\n\";","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String PRETTY_FORMAT_STRING \u003d","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \"\\\"\u003e\u003e\u003eCOMMIT INFO\u003c\u003c\u003c%n%H|%n|%p|%n|%aN|%n|%aE|%n|%cI|%n|%s|%n|%w(0,4,4)%b%w(0,0,0)|%n|%D|\\\"\";","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String DEFAULT_EMAIL_IF_MISSING \u003d \"\";","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the git commit log info of {@code author}, in the repository specified in {@code config}.","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"eugenepeh"},"content":"    public static String get(RepoConfiguration config, Author author) {","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"eugenepeh"},"content":"        Path rootPath \u003d Paths.get(config.getRepoRoot());","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String command \u003d \"git log --full-history -i --extended-regexp \";","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"        command +\u003d GitUtil.convertToGitDateRangeArgs(config.getSinceDate(), config.getUntilDate(), config.getZoneId());","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"        command +\u003d \" --pretty\u003dformat:\" + PRETTY_FORMAT_STRING + \" --shortstat\";","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"eugenepeh"},"content":"        command +\u003d GitUtil.convertToFilterAuthorArgs(author);","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"        command +\u003d GitUtil.convertToGitFormatsArgs(config.getFileTypeManager().getFormats());","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"        command +\u003d GitUtil.convertToGitExcludeGlobArgs(rootPath.toFile(), author.getIgnoreGlobList());","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return runCommand(rootPath, command);","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the git commit log info of {@code author}, with the files changed, in the repository specified in","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code config}. Merge commits are included.","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static String getWithFiles(RepoConfiguration config, Author author) {","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Path rootPath \u003d Paths.get(config.getRepoRoot());","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String command \u003d \"git log --full-history -i --extended-regexp \";","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"        command +\u003d GitUtil.convertToGitDateRangeArgs(config.getSinceDate(), config.getUntilDate(), config.getZoneId());","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"jamessspanggg"},"content":"        command +\u003d \" --pretty\u003dformat:\" + PRETTY_FORMAT_STRING + \" --numstat --shortstat\";","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"        command +\u003d GitUtil.convertToFilterAuthorArgs(author);","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"        command +\u003d GitUtil.convertToGitFormatsArgs(config.getFileTypeManager().getFormats());","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"        command +\u003d GitUtil.convertToGitExcludeGlobArgs(rootPath.toFile(), author.getIgnoreGlobList());","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"eugenepeh"},"content":"        return runCommand(rootPath, command);","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the authors who modified the file at {@code filePath}, in the repository specified in {@code config}.","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The output is a list of length-2 arrays containing the author\u0027s name and email.","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static List\u003cString[]\u003e getFileAuthors(RepoConfiguration config, String filePath) {","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path rootPath \u003d Paths.get(config.getRepoRoot());","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String command \u003d \"git log --pretty\u003dformat:\\\"%an\\t%ae\\\" \";","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"        command +\u003d GitUtil.convertToGitDateRangeArgs(config.getSinceDate(), config.getUntilDate(), config.getZoneId());","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"        command +\u003d \" \" + addQuotesForFilePath(filePath);","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String result \u003d runCommand(rootPath, command);","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Arrays.stream(result.split(\"\\n\"))","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .map(authorAndEmailLine -\u003e authorAndEmailLine.split(\"\\t\"))","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .map(authorAndEmailArray -\u003e authorAndEmailArray.length \u003d\u003d 1","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"                        ? new String[] {authorAndEmailArray[0], DEFAULT_EMAIL_IF_MISSING}","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"                        : authorAndEmailArray)","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":1,"eugenepeh":24,"-":54}},{"path":"src/main/java/reposense/git/GitRevList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenepeh"},"content":"package reposense.git;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"eugenepeh"},"content":"import static reposense.system.CommandRunner.runCommand;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"eugenepeh"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"eugenepeh"},"content":"import java.nio.file.Paths;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.ZoneId;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.time.ZonedDateTime;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"eugenepeh"},"content":"/**","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"eugenepeh"},"content":" * Contains git rev list related functionalities.","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"eugenepeh"},"content":" * Git rev list is responsible for showing commit objects in reverse chronological order.","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"eugenepeh"},"content":" */","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"eugenepeh"},"content":"public class GitRevList {","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"eugenepeh"},"content":"    private static final String REVISION_PATH_SEPARATOR \u003d \" -- \";","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"eugenepeh"},"content":"    /**","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns the latest commit hash at {@code branchName} before {@code date}.","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"eugenepeh"},"content":"     * Returns an empty {@code String} if {@code date} is null, or there is no such commit.","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param root The name of the working directory.","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param branchName The name of the branch to find the commit hash in.","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param date The cut-off date before which the commit hash must be found.","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param zoneId The timezone of the date.","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"eugenepeh"},"content":"     */","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static String getCommitHashUntilDate(String root, String branchName, LocalDateTime date, ZoneId zoneId) {","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"eugenepeh"},"content":"        if (date \u003d\u003d null) {","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"eugenepeh"},"content":"            return \"\";","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"eugenepeh"},"content":"        }","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"eugenepeh"},"content":"        Path rootPath \u003d Paths.get(root);","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String revListCommand \u003d \"git rev-list -1 --until\u003d\"","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"                + GitUtil.GIT_LOG_UNTIL_DATE_FORMAT.format(ZonedDateTime.of(date, zoneId))","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"                + \" \" + branchName + REVISION_PATH_SEPARATOR;","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"eugenepeh"},"content":"        return runCommand(rootPath, revListCommand);","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns a list of commit hashes at the branch given by {@code branchName}, separated by newlines,","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * that are within the range of {@code startHash} and {@code endHash}.","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * The {@code root} is the name of the working directory.","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Both the {@code startHash} and {@code endHash} are guaranteed to be in the list.","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getCommitHashInRange(String root, String branchName, String startHash, String endHash) {","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (startHash \u003d\u003d null \u0026\u0026 endHash \u003d\u003d null) {","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return \"\";","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } else if (startHash \u003d\u003d null) {","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return endHash;","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } else if (endHash \u003d\u003d null) {","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return startHash;","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String fromStartHash \u003d getAllCommitHashSince(root, branchName, startHash);","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String fromEndHash \u003d getAllCommitHashSince(root, branchName, endHash);","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"        StringBuilder output \u003d new StringBuilder();","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // If invalid hashes were given, do not use the results obtained from rev-list","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (fromStartHash.equals(\"\") \u0026\u0026 fromEndHash.equals(\"\")) {","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return \"\";","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } else if (fromStartHash.equals(\"\")) {","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return endHash;","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } else if (fromEndHash.equals(\"\")) {","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return startHash;","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Perform a set difference in the list of commits to get the commits within the given range, since both lists","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // will have the list of commits starting from the given commit to HEAD, hence this removes the overlap part.","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Also ensure that both hashes are present in the final output","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (fromStartHash.length() \u003e fromEndHash.length()) {","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"            output.append(endHash);","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"            output.append(fromStartHash.substring(fromEndHash.length()));","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"        } else {","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"            output.append(startHash);","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"            output.append(fromEndHash.substring(fromStartHash.length()));","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return output.toString();","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns a list of commit hashes at the branch given by {@code branchName} separated by newlines that exist","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * since {@code hash} until HEAD.","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * The {@code root} is the name of the working directory.","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static String getAllCommitHashSince(String root, String branchName, String hash) {","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path rootPath \u003d Paths.get(root);","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String revListCommand \u003d \"git rev-list \" + hash + \"..HEAD \" + branchName + REVISION_PATH_SEPARATOR;","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"-"},"content":"        try {","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return runCommand(rootPath, revListCommand) + hash;","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (RuntimeException rte) {","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"            // An invalid commit hash was provided","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return \"\";","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a list of commit hashes for the root commits in the tree, with the {@link Path} given by {@code root}","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * as working directory.","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static List\u003cString\u003e getRootCommits(String root) {","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String revListCommand \u003d \"git rev-list --max-parents\u003d0 HEAD\";","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path rootPath \u003d Paths.get(root);","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String output \u003d runCommand(rootPath, revListCommand);","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return Arrays.asList(output.split(\"\\n\"));","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns true if the repository is empty, with the {@link Path} given by {@code root} as working directory.","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static boolean checkIsEmptyRepo(String root) {","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String revListCommand \u003d \"git rev-list -n 1 --all\";","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Path rootPath \u003d Paths.get(root);","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String output \u003d runCommand(rootPath, revListCommand);","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return output \u003d\u003d null || output.trim().isEmpty();","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true}],"authorContributionMap":{"eugenepeh":26,"-":95}},{"path":"src/main/java/reposense/git/GitShortlog.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenepeh"},"content":"package reposense.git;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"eugenepeh"},"content":"import static reposense.system.CommandRunner.runCommand;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"eugenepeh"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"eugenepeh"},"content":"import java.nio.file.Paths;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.ZoneId;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"eugenepeh"},"content":"import java.util.Arrays;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yamidark"},"content":"import java.util.Collections;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"eugenepeh"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"eugenepeh"},"content":"import java.util.stream.Collectors;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"eugenepeh"},"content":"import reposense.model.Author;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"eugenepeh"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"eugenepeh"},"content":"/**","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"eugenepeh"},"content":" * Contains git shortlog related functionalities.","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"eugenepeh"},"content":" * Git shortlog provides a summary of git log output.","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"eugenepeh"},"content":" */","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"eugenepeh"},"content":"public class GitShortlog {","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"eugenepeh"},"content":"    /**","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Extracts all the author identities from the repository and date range given in {@code config},","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * with the timezone taken into account.","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"eugenepeh"},"content":"     */","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"eugenepeh"},"content":"    public static List\u003cAuthor\u003e getAuthors(RepoConfiguration config) {","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"eugenepeh"},"content":"        String summary \u003d getShortlogSummary(","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"                config.getRepoRoot(), config.getSinceDate(), config.getUntilDate(), config.getZoneId());","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"yamidark"},"content":"        if (summary.isEmpty()) {","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"yamidark"},"content":"            return Collections.emptyList();","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"yamidark"},"content":"        }","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"eugenepeh"},"content":"        String[] lines \u003d summary.split(\"\\n\");","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"eugenepeh"},"content":"        return Arrays.stream(lines)","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"eugenepeh"},"content":"                .map(line -\u003e new Author(line.split(\"\\t\")[1]))","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"eugenepeh"},"content":"                .collect(Collectors.toList());","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Obtains summarized version of git log from the repository at {@code root} for the date range","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * given by {@code sinceDate} and {@code untilDate}, with {@code zoneId} taken into account for both dates.","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static String getShortlogSummary(String root, LocalDateTime sinceDate, LocalDateTime untilDate,","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"            ZoneId zoneId) {","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"eugenepeh"},"content":"        Path rootPath \u003d Paths.get(root);","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"eugenepeh"},"content":"        String command \u003d \"git log --pretty\u003dshort\";","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"        command +\u003d GitUtil.convertToGitDateRangeArgs(sinceDate, untilDate, zoneId);","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"eugenepeh"},"content":"        command +\u003d \" | git shortlog --summary\";","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"eugenepeh"},"content":"        return runCommand(rootPath, command);","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yamidark":6,"eugenepeh":36,"-":12}},{"path":"src/main/java/reposense/git/GitUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenepeh"},"content":"package reposense.git;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static reposense.util.StringsUtil.addQuotes;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.File;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.FileSystem;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.FileSystems;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.PathMatcher;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.time.ZoneId;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.time.ZonedDateTime;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"eugenepeh"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"eugenepeh"},"content":"import reposense.model.Author;","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.model.FileType;","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"eugenepeh"},"content":"import reposense.util.StringsUtil;","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"eugenepeh"},"content":"/**","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"eugenepeh"},"content":" * Contains Git related utilities.","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"eugenepeh"},"content":" */","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"eugenepeh"},"content":"class GitUtil {","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"    static final DateTimeFormatter GIT_LOG_SINCE_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm:ssZ\");","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static final DateTimeFormatter GIT_LOG_UNTIL_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm:ssZ\");","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(GitUtil.class);","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"eugenepeh"},"content":"    // ignore check against email","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"eugenepeh"},"content":"    private static final String AUTHOR_NAME_PATTERN \u003d \"^%s \u003c.*\u003e$\";","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"eugenepeh"},"content":"    // ignore check against author name","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String AUTHOR_EMAIL_PATTERN \u003d \"^.* \u003c(.*\\\\+)?%s\u003e$\";","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String OR_OPERATOR_PATTERN \u003d \"|\";","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"eugenepeh"},"content":"    /**","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the {@code String} command to specify the date range of commits to analyze for `git` commands.","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Date range is given by {@code sinceDate} and {@code untilDate}, with {@code zoneId} taken into account.","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"eugenepeh"},"content":"     */","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"    static String convertToGitDateRangeArgs(LocalDateTime sinceDate, LocalDateTime untilDate, ZoneId zoneId) {","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"eugenepeh"},"content":"        String gitDateRangeArgs \u003d \"\";","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"eugenepeh"},"content":"        if (sinceDate !\u003d null) {","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"            gitDateRangeArgs +\u003d \" --since\u003d\" + addQuotes(GIT_LOG_SINCE_DATE_FORMAT.format(","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"                    ZonedDateTime.of(sinceDate, zoneId)));","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"eugenepeh"},"content":"        }","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"eugenepeh"},"content":"        if (untilDate !\u003d null) {","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"            gitDateRangeArgs +\u003d \" --until\u003d\" + addQuotes(GIT_LOG_UNTIL_DATE_FORMAT.format(","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"                    ZonedDateTime.of(untilDate, zoneId)));","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"eugenepeh"},"content":"        }","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"eugenepeh"},"content":"        return gitDateRangeArgs;","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"eugenepeh"},"content":"    /**","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns the {@code String} command to specify the {@code author} to analyze for `git log` command.","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * The regex type used is extended regex, which corresponds to the `--extended-regexp` flag in `git log`.","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"eugenepeh"},"content":"     */","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"eugenepeh"},"content":"    static String convertToFilterAuthorArgs(Author author) {","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"eugenepeh"},"content":"        StringBuilder filterAuthorArgsBuilder \u003d new StringBuilder(\" --author\u003d\\\"\");","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"eugenepeh"},"content":"        // git author names and emails may contain regex meta-characters, so we need to escape those","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"eugenepeh"},"content":"        author.getAuthorAliases().stream()","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"eugenepeh"},"content":"                .map(authorAlias -\u003e String.format(AUTHOR_NAME_PATTERN,","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"eugenepeh"},"content":"                        StringsUtil.replaceSpecialSymbols(authorAlias, \".\")) + OR_OPERATOR_PATTERN)","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"eugenepeh"},"content":"                .forEach(filterAuthorArgsBuilder::append);","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"eugenepeh"},"content":"        author.getEmails().stream()","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"eugenepeh"},"content":"                .map(email -\u003e String.format(AUTHOR_EMAIL_PATTERN,","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"eugenepeh"},"content":"                        StringsUtil.replaceSpecialSymbols(email, \".\")) + OR_OPERATOR_PATTERN)","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"eugenepeh"},"content":"                .forEach(filterAuthorArgsBuilder::append);","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"eugenepeh"},"content":"        filterAuthorArgsBuilder.append(","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"eugenepeh"},"content":"                String.format(AUTHOR_NAME_PATTERN,","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"eugenepeh"},"content":"                        StringsUtil.replaceSpecialSymbols(author.getGitId(), \".\"))).append(\"\\\"\");","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"eugenepeh"},"content":"        return filterAuthorArgsBuilder.toString();","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"eugenepeh"},"content":"    /**","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns the {@code String} command to specify the file {@code formats} to analyze for `git` commands.","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"eugenepeh"},"content":"     */","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static String convertToGitFormatsArgs(List\u003cFileType\u003e formats) {","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"eugenepeh"},"content":"        StringBuilder gitFormatsArgsBuilder \u003d new StringBuilder();","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final String cmdFormat \u003d \" -- \" + addQuotes(\"*.%s\");","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"eugenepeh"},"content":"        formats.stream()","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .map(format -\u003e String.format(cmdFormat, format.toString()))","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"eugenepeh"},"content":"                .forEach(gitFormatsArgsBuilder::append);","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"eugenepeh"},"content":"        return gitFormatsArgsBuilder.toString();","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"eugenepeh"},"content":"    /**","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"eugenepeh"},"content":"     * Returns the {@code String} command to specify the globs to exclude for `git log` command.","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Also checks that every glob in {@code ignoreGlobList} only targets files within the given","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * repository\u0027s {@code root} directory.","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"eugenepeh"},"content":"     */","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static String convertToGitExcludeGlobArgs(File root, List\u003cString\u003e ignoreGlobList) {","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"eugenepeh"},"content":"        StringBuilder gitExcludeGlobArgsBuilder \u003d new StringBuilder();","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final String cmdFormat \u003d \" \" + addQuotes(\":(exclude)%s\");","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"eugenepeh"},"content":"        ignoreGlobList.stream()","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .filter(item -\u003e isValidIgnoreGlob(root, item))","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"eugenepeh"},"content":"                .map(ignoreGlob -\u003e String.format(cmdFormat, ignoreGlob))","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"eugenepeh"},"content":"                .forEach(gitExcludeGlobArgsBuilder::append);","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"eugenepeh"},"content":"        return gitExcludeGlobArgsBuilder.toString();","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Returns true if the {@code ignoreGlob} is inside the current repository with reference to the {@code repoRoot}","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * directory.","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Produces log messages when the invalid {@code ignoreGlob} is skipped.","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static boolean isValidIgnoreGlob(File repoRoot, String ignoreGlob) {","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String validPath \u003d ignoreGlob;","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"-"},"content":"        FileSystem fileSystem \u003d FileSystems.getDefault();","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (ignoreGlob.isEmpty()) {","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } else if (ignoreGlob.startsWith(\"/\") || ignoreGlob.startsWith(\"\\\\\")) {","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"-"},"content":"            // Ignore globs cannot start with a slash","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"-"},"content":"            logger.log(Level.WARNING, ignoreGlob + \" cannot start with / or \\\\.\");","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"-"},"content":"        } else if (ignoreGlob.contains(\"/*\") || ignoreGlob.contains(\"\\\\*\")) {","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"-"},"content":"            // contains directories","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"-"},"content":"            validPath \u003d ignoreGlob.substring(0, ignoreGlob.indexOf(\"/*\"));","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"-"},"content":"        } else if (ignoreGlob.contains(\"*\")) {","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // no directories","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"-"},"content":"        try {","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"-"},"content":"            String fileGlobPath \u003d \"glob:\" + repoRoot.getCanonicalPath().replaceAll(\"\\\\\\\\+\", \"\\\\/\") + \"/**\";","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"-"},"content":"            PathMatcher pathMatcher \u003d fileSystem.getPathMatcher(fileGlobPath);","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"-"},"content":"            validPath \u003d new File(repoRoot, validPath).getCanonicalPath();","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"-"},"content":"            if (pathMatcher.matches(Paths.get(validPath))) {","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"-"},"content":"                return true;","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"-"},"content":"            logger.log(Level.WARNING, ioe.getMessage(), ioe);","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"-"},"content":"        logger.log(Level.WARNING, ignoreGlob + \" will be skipped as this glob points to the outside of \"","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"-"},"content":"                + \"the repository.\");","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return false;","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true}],"authorContributionMap":{"eugenepeh":72,"-":77}},{"path":"src/main/java/reposense/git/exception/CommitNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.git.exception;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"eugenepeh"},"content":"/**","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"eugenepeh"},"content":" * Signals that a expected commit cannot be found.","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"eugenepeh"},"content":" */","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"eugenepeh"},"content":"public class CommitNotFoundException extends Exception {","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"eugenepeh"},"content":"    public CommitNotFoundException(String message) {","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"eugenepeh"},"content":"        super(message);","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true}],"authorContributionMap":{"eugenepeh":10,"-":1}},{"path":"src/main/java/reposense/git/exception/GitCloneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.git.exception;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that there is an exception when cloning a repo.","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"eugenepeh"},"content":"public class GitCloneException extends Exception {","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"eugenepeh"},"content":"    public GitCloneException(Exception e) {","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"eugenepeh"},"content":"        super(e.getMessage());","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true}],"authorContributionMap":{"eugenepeh":6,"-":4}},{"path":"src/main/java/reposense/git/exception/InvalidFilePathException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yong24s"},"content":"package reposense.git.exception;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"yong24s"},"content":"/**","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"yong24s"},"content":" * Signals that the repository contains file that cannot be cloned into a Windows system.","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yong24s"},"content":" */","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yong24s"},"content":"public class InvalidFilePathException extends Exception {","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"yong24s"},"content":"    public InvalidFilePathException(String message) {","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"yong24s"},"content":"        super(message);","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"yong24s"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yong24s":11}},{"path":"src/main/java/reposense/model/Author.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yamidark"},"content":"package reposense.model;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"yamidark"},"content":"import java.nio.file.FileSystems;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"yamidark"},"content":"import java.nio.file.PathMatcher;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yamidark"},"content":"import java.util.ArrayList;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yamidark"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"eugenepeh"},"content":"/**","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"eugenepeh"},"content":" * Represents a Git Author.","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"eugenepeh"},"content":" */","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Author {","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"jamessspanggg"},"content":"    public static final String NAME_NO_AUTHOR_WITH_COMMITS_FOUND \u003d","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"jamessspanggg"},"content":"            \"NO AUTHOR WITH COMMITS FOUND WITHIN THIS PERIOD OF TIME\";","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"eugenepeh"},"content":"    private static final String UNKNOWN_AUTHOR_GIT_ID \u003d \"-\";","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"eugenepeh"},"content":"    private static final String STANDARD_GITHUB_EMAIL_DOMAIN \u003d \"@users.noreply.github.com\";","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"eugenepeh"},"content":"    private static final String MESSAGE_UNCOMMON_EMAIL_PATTERN \u003d \"The provided email, %s, uses uncommon pattern.\";","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"yamidark"},"content":"    private static final String MESSAGE_UNCOMMON_GLOB_PATTERN \u003d \"The provided ignore glob, %s, uses uncommon pattern.\";","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"eugenepeh"},"content":"    private static final String COMMON_EMAIL_REGEX \u003d","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"eugenepeh"},"content":"            \"^([a-zA-Z0-9_\\\\-\\\\.\\\\+]+)@([a-zA-Z0-9_\\\\-\\\\.]+)\\\\.([a-zA-Z]{2,5})$\";","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"eugenepeh"},"content":"    private static final String COMMON_GLOB_REGEX \u003d \"^[-a-zA-Z0-9 _/\\\\\\\\*!{}\\\\[\\\\]!(),:.]*$\";","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"eugenepeh"},"content":"    public static final Author UNKNOWN_AUTHOR \u003d new Author(UNKNOWN_AUTHOR_GIT_ID);","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"eugenepeh"},"content":"    private final String gitId;","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"eugenepeh"},"content":"    private transient List\u003cString\u003e emails;","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"eugenepeh"},"content":"    private transient String displayName;","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"yamidark"},"content":"    private transient List\u003cString\u003e authorAliases;","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"yamidark"},"content":"    private transient List\u003cString\u003e ignoreGlobList;","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"yamidark"},"content":"    private transient PathMatcher ignoreGlobMatcher;","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"eugenepeh"},"content":"    public Author(String gitId) {","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"eugenepeh"},"content":"        this.gitId \u003d gitId;","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"eugenepeh"},"content":"        this.emails \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"eugenepeh"},"content":"        this.displayName \u003d gitId;","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"eugenepeh"},"content":"        this.authorAliases \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"eugenepeh"},"content":"        this.ignoreGlobList \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"eugenepeh"},"content":"        addStandardGitHubEmail(this.emails);","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"eugenepeh"},"content":"        updateIgnoreGlobMatcher();","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"eugenepeh"},"content":"    public Author(StandaloneAuthor sa) {","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"eugenepeh"},"content":"        String gitId \u003d sa.getGithubId();","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"eugenepeh"},"content":"        List\u003cString\u003e emails \u003d new ArrayList\u003c\u003e(sa.getEmails());","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"eugenepeh"},"content":"        String displayName \u003d !sa.getDisplayName().isEmpty() ? sa.getDisplayName() : sa.getGithubId();","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"eugenepeh"},"content":"        List\u003cString\u003e authorAliases \u003d sa.getAuthorNames();","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"eugenepeh"},"content":"        List\u003cString\u003e ignoreGlobList \u003d sa.getIgnoreGlobList();","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"eugenepeh"},"content":"        this.gitId \u003d gitId;","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"eugenepeh"},"content":"        this.displayName \u003d displayName;","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"eugenepeh"},"content":"        this.authorAliases \u003d authorAliases;","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"eugenepeh"},"content":"        setEmails(emails);","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"eugenepeh"},"content":"        setIgnoreGlobList(ignoreGlobList);","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"yong24s"},"content":"    public Author(Author another) {","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"yong24s"},"content":"        this.gitId \u003d another.gitId;","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"eugenepeh"},"content":"        this.emails \u003d another.emails;","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"yong24s"},"content":"        this.displayName \u003d another.gitId;","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"yong24s"},"content":"        this.authorAliases \u003d another.authorAliases;","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.ignoreGlobList \u003d another.ignoreGlobList;","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"yong24s"},"content":"        this.ignoreGlobMatcher \u003d another.ignoreGlobMatcher;","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"eugenepeh"},"content":"    /**","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"eugenepeh"},"content":"     * Checks that all the strings in the {@code emails} only contains commonly used email patterns.","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"eugenepeh"},"content":"     * @throws IllegalArgumentException if any of the values do not meet the criteria.","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"eugenepeh"},"content":"     */","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"eugenepeh"},"content":"    private static void validateEmails(List\u003cString\u003e emails) throws IllegalArgumentException {","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"eugenepeh"},"content":"        for (String email : emails) {","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"eugenepeh"},"content":"            if (!email.matches(COMMON_EMAIL_REGEX)) {","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"eugenepeh"},"content":"                throw new IllegalArgumentException(String.format(MESSAGE_UNCOMMON_EMAIL_PATTERN, email));","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"eugenepeh"},"content":"            }","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"eugenepeh"},"content":"        }","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"eugenepeh"},"content":"    /**","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"eugenepeh"},"content":"     * Checks that all the strings in the {@code ignoreGlobList} only contains commonly used glob patterns.","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"eugenepeh"},"content":"     * @throws IllegalArgumentException if any of the values do not meet the criteria.","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"eugenepeh"},"content":"     */","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"eugenepeh"},"content":"    private static void validateIgnoreGlobs(List\u003cString\u003e ignoreGlobList) throws IllegalArgumentException {","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"eugenepeh"},"content":"        for (String glob : ignoreGlobList) {","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"eugenepeh"},"content":"            if (!glob.matches(COMMON_GLOB_REGEX)) {","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"eugenepeh"},"content":"                throw new IllegalArgumentException(String.format(MESSAGE_UNCOMMON_GLOB_PATTERN, glob));","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"eugenepeh"},"content":"            }","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"eugenepeh"},"content":"        }","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"eugenepeh"},"content":"    public String getGitId() {","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"eugenepeh"},"content":"        return gitId;","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"eugenepeh"},"content":"    public List\u003cString\u003e getEmails() {","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"eugenepeh"},"content":"        return emails;","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"eugenepeh"},"content":"    public void setEmails(List\u003cString\u003e emails) {","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"eugenepeh"},"content":"        validateEmails(emails);","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"eugenepeh"},"content":"        this.emails \u003d new ArrayList\u003c\u003e(emails);","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"eugenepeh"},"content":"        addStandardGitHubEmail(this.emails);","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"eugenepeh"},"content":"    public String getDisplayName() {","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"eugenepeh"},"content":"        return displayName;","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void setDisplayName(String displayName) {","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"-"},"content":"        this.displayName \u003d displayName;","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"yamidark"},"content":"    public List\u003cString\u003e getAuthorAliases() {","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"yamidark"},"content":"        return authorAliases;","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"yamidark"},"content":"    public void setAuthorAliases(List\u003cString\u003e authorAliases) {","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"yamidark"},"content":"        this.authorAliases \u003d authorAliases;","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"yamidark"},"content":"    public List\u003cString\u003e getIgnoreGlobList() {","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"yamidark"},"content":"        return ignoreGlobList;","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"yamidark"},"content":"    public void setIgnoreGlobList(List\u003cString\u003e ignoreGlobList) {","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"eugenepeh"},"content":"        validateIgnoreGlobs(ignoreGlobList);","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"eugenepeh"},"content":"        this.ignoreGlobList \u003d new ArrayList\u003c\u003e(ignoreGlobList);","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"yamidark"},"content":"        updateIgnoreGlobMatcher();","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Validates and adds {@code ignoreGlobList} into the {@link Author} class instance variable without duplicates","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * and updates the ignore glob matcher.","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void importIgnoreGlobList(List\u003cString\u003e ignoreGlobList) {","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"eugenepeh"},"content":"        validateIgnoreGlobs(ignoreGlobList);","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"-"},"content":"        ignoreGlobList.forEach(ignoreGlob -\u003e {","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"-"},"content":"            if (!this.ignoreGlobList.contains(ignoreGlob)) {","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"-"},"content":"                this.ignoreGlobList.add(ignoreGlob);","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"-"},"content":"        });","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"-"},"content":"        updateIgnoreGlobMatcher();","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Returns true if this author is ignoring the {@code filePath} based on its ignore glob matcher.","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public boolean isIgnoringFile(Path filePath) {","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return ignoreGlobMatcher.matches(filePath);","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"yamidark"},"content":"    public boolean equals(Object other) {","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"yamidark"},"content":"        // short circuit if same object","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"yamidark"},"content":"        if (this \u003d\u003d other) {","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"eugenepeh"},"content":"            return true;","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"eugenepeh"},"content":"        }","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"yamidark"},"content":"        // instanceof handles null","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"yamidark"},"content":"        if (!(other instanceof Author)) {","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"eugenepeh"},"content":"            return false;","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"eugenepeh"},"content":"        }","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"yamidark"},"content":"        Author otherAuthor \u003d (Author) other;","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"yamidark"},"content":"        return this.gitId.equalsIgnoreCase(otherAuthor.gitId);","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"eugenepeh"},"content":"        return gitId !\u003d null ? gitId.toLowerCase().hashCode() : 0;","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"eugenepeh"},"content":"        return gitId;","isFullCredit":true},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":180,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":181,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Updates the {@link PathMatcher} to the new ignore glob list set.","isFullCredit":true},{"lineNumber":183,"author":{"gitId":"yamidark"},"content":"     * Called after a new ignore glob list is set.","isFullCredit":true},{"lineNumber":184,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":185,"author":{"gitId":"yamidark"},"content":"    private void updateIgnoreGlobMatcher() {","isFullCredit":true},{"lineNumber":186,"author":{"gitId":"yamidark"},"content":"        String globString \u003d \"glob:{\" + String.join(\",\", ignoreGlobList) + \"}\";","isFullCredit":true},{"lineNumber":187,"author":{"gitId":"yamidark"},"content":"        ignoreGlobMatcher \u003d FileSystems.getDefault().getPathMatcher(globString);","isFullCredit":true},{"lineNumber":188,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":189,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":190,"author":{"gitId":"eugenepeh"},"content":"    /**","isFullCredit":true},{"lineNumber":191,"author":{"gitId":"eugenepeh"},"content":"     * Adds the standard github email to {@code emails} if doesn\u0027t exist.","isFullCredit":true},{"lineNumber":192,"author":{"gitId":"eugenepeh"},"content":"     */","isFullCredit":true},{"lineNumber":193,"author":{"gitId":"eugenepeh"},"content":"    private void addStandardGitHubEmail(List\u003cString\u003e emails) {","isFullCredit":true},{"lineNumber":194,"author":{"gitId":"eugenepeh"},"content":"        String standardGitHubEmail \u003d getGitId() + STANDARD_GITHUB_EMAIL_DOMAIN;","isFullCredit":true},{"lineNumber":195,"author":{"gitId":"eugenepeh"},"content":"        if (!emails.contains(standardGitHubEmail)) {","isFullCredit":true},{"lineNumber":196,"author":{"gitId":"eugenepeh"},"content":"            emails.add(standardGitHubEmail);","isFullCredit":true},{"lineNumber":197,"author":{"gitId":"eugenepeh"},"content":"        }","isFullCredit":true},{"lineNumber":198,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","isFullCredit":true},{"lineNumber":200,"author":{"gitId":"-"},"content":"","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":2,"yamidark":43,"yong24s":9,"eugenepeh":97,"-":49}},{"path":"src/main/java/reposense/model/CliArguments.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yamidark"},"content":"package reposense.model;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"yamidark"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.ZoneId;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yong24s"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"import reposense.parser.ArgsParser;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.parser.AuthorConfigCsvParser;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.parser.GroupConfigCsvParser;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.parser.RepoConfigCsvParser;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.parser.ReportConfigJsonParser;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"yong24s"},"content":"/**","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"yong24s"},"content":" * Represents command line arguments user supplied when running the program.","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"yong24s"},"content":" */","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class CliArguments {","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path EMPTY_PATH \u003d Paths.get(\"\");","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Path outputFilePath;","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Path assetsFilePath;","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final LocalDateTime sinceDate;","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final LocalDateTime untilDate;","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final boolean isSinceDateProvided;","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final boolean isUntilDateProvided;","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final List\u003cFileType\u003e formats;","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final boolean isLastModifiedDateIncluded;","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final boolean isShallowCloningPerformed;","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final boolean isAutomaticallyLaunching;","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final boolean isStandaloneConfigIgnored;","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final boolean isFileSizeLimitIgnored;","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final int numCloningThreads;","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final int numAnalysisThreads;","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final ZoneId zoneId;","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final boolean isFindingPreviousAuthorsPerformed;","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private boolean isTestMode \u003d ArgsParser.DEFAULT_IS_TEST_MODE;","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private boolean isFreshClonePerformed \u003d ArgsParser.DEFAULT_SHOULD_FRESH_CLONE;","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e locations;","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private boolean isViewModeOnly;","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Path reportDirectoryPath;","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Path configFolderPath;","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Path repoConfigFilePath;","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Path authorConfigFilePath;","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private Path groupConfigFilePath;","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private Path reportConfigFilePath;","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private ReportConfiguration reportConfiguration;","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private CliArguments(Builder builder) {","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.outputFilePath \u003d builder.outputFilePath;","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.assetsFilePath \u003d builder.assetsFilePath;","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.sinceDate \u003d builder.sinceDate;","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.untilDate \u003d builder.untilDate;","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.isSinceDateProvided \u003d builder.isSinceDateProvided;","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.isUntilDateProvided \u003d builder.isUntilDateProvided;","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.formats \u003d builder.formats;","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.isLastModifiedDateIncluded \u003d builder.isLastModifiedDateIncluded;","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.isShallowCloningPerformed \u003d builder.isShallowCloningPerformed;","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.isAutomaticallyLaunching \u003d builder.isAutomaticallyLaunching;","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.isStandaloneConfigIgnored \u003d builder.isStandaloneConfigIgnored;","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.isFileSizeLimitIgnored \u003d builder.isFileSizeLimitIgnored;","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.numCloningThreads \u003d builder.numCloningThreads;","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.numAnalysisThreads \u003d builder.numAnalysisThreads;","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.zoneId \u003d builder.zoneId;","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.isFindingPreviousAuthorsPerformed \u003d builder.isFindingPreviousAuthorsPerformed;","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.isTestMode \u003d builder.isTestMode;","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.isFreshClonePerformed \u003d builder.isFreshClonePerformed;","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.locations \u003d builder.locations;","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.isViewModeOnly \u003d builder.isViewModeOnly;","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.reportDirectoryPath \u003d builder.reportDirectoryPath;","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.configFolderPath \u003d builder.configFolderPath;","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.repoConfigFilePath \u003d builder.repoConfigFilePath;","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.authorConfigFilePath \u003d builder.authorConfigFilePath;","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.groupConfigFilePath \u003d builder.groupConfigFilePath;","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.reportConfigFilePath \u003d builder.reportConfigFilePath;","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.reportConfiguration \u003d builder.reportConfiguration;","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public ZoneId getZoneId() {","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return zoneId;","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"yong24s"},"content":"    public Path getOutputFilePath() {","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"yong24s"},"content":"        return outputFilePath;","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Path getAssetsFilePath() {","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return assetsFilePath;","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public LocalDateTime getSinceDate() {","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"yong24s"},"content":"        return sinceDate;","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public LocalDateTime getUntilDate() {","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"yong24s"},"content":"        return untilDate;","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"jamessspanggg"},"content":"    public boolean isSinceDateProvided() {","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"jamessspanggg"},"content":"        return isSinceDateProvided;","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"jamessspanggg"},"content":"    public boolean isUntilDateProvided() {","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"jamessspanggg"},"content":"        return isUntilDateProvided;","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"jamessspanggg"},"content":"    public boolean isLastModifiedDateIncluded() {","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"jamessspanggg"},"content":"        return isLastModifiedDateIncluded;","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public boolean isShallowCloningPerformed() {","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return isShallowCloningPerformed;","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public List\u003cFileType\u003e getFormats() {","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"yong24s"},"content":"        return formats;","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public boolean isAutomaticallyLaunching() {","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return isAutomaticallyLaunching;","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public boolean isStandaloneConfigIgnored() {","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return isStandaloneConfigIgnored;","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public boolean isFileSizeLimitIgnored() {","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return isFileSizeLimitIgnored;","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public int getNumCloningThreads() {","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return numCloningThreads;","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public int getNumAnalysisThreads() {","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return numAnalysisThreads;","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public boolean isFindingPreviousAuthorsPerformed() {","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return isFindingPreviousAuthorsPerformed;","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public boolean isTestMode() {","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return isTestMode;","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public boolean isFreshClonePerformed() {","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return isFreshClonePerformed;","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getLocations() {","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return locations;","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public Path getReportDirectoryPath() {","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return reportDirectoryPath;","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public Path getConfigFolderPath() {","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return configFolderPath;","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public Path getRepoConfigFilePath() {","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return repoConfigFilePath;","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public Path getAuthorConfigFilePath() {","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return authorConfigFilePath;","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public Path getGroupConfigFilePath() {","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"-"},"content":"        return groupConfigFilePath;","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":179,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public Path getReportConfigFilePath() {","isFullCredit":true},{"lineNumber":181,"author":{"gitId":"-"},"content":"        return reportConfigFilePath;","isFullCredit":true},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":183,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public ReportConfiguration getReportConfiguration() {","isFullCredit":true},{"lineNumber":185,"author":{"gitId":"-"},"content":"        return reportConfiguration;","isFullCredit":true},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":187,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public boolean isViewModeOnly() {","isFullCredit":true},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return isViewModeOnly;","isFullCredit":true},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":191,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":192,"author":{"gitId":"yong24s"},"content":"    @Override","isFullCredit":true},{"lineNumber":193,"author":{"gitId":"yong24s"},"content":"    public boolean equals(Object other) {","isFullCredit":true},{"lineNumber":194,"author":{"gitId":"yong24s"},"content":"        // short circuit if same object","isFullCredit":true},{"lineNumber":195,"author":{"gitId":"yong24s"},"content":"        if (this \u003d\u003d other) {","isFullCredit":true},{"lineNumber":196,"author":{"gitId":"yong24s"},"content":"            return true;","isFullCredit":true},{"lineNumber":197,"author":{"gitId":"yong24s"},"content":"        }","isFullCredit":true},{"lineNumber":198,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":199,"author":{"gitId":"yong24s"},"content":"        // instanceof handles null","isFullCredit":true},{"lineNumber":200,"author":{"gitId":"yong24s"},"content":"        if (!(other instanceof CliArguments)) {","isFullCredit":true},{"lineNumber":201,"author":{"gitId":"yong24s"},"content":"            return false;","isFullCredit":true},{"lineNumber":202,"author":{"gitId":"yong24s"},"content":"        }","isFullCredit":true},{"lineNumber":203,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":204,"author":{"gitId":"yong24s"},"content":"        CliArguments otherCliArguments \u003d (CliArguments) other;","isFullCredit":true},{"lineNumber":205,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":206,"author":{"gitId":"-"},"content":"        return Objects.equals(this.outputFilePath, otherCliArguments.outputFilePath)","isFullCredit":true},{"lineNumber":207,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(this.sinceDate, otherCliArguments.sinceDate)","isFullCredit":true},{"lineNumber":208,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(this.untilDate, otherCliArguments.untilDate)","isFullCredit":true},{"lineNumber":209,"author":{"gitId":"jamessspanggg"},"content":"                \u0026\u0026 this.isSinceDateProvided \u003d\u003d otherCliArguments.isSinceDateProvided","isFullCredit":true},{"lineNumber":210,"author":{"gitId":"jamessspanggg"},"content":"                \u0026\u0026 this.isUntilDateProvided \u003d\u003d otherCliArguments.isUntilDateProvided","isFullCredit":true},{"lineNumber":211,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(this.formats, otherCliArguments.formats)","isFullCredit":true},{"lineNumber":212,"author":{"gitId":"jamessspanggg"},"content":"                \u0026\u0026 this.isLastModifiedDateIncluded \u003d\u003d otherCliArguments.isLastModifiedDateIncluded","isFullCredit":true},{"lineNumber":213,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.isShallowCloningPerformed \u003d\u003d otherCliArguments.isShallowCloningPerformed","isFullCredit":true},{"lineNumber":214,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.isAutomaticallyLaunching \u003d\u003d otherCliArguments.isAutomaticallyLaunching","isFullCredit":true},{"lineNumber":215,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.isStandaloneConfigIgnored \u003d\u003d otherCliArguments.isStandaloneConfigIgnored","isFullCredit":true},{"lineNumber":216,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.numCloningThreads \u003d\u003d otherCliArguments.numCloningThreads","isFullCredit":true},{"lineNumber":217,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.numAnalysisThreads \u003d\u003d otherCliArguments.numAnalysisThreads","isFullCredit":true},{"lineNumber":218,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(this.zoneId, otherCliArguments.zoneId)","isFullCredit":true},{"lineNumber":219,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.isFindingPreviousAuthorsPerformed \u003d\u003d otherCliArguments.isFindingPreviousAuthorsPerformed","isFullCredit":true},{"lineNumber":220,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.isFileSizeLimitIgnored \u003d\u003d otherCliArguments.isFileSizeLimitIgnored","isFullCredit":true},{"lineNumber":221,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.isTestMode \u003d\u003d otherCliArguments.isTestMode","isFullCredit":true},{"lineNumber":222,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.isFreshClonePerformed \u003d\u003d otherCliArguments.isFreshClonePerformed","isFullCredit":true},{"lineNumber":223,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(this.locations, otherCliArguments.locations)","isFullCredit":true},{"lineNumber":224,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.isViewModeOnly \u003d\u003d otherCliArguments.isViewModeOnly","isFullCredit":true},{"lineNumber":225,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(this.reportDirectoryPath, otherCliArguments.reportDirectoryPath)","isFullCredit":true},{"lineNumber":226,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(this.repoConfigFilePath, otherCliArguments.repoConfigFilePath)","isFullCredit":true},{"lineNumber":227,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(this.authorConfigFilePath, otherCliArguments.authorConfigFilePath)","isFullCredit":true},{"lineNumber":228,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(this.groupConfigFilePath, otherCliArguments.groupConfigFilePath)","isFullCredit":true},{"lineNumber":229,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(this.reportConfigFilePath, otherCliArguments.reportConfigFilePath);","isFullCredit":true},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":231,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":232,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * Builder used to build CliArguments.","isFullCredit":true},{"lineNumber":234,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public static final class Builder {","isFullCredit":true},{"lineNumber":236,"author":{"gitId":"-"},"content":"        private Path outputFilePath;","isFullCredit":true},{"lineNumber":237,"author":{"gitId":"-"},"content":"        private Path assetsFilePath;","isFullCredit":true},{"lineNumber":238,"author":{"gitId":"-"},"content":"        private LocalDateTime sinceDate;","isFullCredit":true},{"lineNumber":239,"author":{"gitId":"-"},"content":"        private LocalDateTime untilDate;","isFullCredit":true},{"lineNumber":240,"author":{"gitId":"-"},"content":"        private boolean isSinceDateProvided;","isFullCredit":true},{"lineNumber":241,"author":{"gitId":"-"},"content":"        private boolean isUntilDateProvided;","isFullCredit":true},{"lineNumber":242,"author":{"gitId":"-"},"content":"        private List\u003cFileType\u003e formats;","isFullCredit":true},{"lineNumber":243,"author":{"gitId":"-"},"content":"        private boolean isLastModifiedDateIncluded;","isFullCredit":true},{"lineNumber":244,"author":{"gitId":"-"},"content":"        private boolean isShallowCloningPerformed;","isFullCredit":true},{"lineNumber":245,"author":{"gitId":"-"},"content":"        private boolean isAutomaticallyLaunching;","isFullCredit":true},{"lineNumber":246,"author":{"gitId":"-"},"content":"        private boolean isStandaloneConfigIgnored;","isFullCredit":true},{"lineNumber":247,"author":{"gitId":"-"},"content":"        private boolean isFileSizeLimitIgnored;","isFullCredit":true},{"lineNumber":248,"author":{"gitId":"-"},"content":"        private int numCloningThreads;","isFullCredit":true},{"lineNumber":249,"author":{"gitId":"-"},"content":"        private int numAnalysisThreads;","isFullCredit":true},{"lineNumber":250,"author":{"gitId":"-"},"content":"        private ZoneId zoneId;","isFullCredit":true},{"lineNumber":251,"author":{"gitId":"-"},"content":"        private boolean isFindingPreviousAuthorsPerformed;","isFullCredit":true},{"lineNumber":252,"author":{"gitId":"-"},"content":"        private boolean isTestMode;","isFullCredit":true},{"lineNumber":253,"author":{"gitId":"-"},"content":"        private boolean isFreshClonePerformed;","isFullCredit":true},{"lineNumber":254,"author":{"gitId":"-"},"content":"        private List\u003cString\u003e locations;","isFullCredit":true},{"lineNumber":255,"author":{"gitId":"-"},"content":"        private boolean isViewModeOnly;","isFullCredit":true},{"lineNumber":256,"author":{"gitId":"-"},"content":"        private Path reportDirectoryPath;","isFullCredit":true},{"lineNumber":257,"author":{"gitId":"-"},"content":"        private Path configFolderPath;","isFullCredit":true},{"lineNumber":258,"author":{"gitId":"-"},"content":"        private Path repoConfigFilePath;","isFullCredit":true},{"lineNumber":259,"author":{"gitId":"-"},"content":"        private Path authorConfigFilePath;","isFullCredit":true},{"lineNumber":260,"author":{"gitId":"-"},"content":"        private Path groupConfigFilePath;","isFullCredit":true},{"lineNumber":261,"author":{"gitId":"-"},"content":"        private Path reportConfigFilePath;","isFullCredit":true},{"lineNumber":262,"author":{"gitId":"-"},"content":"        private ReportConfiguration reportConfiguration;","isFullCredit":true},{"lineNumber":263,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":264,"author":{"gitId":"-"},"content":"        public Builder() {","isFullCredit":true},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":266,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":267,"author":{"gitId":"-"},"content":"        /**","isFullCredit":true},{"lineNumber":268,"author":{"gitId":"-"},"content":"         * Adds the {@code outputFilePath} to CliArguments.","isFullCredit":true},{"lineNumber":269,"author":{"gitId":"-"},"content":"         *","isFullCredit":true},{"lineNumber":270,"author":{"gitId":"-"},"content":"         * @param outputFilePath The output file path.","isFullCredit":true},{"lineNumber":271,"author":{"gitId":"-"},"content":"         */","isFullCredit":true},{"lineNumber":272,"author":{"gitId":"-"},"content":"        public Builder outputFilePath(Path outputFilePath) {","isFullCredit":true},{"lineNumber":273,"author":{"gitId":"-"},"content":"            this.outputFilePath \u003d outputFilePath;","isFullCredit":true},{"lineNumber":274,"author":{"gitId":"-"},"content":"            return this;","isFullCredit":true},{"lineNumber":275,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":276,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":277,"author":{"gitId":"-"},"content":"        /**","isFullCredit":true},{"lineNumber":278,"author":{"gitId":"-"},"content":"         * Adds the {@code assetsFilePath} to CliArguments.","isFullCredit":true},{"lineNumber":279,"author":{"gitId":"-"},"content":"         *","isFullCredit":true},{"lineNumber":280,"author":{"gitId":"-"},"content":"         * @param assetsFilePath The assets file path.","isFullCredit":true},{"lineNumber":281,"author":{"gitId":"-"},"content":"         */","isFullCredit":true},{"lineNumber":282,"author":{"gitId":"-"},"content":"        public Builder assetsFilePath(Path assetsFilePath) {","isFullCredit":true},{"lineNumber":283,"author":{"gitId":"-"},"content":"            this.assetsFilePath \u003d assetsFilePath;","isFullCredit":true},{"lineNumber":284,"author":{"gitId":"-"},"content":"            return this;","isFullCredit":true},{"lineNumber":285,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":286,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":287,"author":{"gitId":"-"},"content":"        /**","isFullCredit":true},{"lineNumber":288,"author":{"gitId":"-"},"content":"         * Adds the {@code sinceDate} to CliArguments.","isFullCredit":true},{"lineNumber":289,"author":{"gitId":"-"},"content":"         *","isFullCredit":true},{"lineNumber":290,"author":{"gitId":"-"},"content":"         * @param sinceDate The since date.","isFullCredit":true},{"lineNumber":291,"author":{"gitId":"-"},"content":"         */","isFullCredit":true},{"lineNumber":292,"author":{"gitId":"-"},"content":"        public Builder sinceDate(LocalDateTime sinceDate) {","isFullCredit":true},{"lineNumber":293,"author":{"gitId":"-"},"content":"            this.sinceDate \u003d sinceDate;","isFullCredit":true},{"lineNumber":294,"author":{"gitId":"-"},"content":"            return this;","isFullCredit":true},{"lineNumber":295,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":296,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":297,"author":{"gitId":"-"},"content":"        /**","isFullCredit":true},{"lineNumber":298,"author":{"gitId":"-"},"content":"         * Adds the {@code untilDate} to CliArguments.","isFullCredit":true},{"lineNumber":299,"author":{"gitId":"-"},"content":"         *","isFullCredit":true},{"lineNumber":300,"author":{"gitId":"-"},"content":"         * @param untilDate The until date.","isFullCredit":true},{"lineNumber":301,"author":{"gitId":"-"},"content":"         */","isFullCredit":true},{"lineNumber":302,"author":{"gitId":"-"},"content":"        public Builder untilDate(LocalDateTime untilDate) {","isFullCredit":true},{"lineNumber":303,"author":{"gitId":"-"},"content":"            this.untilDate \u003d untilDate;","isFullCredit":true},{"lineNumber":304,"author":{"gitId":"-"},"content":"            return this;","isFullCredit":true},{"lineNumber":305,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":306,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":307,"author":{"gitId":"-"},"content":"        /**","isFullCredit":true},{"lineNumber":308,"author":{"gitId":"-"},"content":"         * Adds the {@code isSinceDateProvided} to CliArguments.","isFullCredit":true},{"lineNumber":309,"author":{"gitId":"-"},"content":"         *","isFullCredit":true},{"lineNumber":310,"author":{"gitId":"-"},"content":"         * @param isSinceDateProvided Is the since date provided.","isFullCredit":true},{"lineNumber":311,"author":{"gitId":"-"},"content":"         */","isFullCredit":true},{"lineNumber":312,"author":{"gitId":"-"},"content":"        public Builder isSinceDateProvided(boolean isSinceDateProvided) {","isFullCredit":true},{"lineNumber":313,"author":{"gitId":"-"},"content":"            this.isSinceDateProvided \u003d isSinceDateProvided;","isFullCredit":true},{"lineNumber":314,"author":{"gitId":"-"},"content":"            return this;","isFullCredit":true},{"lineNumber":315,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":316,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":317,"author":{"gitId":"-"},"content":"        /**","isFullCredit":true},{"lineNumber":318,"author":{"gitId":"-"},"content":"         * Adds the {@code isUntilDateProvided} to CliArguments.","isFullCredit":true},{"lineNumber":319,"author":{"gitId":"-"},"content":"         *","isFullCredit":true},{"lineNumber":320,"author":{"gitId":"-"},"content":"         * @param isUntilDateProvided Is the until date provided.","isFullCredit":true},{"lineNumber":321,"author":{"gitId":"-"},"content":"         */","isFullCredit":true},{"lineNumber":322,"author":{"gitId":"-"},"content":"        public Builder isUntilDateProvided(boolean isUntilDateProvided) {","isFullCredit":true},{"lineNumber":323,"author":{"gitId":"-"},"content":"            this.isUntilDateProvided \u003d isUntilDateProvided;","isFullCredit":true},{"lineNumber":324,"author":{"gitId":"-"},"content":"            return this;","isFullCredit":true},{"lineNumber":325,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":326,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":327,"author":{"gitId":"-"},"content":"        /**","isFullCredit":true},{"lineNumber":328,"author":{"gitId":"-"},"content":"         * Adds the {@code formats} to CliArguments.","isFullCredit":true},{"lineNumber":329,"author":{"gitId":"-"},"content":"         *","isFullCredit":true},{"lineNumber":330,"author":{"gitId":"-"},"content":"         * @param formats The list of {@link FileType}.","isFullCredit":true},{"lineNumber":331,"author":{"gitId":"-"},"content":"         */","isFullCredit":true},{"lineNumber":332,"author":{"gitId":"-"},"content":"        public Builder formats(List\u003cFileType\u003e formats) {","isFullCredit":true},{"lineNumber":333,"author":{"gitId":"-"},"content":"            this.formats \u003d formats;","isFullCredit":true},{"lineNumber":334,"author":{"gitId":"-"},"content":"            return this;","isFullCredit":true},{"lineNumber":335,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":336,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":337,"author":{"gitId":"-"},"content":"        /**","isFullCredit":true},{"lineNumber":338,"author":{"gitId":"-"},"content":"         * Adds the {@code isLastModifiedDateIncluded} to CliArguments.","isFullCredit":true},{"lineNumber":339,"author":{"gitId":"-"},"content":"         *","isFullCredit":true},{"lineNumber":340,"author":{"gitId":"-"},"content":"         * @param isLastModifiedDateIncluded Is the last modified date included.","isFullCredit":true},{"lineNumber":341,"author":{"gitId":"-"},"content":"         */","isFullCredit":true},{"lineNumber":342,"author":{"gitId":"-"},"content":"        public Builder isLastModifiedDateIncluded(boolean isLastModifiedDateIncluded) {","isFullCredit":true},{"lineNumber":343,"author":{"gitId":"-"},"content":"            this.isLastModifiedDateIncluded \u003d isLastModifiedDateIncluded;","isFullCredit":true},{"lineNumber":344,"author":{"gitId":"-"},"content":"            return this;","isFullCredit":true},{"lineNumber":345,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":346,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":347,"author":{"gitId":"-"},"content":"        /**","isFullCredit":true},{"lineNumber":348,"author":{"gitId":"-"},"content":"         * Adds the {@code isShallowCloningPerformed} to CliArguments.","isFullCredit":true},{"lineNumber":349,"author":{"gitId":"-"},"content":"         *","isFullCredit":true},{"lineNumber":350,"author":{"gitId":"-"},"content":"         * @param isShallowCloningPerformed Is shallow cloning performed.","isFullCredit":true},{"lineNumber":351,"author":{"gitId":"-"},"content":"         */","isFullCredit":true},{"lineNumber":352,"author":{"gitId":"-"},"content":"        public Builder isShallowCloningPerformed(boolean isShallowCloningPerformed) {","isFullCredit":true},{"lineNumber":353,"author":{"gitId":"-"},"content":"            this.isShallowCloningPerformed \u003d isShallowCloningPerformed;","isFullCredit":true},{"lineNumber":354,"author":{"gitId":"-"},"content":"            return this;","isFullCredit":true},{"lineNumber":355,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":356,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":357,"author":{"gitId":"-"},"content":"        /**","isFullCredit":true},{"lineNumber":358,"author":{"gitId":"-"},"content":"         * Adds the {@code isAutomaticallyLaunching} to CliArguments.","isFullCredit":true},{"lineNumber":359,"author":{"gitId":"-"},"content":"         *","isFullCredit":true},{"lineNumber":360,"author":{"gitId":"-"},"content":"         * @param isAutomaticallyLaunching Is automatically launching.","isFullCredit":true},{"lineNumber":361,"author":{"gitId":"-"},"content":"         */","isFullCredit":true},{"lineNumber":362,"author":{"gitId":"-"},"content":"        public Builder isAutomaticallyLaunching(boolean isAutomaticallyLaunching) {","isFullCredit":true},{"lineNumber":363,"author":{"gitId":"-"},"content":"            this.isAutomaticallyLaunching \u003d isAutomaticallyLaunching;","isFullCredit":true},{"lineNumber":364,"author":{"gitId":"-"},"content":"            return this;","isFullCredit":true},{"lineNumber":365,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":366,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":367,"author":{"gitId":"-"},"content":"        /**","isFullCredit":true},{"lineNumber":368,"author":{"gitId":"-"},"content":"         * Adds the {@code isStandaloneConfigIgnored} to CliArguments.","isFullCredit":true},{"lineNumber":369,"author":{"gitId":"-"},"content":"         *","isFullCredit":true},{"lineNumber":370,"author":{"gitId":"-"},"content":"         * @param isStandaloneConfigIgnored Is standalone config ignored.","isFullCredit":true},{"lineNumber":371,"author":{"gitId":"-"},"content":"         */","isFullCredit":true},{"lineNumber":372,"author":{"gitId":"-"},"content":"        public Builder isStandaloneConfigIgnored(boolean isStandaloneConfigIgnored) {","isFullCredit":true},{"lineNumber":373,"author":{"gitId":"-"},"content":"            this.isStandaloneConfigIgnored \u003d isStandaloneConfigIgnored;","isFullCredit":true},{"lineNumber":374,"author":{"gitId":"-"},"content":"            return this;","isFullCredit":true},{"lineNumber":375,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":376,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":377,"author":{"gitId":"-"},"content":"        /**","isFullCredit":true},{"lineNumber":378,"author":{"gitId":"-"},"content":"         * Adds the {@code isFileSizeLimitIgnored} to CliArguments.","isFullCredit":true},{"lineNumber":379,"author":{"gitId":"-"},"content":"         *","isFullCredit":true},{"lineNumber":380,"author":{"gitId":"-"},"content":"         * @param isFileSizeLimitIgnored Is file size limit ignored.","isFullCredit":true},{"lineNumber":381,"author":{"gitId":"-"},"content":"         */","isFullCredit":true},{"lineNumber":382,"author":{"gitId":"-"},"content":"        public Builder isFileSizeLimitIgnored(boolean isFileSizeLimitIgnored) {","isFullCredit":true},{"lineNumber":383,"author":{"gitId":"-"},"content":"            this.isFileSizeLimitIgnored \u003d isFileSizeLimitIgnored;","isFullCredit":true},{"lineNumber":384,"author":{"gitId":"-"},"content":"            return this;","isFullCredit":true},{"lineNumber":385,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":386,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":387,"author":{"gitId":"-"},"content":"        /**","isFullCredit":true},{"lineNumber":388,"author":{"gitId":"-"},"content":"         * Adds the {@code numCloningThreads} to CliArguments.","isFullCredit":true},{"lineNumber":389,"author":{"gitId":"-"},"content":"         *","isFullCredit":true},{"lineNumber":390,"author":{"gitId":"-"},"content":"         * @param numCloningThreads The number of cloning threads.","isFullCredit":true},{"lineNumber":391,"author":{"gitId":"-"},"content":"         */","isFullCredit":true},{"lineNumber":392,"author":{"gitId":"-"},"content":"        public Builder numCloningThreads(int numCloningThreads) {","isFullCredit":true},{"lineNumber":393,"author":{"gitId":"-"},"content":"            this.numCloningThreads \u003d numCloningThreads;","isFullCredit":true},{"lineNumber":394,"author":{"gitId":"-"},"content":"            return this;","isFullCredit":true},{"lineNumber":395,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":396,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":397,"author":{"gitId":"-"},"content":"        /**","isFullCredit":true},{"lineNumber":398,"author":{"gitId":"-"},"content":"         * Adds the {@code numAnalysisThreads} to CliArguments.","isFullCredit":true},{"lineNumber":399,"author":{"gitId":"-"},"content":"         *","isFullCredit":true},{"lineNumber":400,"author":{"gitId":"-"},"content":"         * @param numAnalysisThreads The number of analysis threads.","isFullCredit":true},{"lineNumber":401,"author":{"gitId":"-"},"content":"         */","isFullCredit":true},{"lineNumber":402,"author":{"gitId":"-"},"content":"        public Builder numAnalysisThreads(int numAnalysisThreads) {","isFullCredit":true},{"lineNumber":403,"author":{"gitId":"-"},"content":"            this.numAnalysisThreads \u003d numAnalysisThreads;","isFullCredit":true},{"lineNumber":404,"author":{"gitId":"-"},"content":"            return this;","isFullCredit":true},{"lineNumber":405,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":406,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":407,"author":{"gitId":"-"},"content":"        /**","isFullCredit":true},{"lineNumber":408,"author":{"gitId":"-"},"content":"         * Adds the {@code zoneId} to CliArguments.","isFullCredit":true},{"lineNumber":409,"author":{"gitId":"-"},"content":"         *","isFullCredit":true},{"lineNumber":410,"author":{"gitId":"-"},"content":"         * @param zoneId The timezone Id.","isFullCredit":true},{"lineNumber":411,"author":{"gitId":"-"},"content":"         */","isFullCredit":true},{"lineNumber":412,"author":{"gitId":"-"},"content":"        public Builder zoneId(ZoneId zoneId) {","isFullCredit":true},{"lineNumber":413,"author":{"gitId":"-"},"content":"            this.zoneId \u003d zoneId;","isFullCredit":true},{"lineNumber":414,"author":{"gitId":"-"},"content":"            return this;","isFullCredit":true},{"lineNumber":415,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":416,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":417,"author":{"gitId":"-"},"content":"        /**","isFullCredit":true},{"lineNumber":418,"author":{"gitId":"-"},"content":"         * Adds the {@code isFindingPreviousAuthorsPerformed} to CliArguments.","isFullCredit":true},{"lineNumber":419,"author":{"gitId":"-"},"content":"         *","isFullCredit":true},{"lineNumber":420,"author":{"gitId":"-"},"content":"         * @param isFindingPreviousAuthorsPerformed Is finding previous authors performed.","isFullCredit":true},{"lineNumber":421,"author":{"gitId":"-"},"content":"         */","isFullCredit":true},{"lineNumber":422,"author":{"gitId":"-"},"content":"        public Builder isFindingPreviousAuthorsPerformed(boolean isFindingPreviousAuthorsPerformed) {","isFullCredit":true},{"lineNumber":423,"author":{"gitId":"-"},"content":"            this.isFindingPreviousAuthorsPerformed \u003d isFindingPreviousAuthorsPerformed;","isFullCredit":true},{"lineNumber":424,"author":{"gitId":"-"},"content":"            return this;","isFullCredit":true},{"lineNumber":425,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":426,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":427,"author":{"gitId":"-"},"content":"        /**","isFullCredit":true},{"lineNumber":428,"author":{"gitId":"-"},"content":"         * Adds the {@code isTestMode} to CliArguments.","isFullCredit":true},{"lineNumber":429,"author":{"gitId":"-"},"content":"         *","isFullCredit":true},{"lineNumber":430,"author":{"gitId":"-"},"content":"         * @param isTestMode Is test mode.","isFullCredit":true},{"lineNumber":431,"author":{"gitId":"-"},"content":"         */","isFullCredit":true},{"lineNumber":432,"author":{"gitId":"-"},"content":"        public Builder isTestMode(boolean isTestMode) {","isFullCredit":true},{"lineNumber":433,"author":{"gitId":"-"},"content":"            this.isTestMode \u003d isTestMode;","isFullCredit":true},{"lineNumber":434,"author":{"gitId":"-"},"content":"            return this;","isFullCredit":true},{"lineNumber":435,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":436,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":437,"author":{"gitId":"-"},"content":"        /**","isFullCredit":true},{"lineNumber":438,"author":{"gitId":"-"},"content":"         * Adds the {@code isFreshClonePerformed} to CliArguments.","isFullCredit":true},{"lineNumber":439,"author":{"gitId":"-"},"content":"         *","isFullCredit":true},{"lineNumber":440,"author":{"gitId":"-"},"content":"         * @param isFreshClonePerformed Is fresh clone performed.","isFullCredit":true},{"lineNumber":441,"author":{"gitId":"-"},"content":"         */","isFullCredit":true},{"lineNumber":442,"author":{"gitId":"-"},"content":"        public Builder isFreshClonePerformed(boolean isFreshClonePerformed) {","isFullCredit":true},{"lineNumber":443,"author":{"gitId":"-"},"content":"            this.isFreshClonePerformed \u003d isFreshClonePerformed;","isFullCredit":true},{"lineNumber":444,"author":{"gitId":"-"},"content":"            return this;","isFullCredit":true},{"lineNumber":445,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":446,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":447,"author":{"gitId":"-"},"content":"        /**","isFullCredit":true},{"lineNumber":448,"author":{"gitId":"-"},"content":"         * Adds the {@code locations} to CliArguments.","isFullCredit":true},{"lineNumber":449,"author":{"gitId":"-"},"content":"         *","isFullCredit":true},{"lineNumber":450,"author":{"gitId":"-"},"content":"         * @param locations The list of locations.","isFullCredit":true},{"lineNumber":451,"author":{"gitId":"-"},"content":"         */","isFullCredit":true},{"lineNumber":452,"author":{"gitId":"-"},"content":"        public Builder locations(List\u003cString\u003e locations) {","isFullCredit":true},{"lineNumber":453,"author":{"gitId":"-"},"content":"            this.locations \u003d locations;","isFullCredit":true},{"lineNumber":454,"author":{"gitId":"-"},"content":"            return this;","isFullCredit":true},{"lineNumber":455,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":456,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":457,"author":{"gitId":"-"},"content":"        /**","isFullCredit":true},{"lineNumber":458,"author":{"gitId":"-"},"content":"         * Adds the {@code isViewModeOnly} to CliArguments.","isFullCredit":true},{"lineNumber":459,"author":{"gitId":"-"},"content":"         *","isFullCredit":true},{"lineNumber":460,"author":{"gitId":"-"},"content":"         * @param isViewModeOnly Is view mode only.","isFullCredit":true},{"lineNumber":461,"author":{"gitId":"-"},"content":"         */","isFullCredit":true},{"lineNumber":462,"author":{"gitId":"-"},"content":"        public Builder isViewModeOnly(boolean isViewModeOnly) {","isFullCredit":true},{"lineNumber":463,"author":{"gitId":"-"},"content":"            this.isViewModeOnly \u003d isViewModeOnly;","isFullCredit":true},{"lineNumber":464,"author":{"gitId":"-"},"content":"            return this;","isFullCredit":true},{"lineNumber":465,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":466,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":467,"author":{"gitId":"-"},"content":"        /**","isFullCredit":true},{"lineNumber":468,"author":{"gitId":"-"},"content":"         * Adds the {@code reportDirectoryPath} to CliArguments.","isFullCredit":true},{"lineNumber":469,"author":{"gitId":"-"},"content":"         *","isFullCredit":true},{"lineNumber":470,"author":{"gitId":"-"},"content":"         * @param reportDirectoryPath The report directory path.","isFullCredit":true},{"lineNumber":471,"author":{"gitId":"-"},"content":"         */","isFullCredit":true},{"lineNumber":472,"author":{"gitId":"-"},"content":"        public Builder reportDirectoryPath(Path reportDirectoryPath) {","isFullCredit":true},{"lineNumber":473,"author":{"gitId":"-"},"content":"            this.reportDirectoryPath \u003d reportDirectoryPath;","isFullCredit":true},{"lineNumber":474,"author":{"gitId":"-"},"content":"            return this;","isFullCredit":true},{"lineNumber":475,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":476,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":477,"author":{"gitId":"-"},"content":"        /**","isFullCredit":true},{"lineNumber":478,"author":{"gitId":"-"},"content":"         * Adds the {@code configFolderPath} to CliArguments. {@code configFolderPath} is utilised to configure the","isFullCredit":true},{"lineNumber":479,"author":{"gitId":"-"},"content":"         * {@code repoConfigFilePath}, {@code authorConfigFilePath}, {@code groupConfigFilePath} and","isFullCredit":true},{"lineNumber":480,"author":{"gitId":"-"},"content":"         * {@code reportConfigFilePath}.","isFullCredit":true},{"lineNumber":481,"author":{"gitId":"-"},"content":"         *","isFullCredit":true},{"lineNumber":482,"author":{"gitId":"-"},"content":"         * @param configFolderPath The config folder path.","isFullCredit":true},{"lineNumber":483,"author":{"gitId":"-"},"content":"         */","isFullCredit":true},{"lineNumber":484,"author":{"gitId":"-"},"content":"        public Builder configFolderPath(Path configFolderPath) {","isFullCredit":true},{"lineNumber":485,"author":{"gitId":"-"},"content":"            this.configFolderPath \u003d configFolderPath.equals(EMPTY_PATH)","isFullCredit":true},{"lineNumber":486,"author":{"gitId":"-"},"content":"                ? configFolderPath.toAbsolutePath()","isFullCredit":true},{"lineNumber":487,"author":{"gitId":"-"},"content":"                : configFolderPath;","isFullCredit":true},{"lineNumber":488,"author":{"gitId":"-"},"content":"            this.repoConfigFilePath \u003d configFolderPath.resolve(RepoConfigCsvParser.REPO_CONFIG_FILENAME);","isFullCredit":true},{"lineNumber":489,"author":{"gitId":"-"},"content":"            this.authorConfigFilePath \u003d configFolderPath.resolve(AuthorConfigCsvParser.AUTHOR_CONFIG_FILENAME);","isFullCredit":true},{"lineNumber":490,"author":{"gitId":"-"},"content":"            this.groupConfigFilePath \u003d configFolderPath.resolve(GroupConfigCsvParser.GROUP_CONFIG_FILENAME);","isFullCredit":true},{"lineNumber":491,"author":{"gitId":"-"},"content":"            this.reportConfigFilePath \u003d configFolderPath.resolve(ReportConfigJsonParser.REPORT_CONFIG_FILENAME);","isFullCredit":true},{"lineNumber":492,"author":{"gitId":"-"},"content":"            return this;","isFullCredit":true},{"lineNumber":493,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":494,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":495,"author":{"gitId":"-"},"content":"        /**","isFullCredit":true},{"lineNumber":496,"author":{"gitId":"-"},"content":"         * Adds the {@code reportConfiguration} to CliArguments.","isFullCredit":true},{"lineNumber":497,"author":{"gitId":"-"},"content":"         *","isFullCredit":true},{"lineNumber":498,"author":{"gitId":"-"},"content":"         * @param reportConfiguration The report configuration.","isFullCredit":true},{"lineNumber":499,"author":{"gitId":"-"},"content":"         */","isFullCredit":true},{"lineNumber":500,"author":{"gitId":"-"},"content":"        public Builder reportConfiguration(ReportConfiguration reportConfiguration) {","isFullCredit":true},{"lineNumber":501,"author":{"gitId":"-"},"content":"            this.reportConfiguration \u003d reportConfiguration;","isFullCredit":true},{"lineNumber":502,"author":{"gitId":"-"},"content":"            return this;","isFullCredit":true},{"lineNumber":503,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":504,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":505,"author":{"gitId":"-"},"content":"        /**","isFullCredit":true},{"lineNumber":506,"author":{"gitId":"-"},"content":"         * Builds CliArguments.","isFullCredit":true},{"lineNumber":507,"author":{"gitId":"-"},"content":"         *","isFullCredit":true},{"lineNumber":508,"author":{"gitId":"-"},"content":"         * @return CliArguments","isFullCredit":true},{"lineNumber":509,"author":{"gitId":"-"},"content":"         */","isFullCredit":true},{"lineNumber":510,"author":{"gitId":"-"},"content":"        public CliArguments build() {","isFullCredit":true},{"lineNumber":511,"author":{"gitId":"-"},"content":"            return new CliArguments(this);","isFullCredit":true},{"lineNumber":512,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":513,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":514,"author":{"gitId":"yong24s"},"content":"}","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":15,"yamidark":2,"yong24s":36,"-":461}},{"path":"src/main/java/reposense/model/RepoConfiguration.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yamidark"},"content":"package reposense.model;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"yong24s"},"content":"import java.io.File;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.ZoneId;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"eugenepeh"},"content":"import java.util.ArrayList;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yong24s"},"content":"import java.util.Collections;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"eugenepeh"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"eugenepeh"},"content":"import java.util.Map;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yong24s"},"content":"import java.util.logging.Logger;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.git.GitBranch;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.git.exception.GitBranchException;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"yong24s"},"content":"import reposense.system.LogsManager;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"eugenepeh"},"content":"import reposense.util.FileUtil;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents configuration information from CSV config file for a single repository.","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class RepoConfiguration {","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_BRANCH \u003d \"HEAD\";","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EXTRA_OUTPUT_FOLDER_NAME \u003d \"\";","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final long DEFAULT_FILE_SIZE_LIMIT \u003d 500000;","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"yong24s"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(RepoConfiguration.class);","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private RepoLocation location;","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private String branch;","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"eugenepeh"},"content":"    private String displayName;","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private String outputFolderName;","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final transient String extraOutputFolderName;","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private transient ZoneId zoneId;","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private transient LocalDateTime sinceDate;","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private transient LocalDateTime untilDate;","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private transient String repoFolderName;","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private transient FileTypeManager fileTypeManager;","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"yamidark"},"content":"    private transient List\u003cString\u003e ignoreGlobList \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private transient List\u003cString\u003e ignoredAuthorsList \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private transient AuthorConfiguration authorConfig;","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"yong24s"},"content":"    private transient boolean isStandaloneConfigIgnored;","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private transient boolean isFileSizeLimitIgnored;","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private transient List\u003cCommitHash\u003e ignoreCommitList;","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"jamessspanggg"},"content":"    private transient boolean isLastModifiedDateIncluded;","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private transient boolean isShallowCloningPerformed;","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private transient boolean isFindingPreviousAuthorsPerformed;","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private transient boolean isFormatsOverriding;","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private transient boolean isIgnoreGlobListOverriding;","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private transient boolean isIgnoreCommitListOverriding;","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private transient boolean isIgnoredAuthorsListOverriding;","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private transient long fileSizeLimit;","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private transient boolean isFileSizeLimitOverriding;","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private transient boolean isIgnoredFileAnalysisSkipped;","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public RepoConfiguration(RepoLocation location) {","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"yong24s"},"content":"        this(location, DEFAULT_BRANCH);","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public RepoConfiguration(RepoLocation location, String branch) {","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this(location, branch, DEFAULT_EXTRA_OUTPUT_FOLDER_NAME);","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public RepoConfiguration(RepoLocation location, String branch, String extraOutputFolderName) {","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this(location, branch, Collections.emptyList(), Collections.emptyList(),","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"                RepoConfiguration.DEFAULT_FILE_SIZE_LIMIT, false, false, Collections.emptyList(), false, false, false,","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"                false, false, false, false, Collections.emptyList(), false, extraOutputFolderName);","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public RepoConfiguration(RepoLocation location, String branch, List\u003cFileType\u003e formats, List\u003cString\u003e ignoreGlobList,","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"            long fileSizeLimit, boolean isStandaloneConfigIgnored, boolean isFileSizeLimitIgnored,","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"            List\u003cCommitHash\u003e ignoreCommitList, boolean isFormatsOverriding, boolean isIgnoreGlobListOverriding,","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"            boolean isIgnoreCommitListOverriding, boolean isFileSizeLimitOverriding, boolean isShallowCloningPerformed,","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"            boolean isFindingPreviousAuthorsPerformed, boolean isIgnoredFileAnalysisSkipped,","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"            List\u003cString\u003e ignoredAuthorsList, boolean isIgnoredAuthorsListOverriding) {","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this(location, branch, formats, ignoreGlobList, fileSizeLimit, isStandaloneConfigIgnored,","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"                isFileSizeLimitIgnored, ignoreCommitList, isFormatsOverriding, isIgnoreGlobListOverriding,","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"                isIgnoreCommitListOverriding, isFileSizeLimitOverriding, isShallowCloningPerformed,","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"                isFindingPreviousAuthorsPerformed, isIgnoredFileAnalysisSkipped, ignoredAuthorsList,","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"                isIgnoredAuthorsListOverriding, DEFAULT_EXTRA_OUTPUT_FOLDER_NAME);","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public RepoConfiguration(RepoLocation location, String branch, List\u003cFileType\u003e formats, List\u003cString\u003e ignoreGlobList,","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"            long fileSizeLimit, boolean isStandaloneConfigIgnored, boolean isFileSizeLimitIgnored,","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"            List\u003cCommitHash\u003e ignoreCommitList, boolean isFormatsOverriding, boolean isIgnoreGlobListOverriding,","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"            boolean isIgnoreCommitListOverriding, boolean isFileSizeLimitOverriding, boolean isShallowCloningPerformed,","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"            boolean isFindingPreviousAuthorsPerformed, boolean isIgnoredFileAnalysisSkipped,","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"            List\u003cString\u003e ignoredAuthorsList, boolean isIgnoredAuthorsListOverriding, String extraOutputFolderName) {","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.authorConfig \u003d new AuthorConfiguration(location, branch);","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"yong24s"},"content":"        this.location \u003d location;","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.branch \u003d location.isEmpty() ? DEFAULT_BRANCH : branch;","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"yong24s"},"content":"        this.ignoreGlobList \u003d ignoreGlobList;","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.fileSizeLimit \u003d fileSizeLimit;","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"yong24s"},"content":"        this.isStandaloneConfigIgnored \u003d isStandaloneConfigIgnored;","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.isFileSizeLimitIgnored \u003d isFileSizeLimitIgnored;","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.fileTypeManager \u003d new FileTypeManager(formats);","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"yamidark"},"content":"        this.ignoreCommitList \u003d ignoreCommitList;","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"        this.isFormatsOverriding \u003d isFormatsOverriding;","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.isIgnoreGlobListOverriding \u003d isIgnoreGlobListOverriding;","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"-"},"content":"        this.isIgnoreCommitListOverriding \u003d isIgnoreCommitListOverriding;","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"        this.isFileSizeLimitOverriding \u003d isFileSizeLimitOverriding;","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"        this.isShallowCloningPerformed \u003d isShallowCloningPerformed;","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.isFindingPreviousAuthorsPerformed \u003d isFindingPreviousAuthorsPerformed;","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"-"},"content":"        this.isIgnoredFileAnalysisSkipped \u003d isIgnoredFileAnalysisSkipped;","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"        this.ignoredAuthorsList \u003d ignoredAuthorsList;","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"        this.isIgnoredAuthorsListOverriding \u003d isIgnoredAuthorsListOverriding;","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"        this.extraOutputFolderName \u003d extraOutputFolderName;","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String organization \u003d location.getOrganization();","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String repoName \u003d location.getRepoName();","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"-"},"content":"        displayName \u003d repoName + \"[\" + branch + \"]\";","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"-"},"content":"        outputFolderName \u003d repoName + \"_\" + branch;","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"-"},"content":"        repoFolderName \u003d repoName;","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!organization.isEmpty()) {","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"-"},"content":"            repoFolderName \u003d organization + \"_\" + repoFolderName;","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"            displayName \u003d organization + \"/\" + displayName;","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"            outputFolderName \u003d organization + \"_\" + outputFolderName;","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"yong24s"},"content":"        }","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static void setDatesToRepoConfigs(List\u003cRepoConfiguration\u003e configs,","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"-"},"content":"            LocalDateTime sinceDate, LocalDateTime untilDate) {","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"yong24s"},"content":"        for (RepoConfiguration config : configs) {","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"            config.setSinceDate(sinceDate);","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"-"},"content":"            config.setUntilDate(untilDate);","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"yong24s"},"content":"        }","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static void setZoneIdToRepoConfigs(List\u003cRepoConfiguration\u003e configs, ZoneId zoneId) {","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"-"},"content":"        for (RepoConfiguration config : configs) {","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"-"},"content":"            config.setZoneId(zoneId);","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"jamessspanggg"},"content":"    public static void setIsLastModifiedDateIncludedToRepoConfigs(List\u003cRepoConfiguration\u003e configs,","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"jamessspanggg"},"content":"                                                                  boolean isLastModifiedDateIncluded) {","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"jamessspanggg"},"content":"        for (RepoConfiguration config : configs) {","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"jamessspanggg"},"content":"            config.setIsLastModifiedDateIncluded(isLastModifiedDateIncluded);","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"jamessspanggg"},"content":"        }","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static void setIsShallowCloningPerformedToRepoConfigs(List\u003cRepoConfiguration\u003e configs,","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"-"},"content":"                                                                 boolean isShallowCloningPerformed) {","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (isShallowCloningPerformed) {","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"-"},"content":"            configs.stream().forEach(config -\u003e config.setIsShallowCloningPerformed(true));","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public static void setIsFindingPreviousAuthorsPerformedToRepoConfigs(List\u003cRepoConfiguration\u003e configs,","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"-"},"content":"                                                                         boolean isFindingPreviousAuthorsPerformed) {","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (isFindingPreviousAuthorsPerformed) {","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"-"},"content":"            configs.stream().forEach(config -\u003e config.setIsFindingPreviousAuthorsPerformed(true));","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public static void setToFalseIsFindingPreviousAuthorsPerformedToRepoConfigs(List\u003cRepoConfiguration\u003e configs) {","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"-"},"content":"        configs.stream().forEach(config -\u003e config.setIsFindingPreviousAuthorsPerformed(false));","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public static void setHasAuthorConfigFileToRepoConfigs(List\u003cRepoConfiguration\u003e configs,","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"-"},"content":"                                                           boolean setHasAuthorConfigFile) {","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"-"},"content":"        configs.stream().forEach(config -\u003e config.setHasAuthorConfigFile(setHasAuthorConfigFile));","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"yong24s"},"content":"    /**","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Merges a {@link RepoConfiguration} from {@code repoConfigs} with an {@link AuthorConfiguration} from","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * {@code authorConfigs} if their {@link RepoLocation} and branch matches.","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"yong24s"},"content":"     */","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public static void merge(List\u003cRepoConfiguration\u003e repoConfigs, List\u003cAuthorConfiguration\u003e authorConfigs) {","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"-"},"content":"        for (AuthorConfiguration authorConfig : authorConfigs) {","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"-"},"content":"            if (authorConfig.getLocation().isEmpty()) {","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"-"},"content":"                for (RepoConfiguration repoConfig : repoConfigs) {","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"-"},"content":"                    repoConfig.addAuthors(authorConfig.getAuthorList());","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"-"},"content":"                }","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"-"},"content":"                continue;","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"-"},"content":"            List\u003cRepoConfiguration\u003e locationMatchingRepoConfigs \u003d","isFullCredit":true},{"lineNumber":179,"author":{"gitId":"-"},"content":"                    getMatchingRepoConfigsByLocation(repoConfigs, authorConfig.getLocation());","isFullCredit":true},{"lineNumber":180,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (locationMatchingRepoConfigs.isEmpty()) {","isFullCredit":true},{"lineNumber":182,"author":{"gitId":"yong24s"},"content":"                logger.warning(String.format(","isFullCredit":true},{"lineNumber":183,"author":{"gitId":"-"},"content":"                        \"Repository %s is not found in repo-config.csv.\",","isFullCredit":true},{"lineNumber":184,"author":{"gitId":"-"},"content":"                        authorConfig.getLocation()));","isFullCredit":true},{"lineNumber":185,"author":{"gitId":"yong24s"},"content":"                continue;","isFullCredit":true},{"lineNumber":186,"author":{"gitId":"yong24s"},"content":"            }","isFullCredit":true},{"lineNumber":187,"author":{"gitId":"-"},"content":"            if (authorConfig.isDefaultBranch()) {","isFullCredit":true},{"lineNumber":188,"author":{"gitId":"-"},"content":"                locationMatchingRepoConfigs.forEach(matchingRepoConfig -\u003e {","isFullCredit":true},{"lineNumber":189,"author":{"gitId":"-"},"content":"                    matchingRepoConfig.addAuthors(authorConfig.getAuthorList());","isFullCredit":true},{"lineNumber":190,"author":{"gitId":"-"},"content":"                });","isFullCredit":true},{"lineNumber":191,"author":{"gitId":"-"},"content":"                continue;","isFullCredit":true},{"lineNumber":192,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":193,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":194,"author":{"gitId":"-"},"content":"            RepoConfiguration branchMatchingRepoConfig \u003d getMatchingRepoConfig(repoConfigs, authorConfig);","isFullCredit":true},{"lineNumber":195,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":196,"author":{"gitId":"-"},"content":"            if (branchMatchingRepoConfig \u003d\u003d null) {","isFullCredit":true},{"lineNumber":197,"author":{"gitId":"-"},"content":"                if (!authorConfig.isDefaultBranch()) {","isFullCredit":true},{"lineNumber":198,"author":{"gitId":"-"},"content":"                    logger.warning(String.format(","isFullCredit":true},{"lineNumber":199,"author":{"gitId":"-"},"content":"                            \"Repository %s (branch %s) is not found in repo-config.csv.\",","isFullCredit":true},{"lineNumber":200,"author":{"gitId":"-"},"content":"                            authorConfig.getLocation(), authorConfig.getBranch()));","isFullCredit":true},{"lineNumber":201,"author":{"gitId":"yong24s"},"content":"                }","isFullCredit":true},{"lineNumber":202,"author":{"gitId":"-"},"content":"                continue;","isFullCredit":true},{"lineNumber":203,"author":{"gitId":"yong24s"},"content":"            }","isFullCredit":true},{"lineNumber":204,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":205,"author":{"gitId":"-"},"content":"            branchMatchingRepoConfig.addAuthors(authorConfig.getAuthorList());","isFullCredit":true},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":208,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * Sets the list of groups in {@code groupConfigs} to the respective {@code repoConfigs}.","isFullCredit":true},{"lineNumber":211,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public static void setGroupConfigsToRepos(List\u003cRepoConfiguration\u003e repoConfigs,","isFullCredit":true},{"lineNumber":213,"author":{"gitId":"-"},"content":"            List\u003cGroupConfiguration\u003e groupConfigs) {","isFullCredit":true},{"lineNumber":214,"author":{"gitId":"-"},"content":"        for (GroupConfiguration groupConfig : groupConfigs) {","isFullCredit":true},{"lineNumber":215,"author":{"gitId":"-"},"content":"            List\u003cRepoConfiguration\u003e matchingRepoConfigs;","isFullCredit":true},{"lineNumber":216,"author":{"gitId":"-"},"content":"            if (groupConfig.getLocation().isEmpty()) {","isFullCredit":true},{"lineNumber":217,"author":{"gitId":"-"},"content":"                matchingRepoConfigs \u003d repoConfigs;","isFullCredit":true},{"lineNumber":218,"author":{"gitId":"-"},"content":"            } else {","isFullCredit":true},{"lineNumber":219,"author":{"gitId":"-"},"content":"                matchingRepoConfigs \u003d getMatchingRepoConfigsByLocation(repoConfigs,","isFullCredit":true},{"lineNumber":220,"author":{"gitId":"-"},"content":"                        groupConfig.getLocation());","isFullCredit":true},{"lineNumber":221,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":222,"author":{"gitId":"-"},"content":"            if (matchingRepoConfigs.isEmpty()) {","isFullCredit":true},{"lineNumber":223,"author":{"gitId":"-"},"content":"                logger.warning(String.format(","isFullCredit":true},{"lineNumber":224,"author":{"gitId":"-"},"content":"                        \"Repository %s is not found in repo-config.csv.\", groupConfig.getLocation()));","isFullCredit":true},{"lineNumber":225,"author":{"gitId":"-"},"content":"                continue;","isFullCredit":true},{"lineNumber":226,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":227,"author":{"gitId":"-"},"content":"            matchingRepoConfigs.forEach(matchingRepoConfig -\u003e {","isFullCredit":true},{"lineNumber":228,"author":{"gitId":"-"},"content":"                matchingRepoConfig.addGroups(groupConfig.getGroupsList());","isFullCredit":true},{"lineNumber":229,"author":{"gitId":"-"},"content":"            });","isFullCredit":true},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":232,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":233,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":234,"author":{"gitId":"-"},"content":"     * Iterates through {@code repoConfigs} to find a {@link RepoConfiguration} with {@link RepoLocation} and branch","isFullCredit":true},{"lineNumber":235,"author":{"gitId":"-"},"content":"     * that matches {@code authorConfig}. Returns {@code null} if no match is found.","isFullCredit":true},{"lineNumber":236,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":237,"author":{"gitId":"-"},"content":"    private static RepoConfiguration getMatchingRepoConfig(List\u003cRepoConfiguration\u003e repoConfigs,","isFullCredit":true},{"lineNumber":238,"author":{"gitId":"-"},"content":"            AuthorConfiguration authorConfig) {","isFullCredit":true},{"lineNumber":239,"author":{"gitId":"-"},"content":"        if (authorConfig.isDefaultBranch()) {","isFullCredit":true},{"lineNumber":240,"author":{"gitId":"-"},"content":"            return null;","isFullCredit":true},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":242,"author":{"gitId":"-"},"content":"        for (RepoConfiguration repoConfig : repoConfigs) {","isFullCredit":true},{"lineNumber":243,"author":{"gitId":"-"},"content":"            if (repoConfig.getLocation().equals(authorConfig.getLocation())","isFullCredit":true},{"lineNumber":244,"author":{"gitId":"-"},"content":"                    \u0026\u0026 repoConfig.getBranch().equals(authorConfig.getBranch())) {","isFullCredit":true},{"lineNumber":245,"author":{"gitId":"-"},"content":"                return repoConfig;","isFullCredit":true},{"lineNumber":246,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":248,"author":{"gitId":"-"},"content":"        return null;","isFullCredit":true},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":250,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":251,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":252,"author":{"gitId":"-"},"content":"     * Returns a list of {@link RepoConfiguration} where the {@link RepoLocation} of a {@link RepoConfiguration}","isFullCredit":true},{"lineNumber":253,"author":{"gitId":"-"},"content":"     * in the list of {@code configs} matches {@code targetRepoLocation}.","isFullCredit":true},{"lineNumber":254,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":255,"author":{"gitId":"-"},"content":"    private static List\u003cRepoConfiguration\u003e getMatchingRepoConfigsByLocation(List\u003cRepoConfiguration\u003e configs,","isFullCredit":true},{"lineNumber":256,"author":{"gitId":"-"},"content":"            RepoLocation targetRepoLocation) {","isFullCredit":true},{"lineNumber":257,"author":{"gitId":"-"},"content":"        return configs.stream().filter(config -\u003e config.getLocation().equals(targetRepoLocation))","isFullCredit":true},{"lineNumber":258,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","isFullCredit":true},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":260,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":261,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":262,"author":{"gitId":"-"},"content":"     * Sets {@code formats} to {@link RepoConfiguration} in {@code configs} if its format list is empty.","isFullCredit":true},{"lineNumber":263,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":264,"author":{"gitId":"-"},"content":"    public static void setFormatsToRepoConfigs(List\u003cRepoConfiguration\u003e configs, List\u003cFileType\u003e formats) {","isFullCredit":true},{"lineNumber":265,"author":{"gitId":"-"},"content":"        for (RepoConfiguration config : configs) {","isFullCredit":true},{"lineNumber":266,"author":{"gitId":"-"},"content":"            if (!config.fileTypeManager.hasSpecifiedFormats()) {","isFullCredit":true},{"lineNumber":267,"author":{"gitId":"-"},"content":"                config.fileTypeManager.setFormats(formats);","isFullCredit":true},{"lineNumber":268,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":269,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":270,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":271,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":272,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":273,"author":{"gitId":"-"},"content":"     * Sets each {@link RepoConfiguration} in {@code configs} to ignore its standalone config, if","isFullCredit":true},{"lineNumber":274,"author":{"gitId":"-"},"content":"     * {@code ignoreAllStandaloneConfigs} is true.","isFullCredit":true},{"lineNumber":275,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":276,"author":{"gitId":"-"},"content":"    public static void setStandaloneConfigIgnoredToRepoConfigs(List\u003cRepoConfiguration\u003e configs,","isFullCredit":true},{"lineNumber":277,"author":{"gitId":"-"},"content":"            boolean ignoreAllStandaloneConfigs) {","isFullCredit":true},{"lineNumber":278,"author":{"gitId":"-"},"content":"        if (ignoreAllStandaloneConfigs) {","isFullCredit":true},{"lineNumber":279,"author":{"gitId":"-"},"content":"            configs.forEach(config -\u003e config.setStandaloneConfigIgnored(true));","isFullCredit":true},{"lineNumber":280,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":281,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":282,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":283,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":284,"author":{"gitId":"-"},"content":"     * Sets each {@link RepoConfiguration} in {@code configs} to ignore its filesize limit, if","isFullCredit":true},{"lineNumber":285,"author":{"gitId":"-"},"content":"     * {@code ignoreFilesizeLimit} is true.","isFullCredit":true},{"lineNumber":286,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":287,"author":{"gitId":"-"},"content":"    public static void setFileSizeLimitIgnoredToRepoConfigs(List\u003cRepoConfiguration\u003e configs,","isFullCredit":true},{"lineNumber":288,"author":{"gitId":"-"},"content":"                                                            boolean ignoreFileSizeLimit) {","isFullCredit":true},{"lineNumber":289,"author":{"gitId":"-"},"content":"        if (ignoreFileSizeLimit) {","isFullCredit":true},{"lineNumber":290,"author":{"gitId":"-"},"content":"            configs.forEach(config -\u003e config.setFileSizeLimitIgnored(true));","isFullCredit":true},{"lineNumber":291,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":292,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":293,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":294,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":295,"author":{"gitId":"-"},"content":"     * Checks if any of the {@code configs} is finding previous authors for commit analysis.","isFullCredit":true},{"lineNumber":296,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":297,"author":{"gitId":"-"},"content":"    public static boolean isAnyRepoFindingPreviousAuthors(List\u003cRepoConfiguration\u003e configs) {","isFullCredit":true},{"lineNumber":298,"author":{"gitId":"-"},"content":"        return configs.stream().anyMatch(RepoConfiguration::isFindingPreviousAuthorsPerformed);","isFullCredit":true},{"lineNumber":299,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":300,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":301,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":302,"author":{"gitId":"-"},"content":"     * Clears existing information related to this repository and its authors, and replaces it with information from","isFullCredit":true},{"lineNumber":303,"author":{"gitId":"-"},"content":"     * {@code standaloneConfig}.","isFullCredit":true},{"lineNumber":304,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":305,"author":{"gitId":"-"},"content":"    public void update(StandaloneConfig standaloneConfig) {","isFullCredit":true},{"lineNumber":306,"author":{"gitId":"-"},"content":"        // only assign the new values when all the fields in {@code standaloneConfig} pass the validations.","isFullCredit":true},{"lineNumber":307,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e replacementFileTypes \u003d FileType.convertFormatStringsToFileTypes(standaloneConfig.getFormats());","isFullCredit":true},{"lineNumber":308,"author":{"gitId":"-"},"content":"        CommitHash.validateCommits(standaloneConfig.getIgnoreCommitList());","isFullCredit":true},{"lineNumber":309,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":310,"author":{"gitId":"-"},"content":"        if (!isIgnoreGlobListOverriding) {","isFullCredit":true},{"lineNumber":311,"author":{"gitId":"-"},"content":"            ignoreGlobList \u003d standaloneConfig.getIgnoreGlobList();","isFullCredit":true},{"lineNumber":312,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":313,"author":{"gitId":"-"},"content":"        if (!isFormatsOverriding) {","isFullCredit":true},{"lineNumber":314,"author":{"gitId":"-"},"content":"            fileTypeManager.setFormats(replacementFileTypes);","isFullCredit":true},{"lineNumber":315,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":316,"author":{"gitId":"-"},"content":"        if (!isIgnoreCommitListOverriding) {","isFullCredit":true},{"lineNumber":317,"author":{"gitId":"-"},"content":"            ignoreCommitList \u003d CommitHash.convertStringsToCommits(standaloneConfig.getIgnoreCommitList());","isFullCredit":true},{"lineNumber":318,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":319,"author":{"gitId":"-"},"content":"        if (!isIgnoredAuthorsListOverriding) {","isFullCredit":true},{"lineNumber":320,"author":{"gitId":"-"},"content":"            ignoredAuthorsList \u003d standaloneConfig.getIgnoreAuthorList();","isFullCredit":true},{"lineNumber":321,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":322,"author":{"gitId":"-"},"content":"        if (!isFileSizeLimitOverriding) {","isFullCredit":true},{"lineNumber":323,"author":{"gitId":"-"},"content":"            fileSizeLimit \u003d standaloneConfig.getFileSizeLimit();","isFullCredit":true},{"lineNumber":324,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":325,"author":{"gitId":"-"},"content":"        authorConfig.update(standaloneConfig, ignoreGlobList);","isFullCredit":true},{"lineNumber":326,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":327,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":328,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":329,"author":{"gitId":"-"},"content":"     * Returns the matching {@link Author} given a {@code name} and an {@code email}.","isFullCredit":true},{"lineNumber":330,"author":{"gitId":"-"},"content":"     * If no matching {@link Author} is found, {@link Author#UNKNOWN_AUTHOR} is returned.","isFullCredit":true},{"lineNumber":331,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":332,"author":{"gitId":"-"},"content":"    public Author getAuthor(String name, String email) {","isFullCredit":true},{"lineNumber":333,"author":{"gitId":"-"},"content":"        return authorConfig.getAuthor(name, email);","isFullCredit":true},{"lineNumber":334,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":335,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":336,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":337,"author":{"gitId":"-"},"content":"     * Updates branch with {@code currentBranch} if default branch is specified.","isFullCredit":true},{"lineNumber":338,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public void updateBranch(String currentBranch) {","isFullCredit":true},{"lineNumber":340,"author":{"gitId":"-"},"content":"        if (branch.equals(DEFAULT_BRANCH)) {","isFullCredit":true},{"lineNumber":341,"author":{"gitId":"-"},"content":"            setBranch(currentBranch);","isFullCredit":true},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":343,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":344,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":345,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":346,"author":{"gitId":"-"},"content":"     * Gets the current branch and updates branch with current branch if default branch is specified.","isFullCredit":true},{"lineNumber":347,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":348,"author":{"gitId":"-"},"content":"     * @throws GitBranchException if current branch cannot be retrieved.","isFullCredit":true},{"lineNumber":349,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":350,"author":{"gitId":"-"},"content":"    public void updateBranch() throws GitBranchException {","isFullCredit":true},{"lineNumber":351,"author":{"gitId":"-"},"content":"        if (branch.equals(DEFAULT_BRANCH)) {","isFullCredit":true},{"lineNumber":352,"author":{"gitId":"-"},"content":"            String currentBranch \u003d GitBranch.getCurrentBranch(getRepoRoot());","isFullCredit":true},{"lineNumber":353,"author":{"gitId":"-"},"content":"            setBranch(currentBranch);","isFullCredit":true},{"lineNumber":354,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":356,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Gets the path to the root folder of the repository.","isFullCredit":true},{"lineNumber":359,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":360,"author":{"gitId":"yong24s"},"content":"    public String getRepoRoot() {","isFullCredit":true},{"lineNumber":361,"author":{"gitId":"-"},"content":"        String path \u003d FileUtil.REPOS_ADDRESS + File.separator + getRepoFolderName() + File.separator;","isFullCredit":true},{"lineNumber":362,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":363,"author":{"gitId":"-"},"content":"        if (!getRepoName().isEmpty()) {","isFullCredit":true},{"lineNumber":364,"author":{"gitId":"-"},"content":"            if (!extraOutputFolderName.isEmpty()) {","isFullCredit":true},{"lineNumber":365,"author":{"gitId":"-"},"content":"                path +\u003d extraOutputFolderName + File.separator;","isFullCredit":true},{"lineNumber":366,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":367,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":368,"author":{"gitId":"-"},"content":"            path +\u003d getRepoName() + File.separator;","isFullCredit":true},{"lineNumber":369,"author":{"gitId":"yong24s"},"content":"        }","isFullCredit":true},{"lineNumber":370,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":371,"author":{"gitId":"yong24s"},"content":"        return path;","isFullCredit":true},{"lineNumber":372,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":373,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":374,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":375,"author":{"gitId":"-"},"content":"     * Gets the name of the folder containing the cloned repository; the parent directory of the repo\u0027s root folder.","isFullCredit":true},{"lineNumber":376,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":377,"author":{"gitId":"-"},"content":"    public String getRepoFolderName() {","isFullCredit":true},{"lineNumber":378,"author":{"gitId":"-"},"content":"        return repoFolderName;","isFullCredit":true},{"lineNumber":379,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":380,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":381,"author":{"gitId":"yong24s"},"content":"    @Override","isFullCredit":true},{"lineNumber":382,"author":{"gitId":"yong24s"},"content":"    public boolean equals(Object other) {","isFullCredit":true},{"lineNumber":383,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":384,"author":{"gitId":"yong24s"},"content":"        if (other \u003d\u003d this) {","isFullCredit":true},{"lineNumber":385,"author":{"gitId":"yong24s"},"content":"            return true;","isFullCredit":true},{"lineNumber":386,"author":{"gitId":"yong24s"},"content":"        }","isFullCredit":true},{"lineNumber":387,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":388,"author":{"gitId":"yong24s"},"content":"        if (!(other instanceof RepoConfiguration)) {","isFullCredit":true},{"lineNumber":389,"author":{"gitId":"yong24s"},"content":"            return false;","isFullCredit":true},{"lineNumber":390,"author":{"gitId":"yong24s"},"content":"        }","isFullCredit":true},{"lineNumber":391,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":392,"author":{"gitId":"-"},"content":"        RepoConfiguration otherRepoConfig \u003d (RepoConfiguration) other;","isFullCredit":true},{"lineNumber":393,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":394,"author":{"gitId":"-"},"content":"        return location.equals(otherRepoConfig.location)","isFullCredit":true},{"lineNumber":395,"author":{"gitId":"-"},"content":"                \u0026\u0026 branch.equals(otherRepoConfig.branch)","isFullCredit":true},{"lineNumber":396,"author":{"gitId":"-"},"content":"                \u0026\u0026 authorConfig.equals(otherRepoConfig.authorConfig)","isFullCredit":true},{"lineNumber":397,"author":{"gitId":"-"},"content":"                \u0026\u0026 ignoreGlobList.equals(otherRepoConfig.ignoreGlobList)","isFullCredit":true},{"lineNumber":398,"author":{"gitId":"-"},"content":"                \u0026\u0026 ignoredAuthorsList.equals(otherRepoConfig.ignoredAuthorsList)","isFullCredit":true},{"lineNumber":399,"author":{"gitId":"-"},"content":"                \u0026\u0026 fileSizeLimit \u003d\u003d otherRepoConfig.fileSizeLimit","isFullCredit":true},{"lineNumber":400,"author":{"gitId":"-"},"content":"                \u0026\u0026 isStandaloneConfigIgnored \u003d\u003d otherRepoConfig.isStandaloneConfigIgnored","isFullCredit":true},{"lineNumber":401,"author":{"gitId":"-"},"content":"                \u0026\u0026 fileTypeManager.equals(otherRepoConfig.fileTypeManager)","isFullCredit":true},{"lineNumber":402,"author":{"gitId":"jamessspanggg"},"content":"                \u0026\u0026 isLastModifiedDateIncluded \u003d\u003d otherRepoConfig.isLastModifiedDateIncluded","isFullCredit":true},{"lineNumber":403,"author":{"gitId":"-"},"content":"                \u0026\u0026 isFormatsOverriding \u003d\u003d otherRepoConfig.isFormatsOverriding","isFullCredit":true},{"lineNumber":404,"author":{"gitId":"-"},"content":"                \u0026\u0026 isShallowCloningPerformed \u003d\u003d otherRepoConfig.isShallowCloningPerformed","isFullCredit":true},{"lineNumber":405,"author":{"gitId":"-"},"content":"                \u0026\u0026 isIgnoreGlobListOverriding \u003d\u003d otherRepoConfig.isIgnoreGlobListOverriding","isFullCredit":true},{"lineNumber":406,"author":{"gitId":"-"},"content":"                \u0026\u0026 isIgnoreCommitListOverriding \u003d\u003d otherRepoConfig.isIgnoreCommitListOverriding","isFullCredit":true},{"lineNumber":407,"author":{"gitId":"-"},"content":"                \u0026\u0026 isIgnoredAuthorsListOverriding \u003d\u003d otherRepoConfig.isIgnoredAuthorsListOverriding","isFullCredit":true},{"lineNumber":408,"author":{"gitId":"-"},"content":"                \u0026\u0026 isFileSizeLimitOverriding \u003d\u003d otherRepoConfig.isFileSizeLimitOverriding","isFullCredit":true},{"lineNumber":409,"author":{"gitId":"-"},"content":"                \u0026\u0026 isFileSizeLimitIgnored \u003d\u003d otherRepoConfig.isFileSizeLimitIgnored","isFullCredit":true},{"lineNumber":410,"author":{"gitId":"-"},"content":"                \u0026\u0026 isIgnoredFileAnalysisSkipped \u003d\u003d otherRepoConfig.isIgnoredFileAnalysisSkipped;","isFullCredit":true},{"lineNumber":411,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":412,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":413,"author":{"gitId":"-"},"content":"    public Map\u003cAuthor, String\u003e getAuthorDisplayNameMap() {","isFullCredit":true},{"lineNumber":414,"author":{"gitId":"-"},"content":"        return authorConfig.getAuthorDisplayNameMap();","isFullCredit":true},{"lineNumber":415,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":416,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":417,"author":{"gitId":"-"},"content":"    public void setAuthorDisplayNameMap(Map\u003cAuthor, String\u003e authorDisplayNameMap) {","isFullCredit":true},{"lineNumber":418,"author":{"gitId":"-"},"content":"        authorConfig.setAuthorDisplayNameMap(authorDisplayNameMap);","isFullCredit":true},{"lineNumber":419,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":420,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":421,"author":{"gitId":"-"},"content":"    public String getBranch() {","isFullCredit":true},{"lineNumber":422,"author":{"gitId":"-"},"content":"        return branch;","isFullCredit":true},{"lineNumber":423,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":424,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":425,"author":{"gitId":"-"},"content":"    public void setBranch(String branch) {","isFullCredit":true},{"lineNumber":426,"author":{"gitId":"-"},"content":"        updateDisplayName(branch);","isFullCredit":true},{"lineNumber":427,"author":{"gitId":"-"},"content":"        updateOutputFolderName(branch);","isFullCredit":true},{"lineNumber":428,"author":{"gitId":"-"},"content":"        this.branch \u003d branch;","isFullCredit":true},{"lineNumber":429,"author":{"gitId":"-"},"content":"        authorConfig.setBranch(branch);","isFullCredit":true},{"lineNumber":430,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":431,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":432,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":433,"author":{"gitId":"-"},"content":"     * Updates the branch in the {@code displayName} to the current {@code branch}.","isFullCredit":true},{"lineNumber":434,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":435,"author":{"gitId":"-"},"content":"    public void updateDisplayName(String branch) {","isFullCredit":true},{"lineNumber":436,"author":{"gitId":"-"},"content":"        this.displayName \u003d displayName.substring(0, displayName.lastIndexOf(\u0027[\u0027) + 1) + branch + \"]\";","isFullCredit":true},{"lineNumber":437,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":438,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":439,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":440,"author":{"gitId":"-"},"content":"     * Updates the branch in the {@code outputFolderName} to the current {@code branch}.","isFullCredit":true},{"lineNumber":441,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":442,"author":{"gitId":"-"},"content":"    public void updateOutputFolderName(String branch) {","isFullCredit":true},{"lineNumber":443,"author":{"gitId":"-"},"content":"        this.outputFolderName \u003d outputFolderName.substring(0, outputFolderName.lastIndexOf(\u0027_\u0027) + 1) + branch;","isFullCredit":true},{"lineNumber":444,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":445,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":446,"author":{"gitId":"yamidark"},"content":"    public List\u003cString\u003e getIgnoreGlobList() {","isFullCredit":true},{"lineNumber":447,"author":{"gitId":"yamidark"},"content":"        return ignoreGlobList;","isFullCredit":true},{"lineNumber":448,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":449,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":450,"author":{"gitId":"yamidark"},"content":"    public void setIgnoreGlobList(List\u003cString\u003e ignoreGlobList) {","isFullCredit":true},{"lineNumber":451,"author":{"gitId":"yamidark"},"content":"        this.ignoreGlobList \u003d ignoreGlobList;","isFullCredit":true},{"lineNumber":452,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":453,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":454,"author":{"gitId":"-"},"content":"    public List\u003cCommitHash\u003e getIgnoreCommitList() {","isFullCredit":true},{"lineNumber":455,"author":{"gitId":"yamidark"},"content":"        return ignoreCommitList;","isFullCredit":true},{"lineNumber":456,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":457,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":458,"author":{"gitId":"-"},"content":"    public long getFileSizeLimit() {","isFullCredit":true},{"lineNumber":459,"author":{"gitId":"-"},"content":"        return fileSizeLimit;","isFullCredit":true},{"lineNumber":460,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":461,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":462,"author":{"gitId":"-"},"content":"    public void setIgnoreCommitList(List\u003cCommitHash\u003e ignoreCommitList) {","isFullCredit":true},{"lineNumber":463,"author":{"gitId":"yamidark"},"content":"        this.ignoreCommitList \u003d ignoreCommitList;","isFullCredit":true},{"lineNumber":464,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":465,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":466,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getIgnoredAuthorsList() {","isFullCredit":true},{"lineNumber":467,"author":{"gitId":"-"},"content":"        return this.ignoredAuthorsList;","isFullCredit":true},{"lineNumber":468,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":469,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":470,"author":{"gitId":"-"},"content":"    public void setIgnoredAuthorsList(List\u003cString\u003e ignoredAuthorsList) {","isFullCredit":true},{"lineNumber":471,"author":{"gitId":"-"},"content":"        this.ignoredAuthorsList \u003d ignoredAuthorsList;","isFullCredit":true},{"lineNumber":472,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":473,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":474,"author":{"gitId":"-"},"content":"    public boolean isIgnoredAuthorsListOverriding() {","isFullCredit":true},{"lineNumber":475,"author":{"gitId":"-"},"content":"        return this.isIgnoredAuthorsListOverriding;","isFullCredit":true},{"lineNumber":476,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":477,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":478,"author":{"gitId":"jamessspanggg"},"content":"    public void setIsLastModifiedDateIncluded(boolean lastModifiedDateIncluded) {","isFullCredit":true},{"lineNumber":479,"author":{"gitId":"jamessspanggg"},"content":"        this.isLastModifiedDateIncluded \u003d lastModifiedDateIncluded;","isFullCredit":true},{"lineNumber":480,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":481,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":482,"author":{"gitId":"-"},"content":"    public void setIsShallowCloningPerformed(boolean isShallowCloningPerformed) {","isFullCredit":true},{"lineNumber":483,"author":{"gitId":"-"},"content":"        this.isShallowCloningPerformed \u003d isShallowCloningPerformed;","isFullCredit":true},{"lineNumber":484,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":485,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":486,"author":{"gitId":"-"},"content":"    public void setIsFindingPreviousAuthorsPerformed(boolean isFindingPreviousAuthorsPerformed) {","isFullCredit":true},{"lineNumber":487,"author":{"gitId":"-"},"content":"        this.isFindingPreviousAuthorsPerformed \u003d isFindingPreviousAuthorsPerformed;","isFullCredit":true},{"lineNumber":488,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":489,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":490,"author":{"gitId":"jamessspanggg"},"content":"    public boolean isLastModifiedDateIncluded() {","isFullCredit":true},{"lineNumber":491,"author":{"gitId":"jamessspanggg"},"content":"        return this.isLastModifiedDateIncluded;","isFullCredit":true},{"lineNumber":492,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":493,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":494,"author":{"gitId":"-"},"content":"    public boolean isShallowCloningPerformed() {","isFullCredit":true},{"lineNumber":495,"author":{"gitId":"-"},"content":"        return this.isShallowCloningPerformed;","isFullCredit":true},{"lineNumber":496,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":497,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":498,"author":{"gitId":"-"},"content":"    public void setIsIgnoredAuthorsListOverriding(boolean isIgnoredAuthorsListOverriding) {","isFullCredit":true},{"lineNumber":499,"author":{"gitId":"-"},"content":"        this.isIgnoredAuthorsListOverriding \u003d isIgnoredAuthorsListOverriding;","isFullCredit":true},{"lineNumber":500,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":501,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":502,"author":{"gitId":"-"},"content":"    public void removeIgnoredAuthors() {","isFullCredit":true},{"lineNumber":503,"author":{"gitId":"-"},"content":"        authorConfig.removeIgnoredAuthors(ignoredAuthorsList);","isFullCredit":true},{"lineNumber":504,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":505,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":506,"author":{"gitId":"-"},"content":"    public List\u003cAuthor\u003e getAuthorList() {","isFullCredit":true},{"lineNumber":507,"author":{"gitId":"-"},"content":"        return authorConfig.getAuthorList();","isFullCredit":true},{"lineNumber":508,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":509,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":510,"author":{"gitId":"yong24s"},"content":"    public void addAuthor(Author author) {","isFullCredit":true},{"lineNumber":511,"author":{"gitId":"-"},"content":"        authorConfig.addAuthor(author, this.getIgnoreGlobList());","isFullCredit":true},{"lineNumber":512,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":513,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":514,"author":{"gitId":"-"},"content":"    public void addAuthors(List\u003cAuthor\u003e authorList) {","isFullCredit":true},{"lineNumber":515,"author":{"gitId":"-"},"content":"        authorConfig.addAuthors(authorList, this.getIgnoreGlobList());","isFullCredit":true},{"lineNumber":516,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":517,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":518,"author":{"gitId":"-"},"content":"    public void setAuthorConfiguration(AuthorConfiguration authorConfig) {","isFullCredit":true},{"lineNumber":519,"author":{"gitId":"-"},"content":"        this.authorConfig \u003d authorConfig;","isFullCredit":true},{"lineNumber":520,"author":{"gitId":"-"},"content":"        for (Author author : authorConfig.getAuthorList()) {","isFullCredit":true},{"lineNumber":521,"author":{"gitId":"-"},"content":"            AuthorConfiguration.propagateIgnoreGlobList(author, ignoreGlobList);","isFullCredit":true},{"lineNumber":522,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":523,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":524,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":525,"author":{"gitId":"yong24s"},"content":"    public boolean containsAuthor(Author author) {","isFullCredit":true},{"lineNumber":526,"author":{"gitId":"-"},"content":"        return authorConfig.containsAuthor(author);","isFullCredit":true},{"lineNumber":527,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":528,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":529,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":530,"author":{"gitId":"-"},"content":"     * Clears authors information and sets the {@code authorList} to {@link RepoConfiguration}.","isFullCredit":true},{"lineNumber":531,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":532,"author":{"gitId":"-"},"content":"    public void setAuthorList(List\u003cAuthor\u003e authorList) {","isFullCredit":true},{"lineNumber":533,"author":{"gitId":"-"},"content":"        authorConfig.clear();","isFullCredit":true},{"lineNumber":534,"author":{"gitId":"-"},"content":"        authorConfig.setAuthorList(authorList);","isFullCredit":true},{"lineNumber":535,"author":{"gitId":"-"},"content":"        authorConfig.buildFromAuthorList();","isFullCredit":true},{"lineNumber":536,"author":{"gitId":"-"},"content":"        authorList.forEach(author -\u003e AuthorConfiguration.propagateIgnoreGlobList(author, this.getIgnoreGlobList()));","isFullCredit":true},{"lineNumber":537,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":538,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":539,"author":{"gitId":"-"},"content":"    public void setHasAuthorConfigFile(boolean hasAuthorConfigFile) {","isFullCredit":true},{"lineNumber":540,"author":{"gitId":"-"},"content":"        authorConfig.setHasAuthorConfigFile(hasAuthorConfigFile);","isFullCredit":true},{"lineNumber":541,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":542,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":543,"author":{"gitId":"-"},"content":"    public Map\u003cString, Author\u003e getAuthorNamesToAuthorMap() {","isFullCredit":true},{"lineNumber":544,"author":{"gitId":"-"},"content":"        return authorConfig.getAuthorNamesToAuthorMap();","isFullCredit":true},{"lineNumber":545,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":546,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":547,"author":{"gitId":"-"},"content":"    public void setAuthorNamesToAuthorMap(Map\u003cString, Author\u003e authorNamesToAuthorMap) {","isFullCredit":true},{"lineNumber":548,"author":{"gitId":"-"},"content":"        authorConfig.setAuthorNamesToAuthorMap(authorNamesToAuthorMap);","isFullCredit":true},{"lineNumber":549,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":550,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":551,"author":{"gitId":"-"},"content":"    public Map\u003cString, Author\u003e getAuthorEmailsToAuthorMap() {","isFullCredit":true},{"lineNumber":552,"author":{"gitId":"-"},"content":"        return authorConfig.getAuthorEmailsToAuthorMap();","isFullCredit":true},{"lineNumber":553,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":554,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":555,"author":{"gitId":"-"},"content":"    public void setAuthorEmailsToAuthorMap(Map\u003cString, Author\u003e authorEmailsToAuthorMap) {","isFullCredit":true},{"lineNumber":556,"author":{"gitId":"-"},"content":"        authorConfig.setAuthorEmailsToAuthorMap(authorEmailsToAuthorMap);","isFullCredit":true},{"lineNumber":557,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":558,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":559,"author":{"gitId":"-"},"content":"    public void clearAuthorDetailsToAuthorMap() {","isFullCredit":true},{"lineNumber":560,"author":{"gitId":"-"},"content":"        authorConfig.clearAuthorDetailsToAuthorMap();","isFullCredit":true},{"lineNumber":561,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":562,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":563,"author":{"gitId":"-"},"content":"    public void setFormats(List\u003cFileType\u003e formats) {","isFullCredit":true},{"lineNumber":564,"author":{"gitId":"-"},"content":"        fileTypeManager.setFormats(formats);","isFullCredit":true},{"lineNumber":565,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":566,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":567,"author":{"gitId":"-"},"content":"    private void setGroups(List\u003cFileType\u003e groups) {","isFullCredit":true},{"lineNumber":568,"author":{"gitId":"-"},"content":"        fileTypeManager.setGroups(groups);","isFullCredit":true},{"lineNumber":569,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":570,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":571,"author":{"gitId":"-"},"content":"    public void addGroups(List\u003cFileType\u003e groups) {","isFullCredit":true},{"lineNumber":572,"author":{"gitId":"-"},"content":"        fileTypeManager.addGroups(groups);","isFullCredit":true},{"lineNumber":573,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":574,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":575,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":576,"author":{"gitId":"-"},"content":"     * Returns all format or group types (depending on whether the user has specified a custom grouping).","isFullCredit":true},{"lineNumber":577,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":578,"author":{"gitId":"-"},"content":"    public List\u003cFileType\u003e getAllFileTypes() {","isFullCredit":true},{"lineNumber":579,"author":{"gitId":"-"},"content":"        return fileTypeManager.getAllFileTypes();","isFullCredit":true},{"lineNumber":580,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":581,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":582,"author":{"gitId":"-"},"content":"    public FileType getFileType(String fileName) {","isFullCredit":true},{"lineNumber":583,"author":{"gitId":"-"},"content":"        return fileTypeManager.getFileType(fileName);","isFullCredit":true},{"lineNumber":584,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":585,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":586,"author":{"gitId":"-"},"content":"    public FileTypeManager getFileTypeManager() {","isFullCredit":true},{"lineNumber":587,"author":{"gitId":"-"},"content":"        return fileTypeManager;","isFullCredit":true},{"lineNumber":588,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":589,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":590,"author":{"gitId":"-"},"content":"    public LocalDateTime getSinceDate() {","isFullCredit":true},{"lineNumber":591,"author":{"gitId":"yong24s"},"content":"        return sinceDate;","isFullCredit":true},{"lineNumber":592,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":593,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":594,"author":{"gitId":"-"},"content":"    public void setSinceDate(LocalDateTime sinceDate) {","isFullCredit":true},{"lineNumber":595,"author":{"gitId":"yong24s"},"content":"        this.sinceDate \u003d sinceDate;","isFullCredit":true},{"lineNumber":596,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":597,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":598,"author":{"gitId":"-"},"content":"    public LocalDateTime getUntilDate() {","isFullCredit":true},{"lineNumber":599,"author":{"gitId":"yong24s"},"content":"        return untilDate;","isFullCredit":true},{"lineNumber":600,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":601,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":602,"author":{"gitId":"-"},"content":"    public void setUntilDate(LocalDateTime untilDate) {","isFullCredit":true},{"lineNumber":603,"author":{"gitId":"yong24s"},"content":"        this.untilDate \u003d untilDate;","isFullCredit":true},{"lineNumber":604,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":605,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":606,"author":{"gitId":"-"},"content":"    public ZoneId getZoneId() {","isFullCredit":true},{"lineNumber":607,"author":{"gitId":"-"},"content":"        return zoneId;","isFullCredit":true},{"lineNumber":608,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":609,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":610,"author":{"gitId":"-"},"content":"    public void setZoneId(ZoneId zoneId) {","isFullCredit":true},{"lineNumber":611,"author":{"gitId":"-"},"content":"        this.zoneId \u003d zoneId;","isFullCredit":true},{"lineNumber":612,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":613,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":614,"author":{"gitId":"yong24s"},"content":"    public void setAuthorDisplayName(Author author, String displayName) {","isFullCredit":true},{"lineNumber":615,"author":{"gitId":"-"},"content":"        authorConfig.setAuthorDisplayName(author, displayName);","isFullCredit":true},{"lineNumber":616,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":617,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":618,"author":{"gitId":"-"},"content":"    public void addAuthorNamesToAuthorMapEntry(Author author, String name) {","isFullCredit":true},{"lineNumber":619,"author":{"gitId":"-"},"content":"        authorConfig.addAuthorNamesToAuthorMapEntry(author, name);","isFullCredit":true},{"lineNumber":620,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":621,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":622,"author":{"gitId":"-"},"content":"    public void addAuthorNamesToAuthorMapEntry(Author author, List\u003cString\u003e names) {","isFullCredit":true},{"lineNumber":623,"author":{"gitId":"-"},"content":"        authorConfig.addAuthorNamesToAuthorMapEntry(author, names);","isFullCredit":true},{"lineNumber":624,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":625,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":626,"author":{"gitId":"-"},"content":"    public void addAuthorEmailsToAuthorMapEntry(Author author, List\u003cString\u003e emails) {","isFullCredit":true},{"lineNumber":627,"author":{"gitId":"-"},"content":"        authorConfig.addAuthorEmailsToAuthorMapEntry(author, emails);","isFullCredit":true},{"lineNumber":628,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":629,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":630,"author":{"gitId":"yong24s"},"content":"    public String getDisplayName() {","isFullCredit":true},{"lineNumber":631,"author":{"gitId":"yong24s"},"content":"        return displayName;","isFullCredit":true},{"lineNumber":632,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":633,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":634,"author":{"gitId":"yong24s"},"content":"    public String getRepoName() {","isFullCredit":true},{"lineNumber":635,"author":{"gitId":"-"},"content":"        return location.getRepoName();","isFullCredit":true},{"lineNumber":636,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":637,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":638,"author":{"gitId":"-"},"content":"    public String getOutputFolderName() {","isFullCredit":true},{"lineNumber":639,"author":{"gitId":"-"},"content":"        return outputFolderName;","isFullCredit":true},{"lineNumber":640,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":641,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":642,"author":{"gitId":"-"},"content":"    public void setStandaloneConfigIgnored(boolean isStandaloneConfigIgnored) {","isFullCredit":true},{"lineNumber":643,"author":{"gitId":"-"},"content":"        this.isStandaloneConfigIgnored \u003d isStandaloneConfigIgnored;","isFullCredit":true},{"lineNumber":644,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":645,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":646,"author":{"gitId":"-"},"content":"    public void setFileSizeLimitIgnored(boolean isFileSizeLimitIgnored) {","isFullCredit":true},{"lineNumber":647,"author":{"gitId":"-"},"content":"        this.isFileSizeLimitIgnored \u003d isFileSizeLimitIgnored;","isFullCredit":true},{"lineNumber":648,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":649,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":650,"author":{"gitId":"-"},"content":"    public RepoLocation getLocation() {","isFullCredit":true},{"lineNumber":651,"author":{"gitId":"-"},"content":"        return location;","isFullCredit":true},{"lineNumber":652,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":653,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":654,"author":{"gitId":"-"},"content":"    public String getOrganization() {","isFullCredit":true},{"lineNumber":655,"author":{"gitId":"-"},"content":"        return location.getOrganization();","isFullCredit":true},{"lineNumber":656,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":657,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":658,"author":{"gitId":"-"},"content":"    public boolean isStandaloneConfigIgnored() {","isFullCredit":true},{"lineNumber":659,"author":{"gitId":"-"},"content":"        return isStandaloneConfigIgnored;","isFullCredit":true},{"lineNumber":660,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":661,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":662,"author":{"gitId":"-"},"content":"    public boolean isFileSizeLimitIgnored() {","isFullCredit":true},{"lineNumber":663,"author":{"gitId":"-"},"content":"        return isFileSizeLimitIgnored;","isFullCredit":true},{"lineNumber":664,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":665,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":666,"author":{"gitId":"-"},"content":"    public boolean isIgnoredFileAnalysisSkipped() {","isFullCredit":true},{"lineNumber":667,"author":{"gitId":"-"},"content":"        return isIgnoredFileAnalysisSkipped;","isFullCredit":true},{"lineNumber":668,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":669,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":670,"author":{"gitId":"-"},"content":"    public boolean isFormatsOverriding() {","isFullCredit":true},{"lineNumber":671,"author":{"gitId":"-"},"content":"        return isFormatsOverriding;","isFullCredit":true},{"lineNumber":672,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":673,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":674,"author":{"gitId":"-"},"content":"    public boolean isIgnoreGlobListOverriding() {","isFullCredit":true},{"lineNumber":675,"author":{"gitId":"-"},"content":"        return isIgnoreGlobListOverriding;","isFullCredit":true},{"lineNumber":676,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":677,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":678,"author":{"gitId":"-"},"content":"    public boolean isIgnoreCommitListOverriding() {","isFullCredit":true},{"lineNumber":679,"author":{"gitId":"-"},"content":"        return isIgnoreCommitListOverriding;","isFullCredit":true},{"lineNumber":680,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":681,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":682,"author":{"gitId":"-"},"content":"    public boolean isFileSizeLimitOverriding() {","isFullCredit":true},{"lineNumber":683,"author":{"gitId":"-"},"content":"        return isFileSizeLimitOverriding;","isFullCredit":true},{"lineNumber":684,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":685,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":686,"author":{"gitId":"-"},"content":"    public boolean isFindingPreviousAuthorsPerformed() {","isFullCredit":true},{"lineNumber":687,"author":{"gitId":"-"},"content":"        return isFindingPreviousAuthorsPerformed;","isFullCredit":true},{"lineNumber":688,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":689,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":690,"author":{"gitId":"-"},"content":"    public AuthorConfiguration getAuthorConfig() {","isFullCredit":true},{"lineNumber":691,"author":{"gitId":"-"},"content":"        return authorConfig;","isFullCredit":true},{"lineNumber":692,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":693,"author":{"gitId":"-"},"content":"}","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":17,"yamidark":16,"yong24s":76,"eugenepeh":8,"-":576}},{"path":"src/main/java/reposense/model/StandaloneAuthor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.model;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"yong24s"},"content":"import java.util.Collections;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"yong24s"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents an author in {@link StandaloneConfig}.","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class StandaloneAuthor {","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private String githubId;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"eugenepeh"},"content":"    private List\u003cString\u003e emails;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String displayName;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"yong24s"},"content":"    private List\u003cString\u003e authorNames;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"yong24s"},"content":"    private List\u003cString\u003e ignoreGlobList;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public String getGithubId() {","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return githubId;","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"eugenepeh"},"content":"    public List\u003cString\u003e getEmails() {","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return (emails \u003d\u003d null) ? Collections.emptyList() : emails;","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public String getDisplayName() {","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return (displayName \u003d\u003d null) ? \"\" : displayName;","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"yong24s"},"content":"    public List\u003cString\u003e getAuthorNames() {","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return (authorNames \u003d\u003d null) ? Collections.emptyList() : authorNames;","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"yong24s"},"content":"    public List\u003cString\u003e getIgnoreGlobList() {","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return (ignoreGlobList \u003d\u003d null) ? Collections.emptyList() : ignoreGlobList;","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"yong24s"},"content":"    @Override","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"yong24s"},"content":"    public boolean equals(Object other) {","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"yong24s"},"content":"        if (this \u003d\u003d other) {","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"yong24s"},"content":"            return true;","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"yong24s"},"content":"        }","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"yong24s"},"content":"        if (!(other instanceof StandaloneAuthor)) {","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"yong24s"},"content":"            return false;","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"yong24s"},"content":"        }","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"yong24s"},"content":"        StandaloneAuthor otherStandaloneAuthor \u003d (StandaloneAuthor) other;","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"yong24s"},"content":"        return githubId.equals(otherStandaloneAuthor.githubId)","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"eugenepeh"},"content":"                \u0026\u0026 getEmails().equals(otherStandaloneAuthor.getEmails())","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"yong24s"},"content":"                \u0026\u0026 getDisplayName().equals(otherStandaloneAuthor.getDisplayName())","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"yong24s"},"content":"                \u0026\u0026 getAuthorNames().equals(otherStandaloneAuthor.getAuthorNames())","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"yong24s"},"content":"                \u0026\u0026 getIgnoreGlobList().equals(otherStandaloneAuthor.getIgnoreGlobList());","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yong24s":24,"yamidark":2,"eugenepeh":5,"-":22}},{"path":"src/main/java/reposense/model/StandaloneConfig.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.model;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"yong24s"},"content":"import java.util.Collections;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"yong24s"},"content":"import java.util.Objects;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the structure of a config.json in the _reposense folder.","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class StandaloneConfig {","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private List\u003cStandaloneAuthor\u003e authors;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"yong24s"},"content":"    private List\u003cString\u003e ignoreGlobList;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"yong24s"},"content":"    private List\u003cString\u003e formats;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e ignoreCommitsList;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e ignoreAuthorsList;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Long fileSizeLimit;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public List\u003cStandaloneAuthor\u003e getAuthors() {","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"yong24s"},"content":"        if (authors \u003d\u003d null) {","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"yong24s"},"content":"            return Collections.emptyList();","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"yong24s"},"content":"        }","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"yong24s"},"content":"        authors.removeIf(Objects::isNull);","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return authors;","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"yong24s"},"content":"    public List\u003cString\u003e getIgnoreGlobList() {","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"yong24s"},"content":"        if (ignoreGlobList \u003d\u003d null) {","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"yong24s"},"content":"            return Collections.emptyList();","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"yong24s"},"content":"        }","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"yong24s"},"content":"        ignoreGlobList.removeIf(Objects::isNull);","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"yong24s"},"content":"        return ignoreGlobList;","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"yong24s"},"content":"    public List\u003cString\u003e getFormats() {","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"yong24s"},"content":"        if (formats \u003d\u003d null) {","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return Collections.emptyList();","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"yong24s"},"content":"        }","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"yong24s"},"content":"        formats.removeIf(Objects::isNull);","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"yong24s"},"content":"        return formats;","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"yamidark"},"content":"    public List\u003cString\u003e getIgnoreCommitList() {","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (ignoreCommitsList \u003d\u003d null) {","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"yamidark"},"content":"            return Collections.emptyList();","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"yamidark"},"content":"        }","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ignoreCommitsList.removeIf(Objects::isNull);","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return ignoreCommitsList;","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getIgnoreAuthorList() {","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (ignoreAuthorsList \u003d\u003d null) {","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return Collections.emptyList();","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"        ignoreAuthorsList.removeIf(Objects::isNull);","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return ignoreAuthorsList;","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Long getFileSizeLimit() {","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (fileSizeLimit \u003d\u003d null || fileSizeLimit \u003c\u003d 0) {","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return RepoConfiguration.DEFAULT_FILE_SIZE_LIMIT;","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return fileSizeLimit;","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"yong24s"},"content":"    @Override","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"yong24s"},"content":"    public boolean equals(Object other) {","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"yong24s"},"content":"        if (this \u003d\u003d other) {","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"yong24s"},"content":"            return true;","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"yong24s"},"content":"        }","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"yong24s"},"content":"        if (!(other instanceof StandaloneConfig)) {","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"yong24s"},"content":"            return false;","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"yong24s"},"content":"        }","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"yong24s"},"content":"        StandaloneConfig otherStandaloneConfig \u003d (StandaloneConfig) other;","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"yong24s"},"content":"        return authors.equals(otherStandaloneConfig.authors)","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"yong24s"},"content":"                \u0026\u0026 getIgnoreGlobList().equals(otherStandaloneConfig.getIgnoreGlobList())","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"yong24s"},"content":"                \u0026\u0026 getFormats().equals(otherStandaloneConfig.getFormats())","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"                \u0026\u0026 getIgnoreCommitList().equals(otherStandaloneConfig.getIgnoreCommitList())","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"                \u0026\u0026 getIgnoreAuthorList().equals(otherStandaloneConfig.getIgnoreAuthorList())","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"                \u0026\u0026 getFileSizeLimit().equals(otherStandaloneConfig.getFileSizeLimit());","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yong24s":42,"yamidark":6,"-":39}},{"path":"src/main/java/reposense/parser/AlphanumericArgumentType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yong24s"},"content":"package reposense.parser;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"yong24s"},"content":"import java.util.regex.Pattern;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"yong24s"},"content":"import net.sourceforge.argparse4j.inf.Argument;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yong24s"},"content":"import net.sourceforge.argparse4j.inf.ArgumentParser;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yong24s"},"content":"import net.sourceforge.argparse4j.inf.ArgumentParserException;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"yong24s"},"content":"import net.sourceforge.argparse4j.inf.ArgumentType;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yong24s"},"content":"/**","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents an alphanumeric type {@code String} argument.","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"yong24s"},"content":" */","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"yong24s"},"content":"public class AlphanumericArgumentType implements ArgumentType\u003cString\u003e {","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"yong24s"},"content":"    private static final String PARSE_EXCEPTION_MESSAGE_NOT_IN_ALPLANUMERIC \u003d","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"yong24s"},"content":"            \"Invalid format. It must be in alphanumeric.\";","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"yong24s"},"content":"    private static final Pattern ALPHANUMERIC_PATTERN \u003d Pattern.compile(\"[A-Za-z0-9]+\");","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"yong24s"},"content":"    @Override","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"yong24s"},"content":"    public String convert(ArgumentParser parser, Argument arg, String value) throws ArgumentParserException {","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"yong24s"},"content":"        if (!ALPHANUMERIC_PATTERN.matcher(value).matches()) {","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"yong24s"},"content":"            throw new ArgumentParserException(","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"yong24s"},"content":"                    String.format(PARSE_EXCEPTION_MESSAGE_NOT_IN_ALPLANUMERIC, value), parser);","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"yong24s"},"content":"        }","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"yong24s"},"content":"        return value;","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"yong24s"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yong24s":26,"-":1}},{"path":"src/main/java/reposense/parser/ArgsParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yong24s"},"content":"package reposense.parser;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.File;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.IOException;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"yong24s"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yong24s"},"content":"import java.nio.file.Paths;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.ZoneId;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yong24s"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"yong24s"},"content":"import java.util.Optional;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.google.gson.JsonSyntaxException;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"yong24s"},"content":"import net.sourceforge.argparse4j.ArgumentParsers;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"eugenepeh"},"content":"import net.sourceforge.argparse4j.helper.HelpScreenException;","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.impl.Arguments;","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"yong24s"},"content":"import net.sourceforge.argparse4j.impl.action.HelpArgumentAction;","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.impl.action.VersionArgumentAction;","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.inf.ArgumentGroup;","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"yong24s"},"content":"import net.sourceforge.argparse4j.inf.ArgumentParser;","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"yong24s"},"content":"import net.sourceforge.argparse4j.inf.ArgumentParserException;","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.inf.FeatureControl;","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.inf.MutuallyExclusiveGroup;","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"yong24s"},"content":"import net.sourceforge.argparse4j.inf.Namespace;","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"import reposense.RepoSense;","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"yamidark"},"content":"import reposense.model.CliArguments;","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"import reposense.model.FileType;","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"import reposense.model.ReportConfiguration;","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"import reposense.util.TimeUtil;","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"yong24s"},"content":"/**","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Verifies and parses a string-formatted date to a {@link CliArguments} object.","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"yong24s"},"content":" */","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"yong24s"},"content":"public class ArgsParser {","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"yong24s"},"content":"    public static final String DEFAULT_REPORT_NAME \u003d \"reposense-report\";","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final int DEFAULT_NUM_CLONING_THREADS \u003d 4;","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final int DEFAULT_NUM_ANALYSIS_THREADS \u003d Runtime.getRuntime().availableProcessors();","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final boolean DEFAULT_IS_TEST_MODE \u003d false;","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final boolean DEFAULT_SHOULD_FRESH_CLONE \u003d false;","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String[] HELP_FLAGS \u003d new String[] {\"--help\", \"-h\"};","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String[] CONFIG_FLAGS \u003d new String[] {\"--config\", \"-c\"};","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String[] REPO_FLAGS \u003d new String[] {\"--repo\", \"--repos\", \"-r\"};","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String[] VIEW_FLAGS \u003d new String[] {\"--view\", \"-v\"};","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String[] OUTPUT_FLAGS \u003d new String[] {\"--output\", \"-o\"};","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String[] ASSETS_FLAGS \u003d new String[] {\"--assets\", \"-a\"};","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String[] SINCE_FLAGS \u003d new String[] {\"--since\", \"-s\"};","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String[] UNTIL_FLAGS \u003d new String[] {\"--until\", \"-u\"};","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String[] PERIOD_FLAGS \u003d new String[] {\"--period\", \"-p\"};","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String[] SHALLOW_CLONING_FLAGS \u003d new String[] {\"--shallow-cloning\", \"-S\"};","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String[] FORMAT_FLAGS \u003d new String[] {\"--formats\", \"-f\"};","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String[] IGNORE_CONFIG_FLAGS \u003d new String[] {\"--ignore-standalone-config\", \"-i\"};","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String[] IGNORE_SIZELIMIT_FLAGS \u003d new String[] {\"--ignore-filesize-limit\", \"-I\"};","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String[] TIMEZONE_FLAGS \u003d new String[] {\"--timezone\", \"-t\"};","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String[] VERSION_FLAGS \u003d new String[] {\"--version\", \"-V\"};","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"jamessspanggg"},"content":"    public static final String[] LAST_MODIFIED_DATE_FLAGS \u003d new String[] {\"--last-modified-date\", \"-l\"};","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String[] FIND_PREVIOUS_AUTHORS_FLAGS \u003d new String[] {\"--find-previous-authors\", \"-F\"};","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String[] CLONING_THREADS_FLAG \u003d new String[] {\"--cloning-threads\"};","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String[] ANALYSIS_THREADS_FLAG \u003d new String[] {\"--analysis-threads\"};","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String[] TEST_MODE_FLAG \u003d new String[] {\"--test-mode\"};","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String[] FRESH_CLONING_FLAG \u003d new String[] {\"--fresh-cloning\"};","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(ArgsParser.class);","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"yong24s"},"content":"    private static final String PROGRAM_USAGE \u003d \"java -jar RepoSense.jar\";","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"yong24s"},"content":"    private static final String PROGRAM_DESCRIPTION \u003d","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"yong24s"},"content":"            \"RepoSense is a contribution analysis tool for Git repositories.\";","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"eugenepeh"},"content":"    private static final String MESSAGE_HEADER_MUTEX \u003d \"mutual exclusive arguments\";","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_HEADER_TESTING \u003d \"test mode arguments\";","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_HAVE_SINCE_DATE_UNTIL_DATE_AND_PERIOD \u003d","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"            \"\\\"Since Date\\\", \\\"Until Date\\\", and \\\"Period\\\" cannot be applied together.\";","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"eugenepeh"},"content":"    private static final String MESSAGE_USING_DEFAULT_CONFIG_PATH \u003d","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"            \"Config path not provided, using the config folder as default.\";","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_CONFIG_PATH \u003d \"%s is malformed.\";","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_CONFIG_JSON \u003d \"%s Ignoring the report config provided.\";","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_SINCE_D1_WITH_PERIOD \u003d \"You may be using --since d1 with the --period flag. \"","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"            + \"This may result in an incorrect date range being analysed.\";","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private static final Path EMPTY_PATH \u003d Paths.get(\"\");","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private static final Path DEFAULT_CONFIG_PATH \u003d Paths.get(System.getProperty(\"user.dir\")","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"            + File.separator + \"config\" + File.separator);","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private static final Path DEFAULT_ASSETS_PATH \u003d Paths.get(System.getProperty(\"user.dir\")","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"            + File.separator + \"assets\" + File.separator);","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"yong24s"},"content":"    private static ArgumentParser getArgumentParser() {","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"yong24s"},"content":"        ArgumentParser parser \u003d ArgumentParsers","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"yong24s"},"content":"                .newFor(PROGRAM_USAGE)","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"yong24s"},"content":"                .addHelp(false)","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"yong24s"},"content":"                .build()","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"yong24s"},"content":"                .description(PROGRAM_DESCRIPTION);","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"        MutuallyExclusiveGroup mutexParser \u003d parser","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"eugenepeh"},"content":"                .addMutuallyExclusiveGroup(MESSAGE_HEADER_MUTEX)","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .required(false);","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"        MutuallyExclusiveGroup mutexParser2 \u003d parser","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .addMutuallyExclusiveGroup(MESSAGE_HEADER_MUTEX)","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .required(false);","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ArgumentGroup argumentGroup \u003d parser","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .addArgumentGroup(MESSAGE_HEADER_TESTING);","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"eugenepeh"},"content":"        // Boolean flags","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"        parser.addArgument(HELP_FLAGS)","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"yong24s"},"content":"                .help(\"Show help message.\")","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"yong24s"},"content":"                .action(new HelpArgumentAction());","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"-"},"content":"        parser.version(\"RepoSense \" + RepoSense.getVersion());","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"-"},"content":"        parser.addArgument(VERSION_FLAGS)","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .help(\"Show the version of RepoSense.\")","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .action(new VersionArgumentAction());","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"        parser.addArgument(IGNORE_CONFIG_FLAGS)","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .dest(IGNORE_CONFIG_FLAGS[0])","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"eugenepeh"},"content":"                .action(Arguments.storeTrue())","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"eugenepeh"},"content":"                .help(\"A flag to ignore the standalone config file in the repo.\");","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"-"},"content":"        parser.addArgument(IGNORE_SIZELIMIT_FLAGS)","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .dest(IGNORE_SIZELIMIT_FLAGS[0])","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .action(Arguments.storeTrue())","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .help(\"A flag to ignore the filesize limit for analyzed files.\");","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"-"},"content":"        parser.addArgument(VIEW_FLAGS)","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .dest(VIEW_FLAGS[0])","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .nargs(\"?\")","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .metavar(\"PATH\")","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"yong24s"},"content":"                .type(new ReportFolderArgumentType())","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .setConst(EMPTY_PATH)","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .help(\"Starts a server to display the report in the provided directory. \"","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"-"},"content":"                        + \"If used as a flag (with no argument), \"","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"-"},"content":"                        + \"generates a report and automatically displays the report.\");","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"-"},"content":"        parser.addArgument(OUTPUT_FLAGS)","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .dest(OUTPUT_FLAGS[0])","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"yong24s"},"content":"                .metavar(\"PATH\")","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"yong24s"},"content":"                .type(new OutputFolderArgumentType())","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"yong24s"},"content":"                .setDefault(Paths.get(ArgsParser.DEFAULT_REPORT_NAME))","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"yong24s"},"content":"                .help(\"The directory to output the report folder, reposense-report. \"","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"yong24s"},"content":"                        + \"If not provided, the report folder will be created in the current working directory.\");","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"-"},"content":"        parser.addArgument(ASSETS_FLAGS)","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .dest(ASSETS_FLAGS[0])","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .metavar(\"PATH\")","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .type(new AssetsFolderArgumentType())","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .setDefault(DEFAULT_ASSETS_PATH)","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .help(\"The directory to place assets files to customize report generation. \"","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"-"},"content":"                        + \"If not provided, the assets folder in the current working directory will be used.\");","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"-"},"content":"        parser.addArgument(SINCE_FLAGS)","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"-"},"content":"                .dest(SINCE_FLAGS[0])","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"yong24s"},"content":"                .metavar(\"dd/MM/yyyy\")","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"-"},"content":"                .type(new SinceDateArgumentType())","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"yong24s"},"content":"                .setDefault(Optional.empty())","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"yong24s"},"content":"                .help(\"The date to start filtering.\");","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"-"},"content":"        parser.addArgument(UNTIL_FLAGS)","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"-"},"content":"                .dest(UNTIL_FLAGS[0])","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"yong24s"},"content":"                .metavar(\"dd/MM/yyyy\")","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"jamessspanggg"},"content":"                .type(new UntilDateArgumentType())","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"yong24s"},"content":"                .setDefault(Optional.empty())","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"yong24s"},"content":"                .help(\"The date to stop filtering.\");","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"-"},"content":"        parser.addArgument(PERIOD_FLAGS)","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"-"},"content":"                .dest(PERIOD_FLAGS[0])","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"-"},"content":"                .metavar(\"PERIOD\")","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"-"},"content":"                .type(new PeriodArgumentType())","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"-"},"content":"                .setDefault(Optional.empty())","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"-"},"content":"                .help(\"The number of days of the filtering window.\");","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"-"},"content":"        parser.addArgument(FORMAT_FLAGS)","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"-"},"content":"                .dest(FORMAT_FLAGS[0])","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"yong24s"},"content":"                .nargs(\"*\")","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"yong24s"},"content":"                .metavar(\"FORMAT\")","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"yong24s"},"content":"                .type(new AlphanumericArgumentType())","isFullCredit":true},{"lineNumber":179,"author":{"gitId":"-"},"content":"                .setDefault(Collections.emptyList())","isFullCredit":true},{"lineNumber":180,"author":{"gitId":"yong24s"},"content":"                .help(\"The alphanumeric file formats to process.\\n\"","isFullCredit":true},{"lineNumber":181,"author":{"gitId":"yong24s"},"content":"                        + \"If not provided, default file formats will be used.\\n\"","isFullCredit":true},{"lineNumber":182,"author":{"gitId":"yong24s"},"content":"                        + \"Please refer to userguide for more information.\");","isFullCredit":true},{"lineNumber":183,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":184,"author":{"gitId":"-"},"content":"        parser.addArgument(TIMEZONE_FLAGS)","isFullCredit":true},{"lineNumber":185,"author":{"gitId":"-"},"content":"                .dest(TIMEZONE_FLAGS[0])","isFullCredit":true},{"lineNumber":186,"author":{"gitId":"-"},"content":"                .metavar(\"ZONE_ID[±hh[mm]]\")","isFullCredit":true},{"lineNumber":187,"author":{"gitId":"-"},"content":"                .type(new ZoneIdArgumentType())","isFullCredit":true},{"lineNumber":188,"author":{"gitId":"-"},"content":"                .setDefault(ZoneId.systemDefault())","isFullCredit":true},{"lineNumber":189,"author":{"gitId":"-"},"content":"                .help(\"The timezone to use for the generated report. \"","isFullCredit":true},{"lineNumber":190,"author":{"gitId":"-"},"content":"                        + \"One kind of valid timezones is relative to UTC. E.g. UTC, UTC+08, UTC-1030. \\n\"","isFullCredit":true},{"lineNumber":191,"author":{"gitId":"-"},"content":"                        + \"If not provided, system default timezone will be used.\");","isFullCredit":true},{"lineNumber":192,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":193,"author":{"gitId":"-"},"content":"        parser.addArgument(FIND_PREVIOUS_AUTHORS_FLAGS)","isFullCredit":true},{"lineNumber":194,"author":{"gitId":"-"},"content":"                .dest(FIND_PREVIOUS_AUTHORS_FLAGS[0])","isFullCredit":true},{"lineNumber":195,"author":{"gitId":"-"},"content":"                .action(Arguments.storeTrue())","isFullCredit":true},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .help(\"A flag to make RepoSense utilize Git blame\u0027s ignore revisions functionality, RepoSense \"","isFullCredit":true},{"lineNumber":197,"author":{"gitId":"-"},"content":"                        + \"will attempt to blame the line changes caused by commits in the ignore commit list to the \"","isFullCredit":true},{"lineNumber":198,"author":{"gitId":"-"},"content":"                        + \"previous authors who altered those lines (if available)\");","isFullCredit":true},{"lineNumber":199,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":200,"author":{"gitId":"eugenepeh"},"content":"        // Mutex flags - these will always be the last parameters in help message.","isFullCredit":true},{"lineNumber":201,"author":{"gitId":"eugenepeh"},"content":"        mutexParser.addArgument(CONFIG_FLAGS)","isFullCredit":true},{"lineNumber":202,"author":{"gitId":"eugenepeh"},"content":"                .dest(CONFIG_FLAGS[0])","isFullCredit":true},{"lineNumber":203,"author":{"gitId":"eugenepeh"},"content":"                .type(new ConfigFolderArgumentType())","isFullCredit":true},{"lineNumber":204,"author":{"gitId":"eugenepeh"},"content":"                .metavar(\"PATH\")","isFullCredit":true},{"lineNumber":205,"author":{"gitId":"-"},"content":"                .setDefault(DEFAULT_CONFIG_PATH)","isFullCredit":true},{"lineNumber":206,"author":{"gitId":"eugenepeh"},"content":"                .help(\"The directory containing the config files.\"","isFullCredit":true},{"lineNumber":207,"author":{"gitId":"-"},"content":"                        + \"If not provided, the config files will be obtained from the config folder.\");","isFullCredit":true},{"lineNumber":208,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":209,"author":{"gitId":"eugenepeh"},"content":"        mutexParser.addArgument(REPO_FLAGS)","isFullCredit":true},{"lineNumber":210,"author":{"gitId":"eugenepeh"},"content":"                .nargs(\"+\")","isFullCredit":true},{"lineNumber":211,"author":{"gitId":"eugenepeh"},"content":"                .dest(REPO_FLAGS[0])","isFullCredit":true},{"lineNumber":212,"author":{"gitId":"eugenepeh"},"content":"                .metavar(\"LOCATION\")","isFullCredit":true},{"lineNumber":213,"author":{"gitId":"eugenepeh"},"content":"                .help(\"The GitHub URL or disk locations to clone repository.\");","isFullCredit":true},{"lineNumber":214,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":215,"author":{"gitId":"-"},"content":"        mutexParser2.addArgument(LAST_MODIFIED_DATE_FLAGS)","isFullCredit":true},{"lineNumber":216,"author":{"gitId":"-"},"content":"                .dest(LAST_MODIFIED_DATE_FLAGS[0])","isFullCredit":true},{"lineNumber":217,"author":{"gitId":"-"},"content":"                .action(Arguments.storeTrue())","isFullCredit":true},{"lineNumber":218,"author":{"gitId":"-"},"content":"                .help(\"A flag to keep track of the last modified date of each line of code.\");","isFullCredit":true},{"lineNumber":219,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":220,"author":{"gitId":"-"},"content":"        mutexParser2.addArgument(SHALLOW_CLONING_FLAGS)","isFullCredit":true},{"lineNumber":221,"author":{"gitId":"-"},"content":"                .dest(SHALLOW_CLONING_FLAGS[0])","isFullCredit":true},{"lineNumber":222,"author":{"gitId":"-"},"content":"                .action(Arguments.storeTrue())","isFullCredit":true},{"lineNumber":223,"author":{"gitId":"-"},"content":"                .help(\"A flag to make RepoSense employ Git\u0027s shallow cloning functionality, which can significantly \"","isFullCredit":true},{"lineNumber":224,"author":{"gitId":"-"},"content":"                        + \"reduce the time taken to clone large repositories. This flag should not be used for \"","isFullCredit":true},{"lineNumber":225,"author":{"gitId":"-"},"content":"                        + \"smaller repositories, where the .git file is smaller than 500 MB.\");","isFullCredit":true},{"lineNumber":226,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":227,"author":{"gitId":"-"},"content":"        parser.addArgument(CLONING_THREADS_FLAG)","isFullCredit":true},{"lineNumber":228,"author":{"gitId":"-"},"content":"                .dest(CLONING_THREADS_FLAG[0])","isFullCredit":true},{"lineNumber":229,"author":{"gitId":"-"},"content":"                .type(new CloningThreadsArgumentType())","isFullCredit":true},{"lineNumber":230,"author":{"gitId":"-"},"content":"                .setDefault(DEFAULT_NUM_CLONING_THREADS)","isFullCredit":true},{"lineNumber":231,"author":{"gitId":"-"},"content":"                .help(FeatureControl.SUPPRESS);","isFullCredit":true},{"lineNumber":232,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":233,"author":{"gitId":"-"},"content":"        parser.addArgument(ANALYSIS_THREADS_FLAG)","isFullCredit":true},{"lineNumber":234,"author":{"gitId":"-"},"content":"                .dest(ANALYSIS_THREADS_FLAG[0])","isFullCredit":true},{"lineNumber":235,"author":{"gitId":"-"},"content":"                .type(new AnalysisThreadsArgumentType())","isFullCredit":true},{"lineNumber":236,"author":{"gitId":"-"},"content":"                .setDefault(DEFAULT_NUM_ANALYSIS_THREADS)","isFullCredit":true},{"lineNumber":237,"author":{"gitId":"-"},"content":"                .help(FeatureControl.SUPPRESS);","isFullCredit":true},{"lineNumber":238,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":239,"author":{"gitId":"-"},"content":"        // Testing flags","isFullCredit":true},{"lineNumber":240,"author":{"gitId":"-"},"content":"        argumentGroup.addArgument(TEST_MODE_FLAG)","isFullCredit":true},{"lineNumber":241,"author":{"gitId":"-"},"content":"                .dest(TEST_MODE_FLAG[0])","isFullCredit":true},{"lineNumber":242,"author":{"gitId":"-"},"content":"                .action(Arguments.storeTrue())","isFullCredit":true},{"lineNumber":243,"author":{"gitId":"-"},"content":"                .help(\"Enables testing mode.\");","isFullCredit":true},{"lineNumber":244,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":245,"author":{"gitId":"-"},"content":"        argumentGroup.addArgument(FRESH_CLONING_FLAG)","isFullCredit":true},{"lineNumber":246,"author":{"gitId":"-"},"content":"                .dest(FRESH_CLONING_FLAG[0])","isFullCredit":true},{"lineNumber":247,"author":{"gitId":"-"},"content":"                .action(Arguments.storeTrue())","isFullCredit":true},{"lineNumber":248,"author":{"gitId":"-"},"content":"                .help(\"Enables fresh cloning. Requires testing mode to be enabled.\");","isFullCredit":true},{"lineNumber":249,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":250,"author":{"gitId":"yong24s"},"content":"        return parser;","isFullCredit":true},{"lineNumber":251,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":252,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":253,"author":{"gitId":"yong24s"},"content":"    /**","isFullCredit":true},{"lineNumber":254,"author":{"gitId":"-"},"content":"     * Parses the given string {@code args} to a {@link CliArguments} object.","isFullCredit":true},{"lineNumber":255,"author":{"gitId":"yamidark"},"content":"     *","isFullCredit":true},{"lineNumber":256,"author":{"gitId":"eugenepeh"},"content":"     * @throws HelpScreenException if given args contain the --help flag. Help message will be printed out","isFullCredit":true},{"lineNumber":257,"author":{"gitId":"-"},"content":"     * by the {@link ArgumentParser} hence this is to signal to the caller that the program is safe to exit.","isFullCredit":true},{"lineNumber":258,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given string arguments fails to parse to a {@link CliArguments} object.","isFullCredit":true},{"lineNumber":259,"author":{"gitId":"yong24s"},"content":"     */","isFullCredit":true},{"lineNumber":260,"author":{"gitId":"eugenepeh"},"content":"    public static CliArguments parse(String[] args) throws HelpScreenException, ParseException {","isFullCredit":true},{"lineNumber":261,"author":{"gitId":"yong24s"},"content":"        try {","isFullCredit":true},{"lineNumber":262,"author":{"gitId":"yong24s"},"content":"            ArgumentParser parser \u003d getArgumentParser();","isFullCredit":true},{"lineNumber":263,"author":{"gitId":"yong24s"},"content":"            Namespace results \u003d parser.parseArgs(args);","isFullCredit":true},{"lineNumber":264,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":265,"author":{"gitId":"-"},"content":"            Path configFolderPath \u003d results.get(CONFIG_FLAGS[0]);","isFullCredit":true},{"lineNumber":266,"author":{"gitId":"-"},"content":"            Path reportFolderPath \u003d results.get(VIEW_FLAGS[0]);","isFullCredit":true},{"lineNumber":267,"author":{"gitId":"-"},"content":"            Path outputFolderPath \u003d results.get(OUTPUT_FLAGS[0]);","isFullCredit":true},{"lineNumber":268,"author":{"gitId":"-"},"content":"            ZoneId zoneId \u003d results.get(TIMEZONE_FLAGS[0]);","isFullCredit":true},{"lineNumber":269,"author":{"gitId":"-"},"content":"            Path assetsFolderPath \u003d results.get(ASSETS_FLAGS[0]);","isFullCredit":true},{"lineNumber":270,"author":{"gitId":"-"},"content":"            List\u003cString\u003e locations \u003d results.get(REPO_FLAGS[0]);","isFullCredit":true},{"lineNumber":271,"author":{"gitId":"-"},"content":"            List\u003cFileType\u003e formats \u003d FileType.convertFormatStringsToFileTypes(results.get(FORMAT_FLAGS[0]));","isFullCredit":true},{"lineNumber":272,"author":{"gitId":"-"},"content":"            boolean isStandaloneConfigIgnored \u003d results.get(IGNORE_CONFIG_FLAGS[0]);","isFullCredit":true},{"lineNumber":273,"author":{"gitId":"-"},"content":"            boolean isFileSizeLimitIgnored \u003d results.get(IGNORE_SIZELIMIT_FLAGS[0]);","isFullCredit":true},{"lineNumber":274,"author":{"gitId":"-"},"content":"            boolean shouldIncludeLastModifiedDate \u003d results.get(LAST_MODIFIED_DATE_FLAGS[0]);","isFullCredit":true},{"lineNumber":275,"author":{"gitId":"-"},"content":"            boolean shouldPerformShallowCloning \u003d results.get(SHALLOW_CLONING_FLAGS[0]);","isFullCredit":true},{"lineNumber":276,"author":{"gitId":"-"},"content":"            boolean shouldFindPreviousAuthors \u003d results.get(FIND_PREVIOUS_AUTHORS_FLAGS[0]);","isFullCredit":true},{"lineNumber":277,"author":{"gitId":"-"},"content":"            boolean isTestMode \u003d results.get(TEST_MODE_FLAG[0]);","isFullCredit":true},{"lineNumber":278,"author":{"gitId":"-"},"content":"            int numCloningThreads \u003d results.get(CLONING_THREADS_FLAG[0]);","isFullCredit":true},{"lineNumber":279,"author":{"gitId":"-"},"content":"            int numAnalysisThreads \u003d results.get(ANALYSIS_THREADS_FLAG[0]);","isFullCredit":true},{"lineNumber":280,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":281,"author":{"gitId":"-"},"content":"            CliArguments.Builder cliArgumentsBuilder \u003d new CliArguments.Builder()","isFullCredit":true},{"lineNumber":282,"author":{"gitId":"-"},"content":"                    .configFolderPath(configFolderPath)","isFullCredit":true},{"lineNumber":283,"author":{"gitId":"-"},"content":"                    .reportDirectoryPath(reportFolderPath)","isFullCredit":true},{"lineNumber":284,"author":{"gitId":"-"},"content":"                    .outputFilePath(outputFolderPath)","isFullCredit":true},{"lineNumber":285,"author":{"gitId":"-"},"content":"                    .zoneId(zoneId)","isFullCredit":true},{"lineNumber":286,"author":{"gitId":"-"},"content":"                    .assetsFilePath(assetsFolderPath)","isFullCredit":true},{"lineNumber":287,"author":{"gitId":"-"},"content":"                    .locations(locations)","isFullCredit":true},{"lineNumber":288,"author":{"gitId":"-"},"content":"                    .formats(formats)","isFullCredit":true},{"lineNumber":289,"author":{"gitId":"-"},"content":"                    .isStandaloneConfigIgnored(isStandaloneConfigIgnored)","isFullCredit":true},{"lineNumber":290,"author":{"gitId":"-"},"content":"                    .isFileSizeLimitIgnored(isFileSizeLimitIgnored)","isFullCredit":true},{"lineNumber":291,"author":{"gitId":"-"},"content":"                    .isLastModifiedDateIncluded(shouldIncludeLastModifiedDate)","isFullCredit":true},{"lineNumber":292,"author":{"gitId":"-"},"content":"                    .isShallowCloningPerformed(shouldPerformShallowCloning)","isFullCredit":true},{"lineNumber":293,"author":{"gitId":"-"},"content":"                    .isFindingPreviousAuthorsPerformed(shouldFindPreviousAuthors)","isFullCredit":true},{"lineNumber":294,"author":{"gitId":"-"},"content":"                    .numCloningThreads(numCloningThreads)","isFullCredit":true},{"lineNumber":295,"author":{"gitId":"-"},"content":"                    .numAnalysisThreads(numAnalysisThreads)","isFullCredit":true},{"lineNumber":296,"author":{"gitId":"-"},"content":"                    .isTestMode(isTestMode);","isFullCredit":true},{"lineNumber":297,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":298,"author":{"gitId":"-"},"content":"            LogsManager.setLogFolderLocation(outputFolderPath);","isFullCredit":true},{"lineNumber":299,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":300,"author":{"gitId":"-"},"content":"            if (locations \u003d\u003d null \u0026\u0026 configFolderPath.equals(DEFAULT_CONFIG_PATH)) {","isFullCredit":true},{"lineNumber":301,"author":{"gitId":"-"},"content":"                logger.info(MESSAGE_USING_DEFAULT_CONFIG_PATH);","isFullCredit":true},{"lineNumber":302,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":303,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":304,"author":{"gitId":"-"},"content":"            addReportConfigToBuilder(cliArgumentsBuilder, results);","isFullCredit":true},{"lineNumber":305,"author":{"gitId":"-"},"content":"            addAnalysisDatesToBuilder(cliArgumentsBuilder, results);","isFullCredit":true},{"lineNumber":306,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":307,"author":{"gitId":"-"},"content":"            boolean isViewModeOnly \u003d reportFolderPath !\u003d null","isFullCredit":true},{"lineNumber":308,"author":{"gitId":"-"},"content":"                    \u0026\u0026 !reportFolderPath.equals(EMPTY_PATH)","isFullCredit":true},{"lineNumber":309,"author":{"gitId":"-"},"content":"                    \u0026\u0026 configFolderPath.equals(DEFAULT_CONFIG_PATH)","isFullCredit":true},{"lineNumber":310,"author":{"gitId":"-"},"content":"                    \u0026\u0026 locations \u003d\u003d null;","isFullCredit":true},{"lineNumber":311,"author":{"gitId":"-"},"content":"            cliArgumentsBuilder.isViewModeOnly(isViewModeOnly);","isFullCredit":true},{"lineNumber":312,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":313,"author":{"gitId":"-"},"content":"            boolean isAutomaticallyLaunching \u003d reportFolderPath !\u003d null;","isFullCredit":true},{"lineNumber":314,"author":{"gitId":"-"},"content":"            if (isAutomaticallyLaunching \u0026\u0026 !reportFolderPath.equals(EMPTY_PATH) \u0026\u0026 !isViewModeOnly) {","isFullCredit":true},{"lineNumber":315,"author":{"gitId":"-"},"content":"                logger.info(String.format(\"Ignoring argument \u0027%s\u0027 for --view.\", reportFolderPath.toString()));","isFullCredit":true},{"lineNumber":316,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":317,"author":{"gitId":"-"},"content":"            cliArgumentsBuilder.isAutomaticallyLaunching(isAutomaticallyLaunching);","isFullCredit":true},{"lineNumber":318,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":319,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":320,"author":{"gitId":"-"},"content":"            boolean shouldPerformFreshCloning \u003d isTestMode","isFullCredit":true},{"lineNumber":321,"author":{"gitId":"-"},"content":"                    ? results.get(FRESH_CLONING_FLAG[0])","isFullCredit":true},{"lineNumber":322,"author":{"gitId":"-"},"content":"                    : DEFAULT_SHOULD_FRESH_CLONE;","isFullCredit":true},{"lineNumber":323,"author":{"gitId":"-"},"content":"            cliArgumentsBuilder.isFreshClonePerformed(shouldPerformFreshCloning);","isFullCredit":true},{"lineNumber":324,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":325,"author":{"gitId":"-"},"content":"            return cliArgumentsBuilder.build();","isFullCredit":true},{"lineNumber":326,"author":{"gitId":"-"},"content":"        } catch (HelpScreenException hse) {","isFullCredit":true},{"lineNumber":327,"author":{"gitId":"-"},"content":"            throw hse;","isFullCredit":true},{"lineNumber":328,"author":{"gitId":"-"},"content":"        } catch (ArgumentParserException ape) {","isFullCredit":true},{"lineNumber":329,"author":{"gitId":"-"},"content":"            throw new ParseException(getArgumentParser().formatUsage() + ape.getMessage() + \"\\n\");","isFullCredit":true},{"lineNumber":330,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":331,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":332,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":333,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":334,"author":{"gitId":"-"},"content":"     * Adds the reportConfig field to the given {@code builder}.","isFullCredit":true},{"lineNumber":335,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":336,"author":{"gitId":"-"},"content":"     * @param builder Builder to be supplied with the reportConfig field.","isFullCredit":true},{"lineNumber":337,"author":{"gitId":"-"},"content":"     * @param results Parsed results of the user-supplied CLI arguments.","isFullCredit":true},{"lineNumber":338,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":339,"author":{"gitId":"-"},"content":"    private static void addReportConfigToBuilder(CliArguments.Builder builder, Namespace results) {","isFullCredit":true},{"lineNumber":340,"author":{"gitId":"-"},"content":"        ReportConfiguration reportConfig \u003d new ReportConfiguration();","isFullCredit":true},{"lineNumber":341,"author":{"gitId":"-"},"content":"        List\u003cString\u003e locations \u003d results.get(REPO_FLAGS[0]);","isFullCredit":true},{"lineNumber":342,"author":{"gitId":"-"},"content":"        Path configFolderPath \u003d results.get(CONFIG_FLAGS[0]);","isFullCredit":true},{"lineNumber":343,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":344,"author":{"gitId":"-"},"content":"        // Report config is ignored if --repos is provided","isFullCredit":true},{"lineNumber":345,"author":{"gitId":"-"},"content":"        if (locations \u003d\u003d null) {","isFullCredit":true},{"lineNumber":346,"author":{"gitId":"-"},"content":"            Path reportConfigFilePath \u003d configFolderPath.resolve(ReportConfigJsonParser.REPORT_CONFIG_FILENAME);","isFullCredit":true},{"lineNumber":347,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":348,"author":{"gitId":"-"},"content":"            try {","isFullCredit":true},{"lineNumber":349,"author":{"gitId":"-"},"content":"                reportConfig \u003d new ReportConfigJsonParser().parse(reportConfigFilePath);","isFullCredit":true},{"lineNumber":350,"author":{"gitId":"-"},"content":"            } catch (JsonSyntaxException jse) {","isFullCredit":true},{"lineNumber":351,"author":{"gitId":"-"},"content":"                logger.warning(String.format(MESSAGE_INVALID_CONFIG_PATH, reportConfigFilePath));","isFullCredit":true},{"lineNumber":352,"author":{"gitId":"-"},"content":"            } catch (IllegalArgumentException iae) {","isFullCredit":true},{"lineNumber":353,"author":{"gitId":"-"},"content":"                logger.warning(String.format(MESSAGE_INVALID_CONFIG_JSON, iae.getMessage()));","isFullCredit":true},{"lineNumber":354,"author":{"gitId":"-"},"content":"            } catch (IOException ioe) {","isFullCredit":true},{"lineNumber":355,"author":{"gitId":"-"},"content":"                // IOException thrown as report-config.json is not found.","isFullCredit":true},{"lineNumber":356,"author":{"gitId":"-"},"content":"                // Ignore exception as the file is optional.","isFullCredit":true},{"lineNumber":357,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":358,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":359,"author":{"gitId":"-"},"content":"        builder.reportConfiguration(reportConfig);","isFullCredit":true},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":361,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":362,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":363,"author":{"gitId":"-"},"content":"     * Adds the sinceDate and untilDate fields for analysis to the given {@code builder}.","isFullCredit":true},{"lineNumber":364,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":365,"author":{"gitId":"-"},"content":"     * @param builder Builder to be supplied with the sinceDate and untilDate fields","isFullCredit":true},{"lineNumber":366,"author":{"gitId":"-"},"content":"     * @param results Parsed results of the user-supplied CLI arguments.","isFullCredit":true},{"lineNumber":367,"author":{"gitId":"-"},"content":"     * @throws ParseException if all of sinceDate, untilDate and (analysis) period is provided","isFullCredit":true},{"lineNumber":368,"author":{"gitId":"-"},"content":"     * or if the sinceDate is invalid.","isFullCredit":true},{"lineNumber":369,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":370,"author":{"gitId":"-"},"content":"    private static void addAnalysisDatesToBuilder(CliArguments.Builder builder, Namespace results)","isFullCredit":true},{"lineNumber":371,"author":{"gitId":"-"},"content":"            throws ParseException {","isFullCredit":true},{"lineNumber":372,"author":{"gitId":"-"},"content":"        ZoneId zoneId \u003d results.get(TIMEZONE_FLAGS[0]);","isFullCredit":true},{"lineNumber":373,"author":{"gitId":"-"},"content":"        Optional\u003cLocalDateTime\u003e cliSinceDate \u003d results.get(SINCE_FLAGS[0]);","isFullCredit":true},{"lineNumber":374,"author":{"gitId":"-"},"content":"        Optional\u003cLocalDateTime\u003e cliUntilDate \u003d results.get(UNTIL_FLAGS[0]);","isFullCredit":true},{"lineNumber":375,"author":{"gitId":"-"},"content":"        Optional\u003cInteger\u003e cliPeriod \u003d results.get(PERIOD_FLAGS[0]);","isFullCredit":true},{"lineNumber":376,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":377,"author":{"gitId":"jamessspanggg"},"content":"        boolean isSinceDateProvided \u003d cliSinceDate.isPresent();","isFullCredit":true},{"lineNumber":378,"author":{"gitId":"jamessspanggg"},"content":"        boolean isUntilDateProvided \u003d cliUntilDate.isPresent();","isFullCredit":true},{"lineNumber":379,"author":{"gitId":"-"},"content":"        boolean isPeriodProvided \u003d cliPeriod.isPresent();","isFullCredit":true},{"lineNumber":380,"author":{"gitId":"-"},"content":"        if (isSinceDateProvided \u0026\u0026 isUntilDateProvided \u0026\u0026 isPeriodProvided) {","isFullCredit":true},{"lineNumber":381,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_HAVE_SINCE_DATE_UNTIL_DATE_AND_PERIOD);","isFullCredit":true},{"lineNumber":382,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":383,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":384,"author":{"gitId":"-"},"content":"        LocalDateTime sinceDate;","isFullCredit":true},{"lineNumber":385,"author":{"gitId":"-"},"content":"        LocalDateTime untilDate;","isFullCredit":true},{"lineNumber":386,"author":{"gitId":"-"},"content":"        boolean isUsingArbitraryDate \u003d false;","isFullCredit":true},{"lineNumber":387,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":388,"author":{"gitId":"-"},"content":"        LocalDateTime currentDate \u003d TimeUtil.getCurrentDate(zoneId);","isFullCredit":true},{"lineNumber":389,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":390,"author":{"gitId":"-"},"content":"        if (isSinceDateProvided) {","isFullCredit":true},{"lineNumber":391,"author":{"gitId":"-"},"content":"            sinceDate \u003d TimeUtil.getSinceDate(cliSinceDate.get());","isFullCredit":true},{"lineNumber":392,"author":{"gitId":"-"},"content":"            // For --since d1, need to adjust the arbitrary date based on timezone","isFullCredit":true},{"lineNumber":393,"author":{"gitId":"-"},"content":"            if (TimeUtil.isEqualToArbitraryFirstDateUtc(sinceDate)) {","isFullCredit":true},{"lineNumber":394,"author":{"gitId":"-"},"content":"                isUsingArbitraryDate \u003d true;","isFullCredit":true},{"lineNumber":395,"author":{"gitId":"-"},"content":"                sinceDate \u003d TimeUtil.getArbitraryFirstCommitDateConverted(zoneId);","isFullCredit":true},{"lineNumber":396,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":397,"author":{"gitId":"-"},"content":"        } else if (isUntilDateProvided) {","isFullCredit":true},{"lineNumber":398,"author":{"gitId":"-"},"content":"            sinceDate \u003d isPeriodProvided","isFullCredit":true},{"lineNumber":399,"author":{"gitId":"-"},"content":"                    ? TimeUtil.getDateMinusNDays(cliUntilDate.get(), cliPeriod.get())","isFullCredit":true},{"lineNumber":400,"author":{"gitId":"-"},"content":"                    : TimeUtil.getDateMinusAMonth(cliUntilDate.get());","isFullCredit":true},{"lineNumber":401,"author":{"gitId":"-"},"content":"        } else {","isFullCredit":true},{"lineNumber":402,"author":{"gitId":"-"},"content":"            sinceDate \u003d isPeriodProvided","isFullCredit":true},{"lineNumber":403,"author":{"gitId":"-"},"content":"                    ? TimeUtil.getDateMinusNDays(currentDate, cliPeriod.get())","isFullCredit":true},{"lineNumber":404,"author":{"gitId":"-"},"content":"                    : TimeUtil.getDateMinusAMonth(currentDate);","isFullCredit":true},{"lineNumber":405,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":406,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":407,"author":{"gitId":"-"},"content":"        if (isPeriodProvided \u0026\u0026 isUsingArbitraryDate) {","isFullCredit":true},{"lineNumber":408,"author":{"gitId":"-"},"content":"            logger.warning(MESSAGE_SINCE_D1_WITH_PERIOD);","isFullCredit":true},{"lineNumber":409,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":410,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":411,"author":{"gitId":"-"},"content":"        if (isUntilDateProvided) {","isFullCredit":true},{"lineNumber":412,"author":{"gitId":"-"},"content":"            untilDate \u003d TimeUtil.getUntilDate(cliUntilDate.get());","isFullCredit":true},{"lineNumber":413,"author":{"gitId":"-"},"content":"        } else {","isFullCredit":true},{"lineNumber":414,"author":{"gitId":"-"},"content":"            untilDate \u003d (isSinceDateProvided \u0026\u0026 isPeriodProvided)","isFullCredit":true},{"lineNumber":415,"author":{"gitId":"-"},"content":"                    ? TimeUtil.getDatePlusNDays(cliSinceDate.get(), cliPeriod.get())","isFullCredit":true},{"lineNumber":416,"author":{"gitId":"-"},"content":"                    : currentDate;","isFullCredit":true},{"lineNumber":417,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":418,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":419,"author":{"gitId":"-"},"content":"        untilDate \u003d untilDate.compareTo(currentDate) \u003c 0","isFullCredit":true},{"lineNumber":420,"author":{"gitId":"-"},"content":"                ? untilDate","isFullCredit":true},{"lineNumber":421,"author":{"gitId":"-"},"content":"                : currentDate;","isFullCredit":true},{"lineNumber":422,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":423,"author":{"gitId":"-"},"content":"        TimeUtil.verifySinceDateIsValid(sinceDate, currentDate);","isFullCredit":true},{"lineNumber":424,"author":{"gitId":"-"},"content":"        TimeUtil.verifyDatesRangeIsCorrect(sinceDate, untilDate);","isFullCredit":true},{"lineNumber":425,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":426,"author":{"gitId":"-"},"content":"        builder.sinceDate(sinceDate)","isFullCredit":true},{"lineNumber":427,"author":{"gitId":"-"},"content":"                .isSinceDateProvided(isSinceDateProvided)","isFullCredit":true},{"lineNumber":428,"author":{"gitId":"-"},"content":"                .untilDate(untilDate)","isFullCredit":true},{"lineNumber":429,"author":{"gitId":"-"},"content":"                .isUntilDateProvided(isUntilDateProvided);","isFullCredit":true},{"lineNumber":430,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":431,"author":{"gitId":"yong24s"},"content":"}","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":4,"yong24s":66,"yamidark":2,"eugenepeh":20,"-":339}},{"path":"src/main/java/reposense/parser/AuthorConfigCsvParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yong24s"},"content":"package reposense.parser;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"yong24s"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"eugenepeh"},"content":"import java.util.ArrayList;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yong24s"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.apache.commons.csv.CSVRecord;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yong24s"},"content":"import reposense.model.Author;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.model.AuthorConfiguration;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Container for the values parsed from {@code author-config.csv} file.","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AuthorConfigCsvParser extends CsvParser\u003cAuthorConfiguration\u003e {","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"yong24s"},"content":"    public static final String AUTHOR_CONFIG_FILENAME \u003d \"author-config.csv\";","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"yong24s"},"content":"    /**","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"yong24s"},"content":"     * Positions of the elements of a line in author-config.csv config file.","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"yong24s"},"content":"     */","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String[] LOCATION_HEADER \u003d {\"Repository\u0027s Location\"};","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String[] BRANCH_HEADER \u003d {\"Branch\"};","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String[] GIT_ID_HEADERS \u003d {\"Author\u0027s Git Host ID\", \"Author\u0027s GitHub ID\"};","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String[] EMAIL_HEADER \u003d {\"Author\u0027s Emails\"};","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String[] DISPLAY_NAME_HEADER \u003d {\"Author\u0027s Display Name\"};","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String[] ALIAS_HEADER \u003d {\"Author\u0027s Git Author Name\"};","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String[] IGNORE_GLOB_LIST_HEADER \u003d {\"Ignore Glob List\"};","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AuthorConfigCsvParser(Path csvFilePath) throws FileNotFoundException {","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super(csvFilePath);","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"yong24s"},"content":"    /**","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Gets the list of headers that are mandatory for verification.","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"yong24s"},"content":"     */","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"yong24s"},"content":"    @Override","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"    protected String[][] mandatoryHeaders() {","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new String[][] {","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"                GIT_ID_HEADERS,","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"        };","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Gets the list of optional headers that can be parsed.","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected String[][] optionalHeaders() {","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new String[][] {","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"                LOCATION_HEADER, BRANCH_HEADER, EMAIL_HEADER, DISPLAY_NAME_HEADER, ALIAS_HEADER,","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"                IGNORE_GLOB_LIST_HEADER,","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"yong24s"},"content":"        };","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"yong24s"},"content":"    /**","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Processes the csv {@code record} line by line and add created {@link AuthorConfiguration} into {@code results}","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * but skips {@code author} already exists in a {@link AuthorConfiguration} that has same {@code location}","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * and {@code branch}.","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"yong24s"},"content":"     */","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"yong24s"},"content":"    @Override","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"    protected void processLine(List\u003cAuthorConfiguration\u003e results, CSVRecord record) throws ParseException {","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"        List\u003cString\u003e locationsWithBranches \u003d getAsListOrDefault(record, LOCATION_HEADER);","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String branch \u003d getOrDefault(record, BRANCH_HEADER, AuthorConfiguration.DEFAULT_BRANCH);","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String gitId \u003d get(record, GIT_ID_HEADERS);","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"        List\u003cString\u003e emails \u003d getAsList(record, EMAIL_HEADER);","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String displayName \u003d get(record, DISPLAY_NAME_HEADER);","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"        List\u003cString\u003e aliases \u003d getAsList(record, ALIAS_HEADER);","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"        List\u003cString\u003e ignoreGlobList \u003d getAsList(record, IGNORE_GLOB_LIST_HEADER);","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"        for (String locationWithBranches : locationsWithBranches) {","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"            List\u003cString\u003e parsedLocationWithBranches \u003d AuthorConfigLocationParser","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"                    .parseLocation(locationWithBranches, branch);","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"            String currLocation \u003d parsedLocationWithBranches.get(0);","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"            for (int i \u003d 1; i \u003c parsedLocationWithBranches.size(); i++) {","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"                String currBranch \u003d parsedLocationWithBranches.get(i);","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"                registerLocationAndBranch(results, gitId, emails, displayName, aliases,","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"                        ignoreGlobList, currLocation, currBranch);","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Registers an author for a single location and branch with the information","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * provided by each line.","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws InvalidLocationException if {@code location} is invalid.","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void registerLocationAndBranch(List\u003cAuthorConfiguration\u003e results, String gitId,","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"-"},"content":"                                              List\u003cString\u003e emails, String displayName,","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"                                              List\u003cString\u003e aliases, List\u003cString\u003e ignoreGlobList,","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"-"},"content":"                                              String currLocation, String currBranch) throws InvalidLocationException {","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"        AuthorConfiguration config \u003d findMatchingAuthorConfiguration(results, currLocation, currBranch);","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(gitId);","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"yong24s"},"content":"        if (config.containsAuthor(author)) {","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"yong24s"},"content":"            logger.warning(String.format(","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    \"Skipping author as %s already in repository %s %s\",","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"                    author.getGitId(), config.getLocation(), config.getBranch()));","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"yong24s"},"content":"        }","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"        author.setEmails(new ArrayList\u003c\u003e(emails));","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"        author.setDisplayName(!displayName.isEmpty() ? displayName : author.getGitId());","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!aliases.isEmpty()) {","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"-"},"content":"            author.setAuthorAliases(aliases);","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!ignoreGlobList.isEmpty()) {","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"-"},"content":"            author.setIgnoreGlobList(ignoreGlobList);","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"yong24s"},"content":"        config.addAuthor(author);","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"yong24s"},"content":"    /**","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Gets an existing {@link AuthorConfiguration} from {@code results} if {@code location} and {@code branch} matches.","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Otherwise, adds a newly created {@link AuthorConfiguration} into {@code results} and returns it.","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"yong24s"},"content":"     *","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"yong24s"},"content":"     * @throws InvalidLocationException if {@code location} is invalid.","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"yong24s"},"content":"     */","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private static AuthorConfiguration findMatchingAuthorConfiguration(List\u003cAuthorConfiguration\u003e results,","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"-"},"content":"            String location, String branch) throws InvalidLocationException {","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"        AuthorConfiguration config \u003d new AuthorConfiguration(new RepoLocation(location), branch);","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"-"},"content":"        for (AuthorConfiguration authorConfig : results) {","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"-"},"content":"            if (authorConfig.getLocation().equals(config.getLocation())","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"-"},"content":"                    \u0026\u0026 authorConfig.getBranch().equals(config.getBranch())) {","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"-"},"content":"                return authorConfig;","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"yong24s"},"content":"        }","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"-"},"content":"        results.add(config);","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"yong24s"},"content":"        return config;","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"yong24s"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yong24s":43,"eugenepeh":1,"-":92}},{"path":"src/main/java/reposense/parser/ConfigFolderArgumentType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yong24s"},"content":"package reposense.parser;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"yong24s"},"content":"import java.nio.file.Files;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"yong24s"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"yong24s"},"content":"import java.nio.file.Paths;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yong24s"},"content":"import net.sourceforge.argparse4j.impl.Arguments;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"yong24s"},"content":"import net.sourceforge.argparse4j.inf.Argument;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"yong24s"},"content":"import net.sourceforge.argparse4j.inf.ArgumentParser;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yong24s"},"content":"import net.sourceforge.argparse4j.inf.ArgumentParserException;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"yong24s"},"content":"import net.sourceforge.argparse4j.inf.ArgumentType;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Checks the argument of {@code --config} flag.","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"yong24s"},"content":"public class ConfigFolderArgumentType implements ArgumentType\u003cPath\u003e {","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"yong24s"},"content":"    private static final String PARSE_EXCEPTION_MESSAGE_MISSING_REQUIRED_CONFIG_FILES \u003d","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"yong24s"},"content":"            \"The required config file %s is not found in the specified folder.\";","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"yong24s"},"content":"    @Override","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"yong24s"},"content":"    public Path convert(ArgumentParser parser, Argument arg, String value) throws ArgumentParserException {","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"yong24s"},"content":"        // Piggyback on library methods to do file existence checks","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"yong24s"},"content":"        Arguments.fileType().verifyExists().verifyIsDirectory().verifyCanRead().convert(parser, arg, value);","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"yong24s"},"content":"        if (Files.exists(Paths.get(value).resolve(RepoConfigCsvParser.REPO_CONFIG_FILENAME))) {","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"yong24s"},"content":"            return Paths.get(value);","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"yong24s"},"content":"        }","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"yong24s"},"content":"        throw new ArgumentParserException(String.format(PARSE_EXCEPTION_MESSAGE_MISSING_REQUIRED_CONFIG_FILES,","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"yong24s"},"content":"                RepoConfigCsvParser.REPO_CONFIG_FILENAME), parser);","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"yong24s"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yong24s":29,"-":3}},{"path":"src/main/java/reposense/parser/CsvParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yong24s"},"content":"package reposense.parser;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.BufferedReader;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"yamidark"},"content":"import java.io.FileReader;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yong24s"},"content":"import java.io.IOException;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yong24s"},"content":"import java.nio.file.Files;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"yong24s"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"yong24s"},"content":"import java.util.ArrayList;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yamidark"},"content":"import java.util.Arrays;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"yong24s"},"content":"import java.util.Collections;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashMap;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"yong24s"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Map;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.StringJoiner;","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"yong24s"},"content":"import java.util.logging.Level;","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"yong24s"},"content":"import java.util.logging.Logger;","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"yong24s"},"content":"import java.util.stream.Collectors;","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.apache.commons.csv.CSVFormat;","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"import org.apache.commons.csv.CSVRecord;","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"yong24s"},"content":"import reposense.system.LogsManager;","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains CSV parsing related functionalities.","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"yong24s"},"content":"public abstract class CsvParser\u003cT\u003e {","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"yong24s"},"content":"    protected static final String COLUMN_VALUES_SEPARATOR \u003d \";\";","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"yong24s"},"content":"    protected static final Logger logger \u003d LogsManager.getLogger(CsvParser.class);","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String EMPTY_STRING \u003d \"\";","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String OVERRIDE_KEYWORD \u003d \"override:\";","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_EMPTY_LINE \u003d \"[EMPTY LINE]\";","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"yong24s"},"content":"    private static final String MESSAGE_UNABLE_TO_READ_CSV_FILE \u003d \"Unable to read the supplied CSV file.\";","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_MALFORMED_LINE_FORMAT \u003d \"Line %d in CSV file, %s, is malformed.\\n\"","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"eugenepeh"},"content":"            + \"Content: %s\";","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_LINE_PARSE_EXCEPTION_FORMAT \u003d \"Error parsing line %d in CSV file, %s.\\n\"","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"eugenepeh"},"content":"            + \"Content: %s\\n\"","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"eugenepeh"},"content":"            + \"Error: %s\";","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_EMPTY_CSV_FORMAT \u003d \"The CSV file, %s, is empty.\";","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_MANDATORY_HEADER_MISSING \u003d \"Required column header, %s, not found in \"","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"CSV file, %s\";","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_DUPLICATE_COLUMN_HEADER \u003d \"Duplicate columns are present in CSV file, %s.\";","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_COLUMNS_RECOGNIZED \u003d \"Parsed header of CSV file, %s, and recognized columns: \"","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"%s\";","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_ZERO_VALID_CONFIGS \u003d \"No valid configurations in the %s.\";","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_UNKNOWN_COLUMN \u003d \"Unknown column(s) found: %s (%s)\";","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"yong24s"},"content":"    private Path csvFilePath;","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private Map\u003cString, Integer\u003e headerMap \u003d new HashMap\u003c\u003e();","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private int numOfLinesBeforeFirstRecord \u003d 0;","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates {@link CsvParser} with given {@code csvFilepath}.","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws FileNotFoundException if the csv file cannot be found in the provided {@code csvFilePath}.","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public CsvParser(Path csvFilePath) throws FileNotFoundException {","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"yong24s"},"content":"        if (csvFilePath \u003d\u003d null || !Files.exists(csvFilePath)) {","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new FileNotFoundException(\"Csv file does not exist at the given path.\\n\"","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"                    + \"Use \u0027-help\u0027 to list all the available subcommands and some concept guides.\");","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"yong24s"},"content":"        }","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"yong24s"},"content":"        this.csvFilePath \u003d csvFilePath;","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"yong24s"},"content":"    /**","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses the csv file associated with this instance of the {@link CsvParser} and returns a {@link List}","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * containing the records in this file.","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws IOException if there are errors accessing the given csv file.","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @throws InvalidCsvException if the csv is malformed.","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws InvalidHeaderException if header of csv file cannot be read.","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"yong24s"},"content":"     */","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public List\u003cT\u003e parse() throws IOException, InvalidCsvException, InvalidHeaderException {","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"yong24s"},"content":"        List\u003cT\u003e results \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Iterable\u003cCSVRecord\u003e records;","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"        try (BufferedReader csvReader \u003d new BufferedReader(new FileReader(csvFilePath.toFile()))) {","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"            String[] header \u003d getHeader(csvReader);","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"            try {","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"                records \u003d CSVFormat.Builder.create(CSVFormat.DEFAULT).setIgnoreEmptyLines(false).setHeader(header)","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"                        .setTrim(true).setIgnoreHeaderCase(true).build().parse(csvReader);","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"            } catch (IllegalArgumentException iae) {","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"                throw new InvalidCsvException(","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"-"},"content":"                        String.format(MESSAGE_DUPLICATE_COLUMN_HEADER, csvFilePath.getFileName()));","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"            for (CSVRecord record : records) {","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"-"},"content":"                if (isLineMalformed(record)) {","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"yong24s"},"content":"                    continue;","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"yong24s"},"content":"                }","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"eugenepeh"},"content":"                try {","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"-"},"content":"                    processLine(results, record);","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"eugenepeh"},"content":"                } catch (ParseException pe) {","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"                    logger.warning(String.format(MESSAGE_LINE_PARSE_EXCEPTION_FORMAT, getLineNumber(record),","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"                            csvFilePath.getFileName(), getRowContentAsRawString(record), pe.getMessage()));","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"-"},"content":"                } catch (IllegalArgumentException iae) {","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"                    logger.log(Level.WARNING, iae.getMessage(), iae);","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"eugenepeh"},"content":"                }","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"yong24s"},"content":"            }","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"yong24s"},"content":"        } catch (IOException ioe) {","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"yong24s"},"content":"            throw new IOException(MESSAGE_UNABLE_TO_READ_CSV_FILE, ioe);","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (results.isEmpty()) {","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new InvalidCsvException(String.format(MESSAGE_ZERO_VALID_CONFIGS, csvFilePath.getFileName()));","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"yong24s"},"content":"        }","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"yong24s"},"content":"        return results;","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns the header of a CSV file, which is assumed to be the first non-empty / non-whitespace line in the file","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * read by {@code reader}.","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * The line is split into an array of {@code String}s, using the comma symbol as delimiter.","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @throws IOException if there is an error accessing the file.","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @throws InvalidCsvException if the file has only empty or blank lines.","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @throws InvalidHeaderException if header of csv file cannot be read.","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private String[] getHeader(BufferedReader reader) throws IOException, InvalidCsvException, InvalidHeaderException {","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String currentLine \u003d \"\";","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // read from file until we encounter a line that is neither blank nor empty","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"-"},"content":"        while (currentLine.isEmpty()) {","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"-"},"content":"            currentLine \u003d Optional.ofNullable(reader.readLine())","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"-"},"content":"                    .map(String::trim)","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"-"},"content":"                    .orElseThrow(() -\u003e new InvalidCsvException(String.format(","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"-"},"content":"                            MESSAGE_EMPTY_CSV_FORMAT, csvFilePath.getFileName())));","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"-"},"content":"            numOfLinesBeforeFirstRecord++;","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String[] header \u003d currentLine.split(\",\");","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"-"},"content":"        validateHeader(header);","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return header;","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Returns true if {@code record} does not contain the same number of columns as the header or contains missing","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * values at the mandatory columns in CSV format.","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private boolean isLineMalformed(CSVRecord record) {","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (!record.isConsistent()) {","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"-"},"content":"            logger.warning(String.format(MESSAGE_MALFORMED_LINE_FORMAT, getLineNumber(record),","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"-"},"content":"                    csvFilePath.getFileName(), getRowContentAsRawString(record)));","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"-"},"content":"        for (String[] equivalentHeaders : mandatoryHeaders()) {","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"-"},"content":"            boolean isLineFormatMalformed \u003d","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"-"},"content":"                    Arrays.stream(equivalentHeaders).allMatch(header -\u003e get(record, header).isEmpty());","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"-"},"content":"            if (isLineFormatMalformed) {","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"-"},"content":"                logger.warning(String.format(MESSAGE_MALFORMED_LINE_FORMAT, getLineNumber(record),","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"-"},"content":"                        csvFilePath.getFileName(), getRowContentAsRawString(record)));","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"yong24s"},"content":"                return true;","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"yong24s"},"content":"            }","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"yong24s"},"content":"        }","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"yong24s"},"content":"        return false;","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"yong24s"},"content":"    /**","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Returns the value of {@code record} at the column with the header {@code header}.","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"yong24s"},"content":"     */","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"-"},"content":"    protected String get(final CSVRecord record, String header) {","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return headerMap.containsKey(header) ? record.get(headerMap.get(header)).trim() : EMPTY_STRING;","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Returns the value of {@code record} at the column that match any of the equivalent headers in","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * {@code equivalentHeaders}.","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"-"},"content":"    protected String get(final CSVRecord record, String[] equivalentHeaders) {","isFullCredit":true},{"lineNumber":179,"author":{"gitId":"-"},"content":"        for (String header : equivalentHeaders) {","isFullCredit":true},{"lineNumber":180,"author":{"gitId":"-"},"content":"            if (headerMap.containsKey(header)) {","isFullCredit":true},{"lineNumber":181,"author":{"gitId":"-"},"content":"                return record.get(headerMap.get(header)).trim();","isFullCredit":true},{"lineNumber":182,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":184,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":185,"author":{"gitId":"-"},"content":"        return EMPTY_STRING;","isFullCredit":true},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":187,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":188,"author":{"gitId":"yong24s"},"content":"    /**","isFullCredit":true},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Returns the value of {@code record} at the column that match any of the equivalent headers in","isFullCredit":true},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * {@code equivalentHeaders} if present, or returns {@code defaultValue} otherwise.","isFullCredit":true},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":192,"author":{"gitId":"-"},"content":"    protected String getOrDefault(final CSVRecord record, String[] equivalentHeaders, String defaultValue) {","isFullCredit":true},{"lineNumber":193,"author":{"gitId":"-"},"content":"        String value \u003d get(record, equivalentHeaders);","isFullCredit":true},{"lineNumber":194,"author":{"gitId":"-"},"content":"        return value.isEmpty() ? defaultValue : value;","isFullCredit":true},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":196,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * Returns the value of {@code record} at the column that match any of the equivalent headers in","isFullCredit":true},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * {@code equivalentHeaders} as a {@link List} if it is in {@code record} and not empty.","isFullCredit":true},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * The column is delimited by {@code COLUMN_VALUES_SEPARATOR}.","isFullCredit":true},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * Returns an empty {@link List} otherwise.","isFullCredit":true},{"lineNumber":202,"author":{"gitId":"yong24s"},"content":"     */","isFullCredit":true},{"lineNumber":203,"author":{"gitId":"-"},"content":"    protected List\u003cString\u003e getAsList(final CSVRecord record, String[] equivalentHeaders) {","isFullCredit":true},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String value \u003d get(record, equivalentHeaders);","isFullCredit":true},{"lineNumber":205,"author":{"gitId":"-"},"content":"        if (value.isEmpty()) {","isFullCredit":true},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return Collections.emptyList();","isFullCredit":true},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":208,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":209,"author":{"gitId":"-"},"content":"        return Arrays.stream(value.split(COLUMN_VALUES_SEPARATOR))","isFullCredit":true},{"lineNumber":210,"author":{"gitId":"-"},"content":"                .map(String::trim)","isFullCredit":true},{"lineNumber":211,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","isFullCredit":true},{"lineNumber":212,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":213,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":214,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":215,"author":{"gitId":"-"},"content":"     * Returns the value of {@code record} at {@code colNum} as a {@code List},","isFullCredit":true},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * delimited by {@code COLUMN_VALUES_SEPARATOR} if it is in {@code record} and not empty, or","isFullCredit":true},{"lineNumber":217,"author":{"gitId":"-"},"content":"     * returns a single element List containing the empty string otherwise.","isFullCredit":true},{"lineNumber":218,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":219,"author":{"gitId":"-"},"content":"    protected List\u003cString\u003e getAsListOrDefault(final CSVRecord record, String[] equivalentHeaders) {","isFullCredit":true},{"lineNumber":220,"author":{"gitId":"-"},"content":"        List\u003cString\u003e list \u003d getAsList(record, equivalentHeaders);","isFullCredit":true},{"lineNumber":221,"author":{"gitId":"-"},"content":"        return list.isEmpty() ? Collections.singletonList(\"\") : list;","isFullCredit":true},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":223,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":224,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":225,"author":{"gitId":"-"},"content":"     * Returns the values in {@code record} as a list with the {@link CsvParser#OVERRIDE_KEYWORD} prefix removed.","isFullCredit":true},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * Returns an empty list if {@code record} at the column that match any of the equivalent headers in","isFullCredit":true},{"lineNumber":227,"author":{"gitId":"-"},"content":"     * {@code equivalentHeaders} is empty.","isFullCredit":true},{"lineNumber":228,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":229,"author":{"gitId":"-"},"content":"    protected List\u003cString\u003e getAsListWithoutOverridePrefix(final CSVRecord record, String[] equivalentHeaders) {","isFullCredit":true},{"lineNumber":230,"author":{"gitId":"-"},"content":"        List\u003cString\u003e data \u003d getAsList(record, equivalentHeaders);","isFullCredit":true},{"lineNumber":231,"author":{"gitId":"-"},"content":"        if (isElementOverridingStandaloneConfig(record, equivalentHeaders)) {","isFullCredit":true},{"lineNumber":232,"author":{"gitId":"-"},"content":"            data.set(0, data.get(0).replaceFirst(OVERRIDE_KEYWORD, \"\"));","isFullCredit":true},{"lineNumber":233,"author":{"gitId":"-"},"content":"            data.removeIf(String::isEmpty);","isFullCredit":true},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":235,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":236,"author":{"gitId":"-"},"content":"        return data;","isFullCredit":true},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":238,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":239,"author":{"gitId":"-"},"content":"    private long getLineNumber(final CSVRecord record) {","isFullCredit":true},{"lineNumber":240,"author":{"gitId":"-"},"content":"        return record.getRecordNumber() + numOfLinesBeforeFirstRecord;","isFullCredit":true},{"lineNumber":241,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":242,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":243,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":244,"author":{"gitId":"-"},"content":"     * Returns true if the {@code record} at the column that match any of the equivalent headers in","isFullCredit":true},{"lineNumber":245,"author":{"gitId":"-"},"content":"     * {@code equivalentHeaders} is prefixed with the override keyword.","isFullCredit":true},{"lineNumber":246,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":247,"author":{"gitId":"-"},"content":"    protected boolean isElementOverridingStandaloneConfig(final CSVRecord record, String[] equivalentHeaders) {","isFullCredit":true},{"lineNumber":248,"author":{"gitId":"-"},"content":"        return get(record, equivalentHeaders).startsWith(OVERRIDE_KEYWORD);","isFullCredit":true},{"lineNumber":249,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":250,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":251,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":252,"author":{"gitId":"-"},"content":"     * Returns the contents of {@code record} as a raw string.","isFullCredit":true},{"lineNumber":253,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":254,"author":{"gitId":"-"},"content":"    private String getRowContentAsRawString(final CSVRecord record) {","isFullCredit":true},{"lineNumber":255,"author":{"gitId":"-"},"content":"        StringJoiner inputRowString \u003d new StringJoiner(\",\");","isFullCredit":true},{"lineNumber":256,"author":{"gitId":"-"},"content":"        for (String value : record) {","isFullCredit":true},{"lineNumber":257,"author":{"gitId":"-"},"content":"            inputRowString.add(value);","isFullCredit":true},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":259,"author":{"gitId":"-"},"content":"        String contentAsString \u003d inputRowString.toString();","isFullCredit":true},{"lineNumber":260,"author":{"gitId":"-"},"content":"        return (contentAsString.trim().isEmpty()) ? MESSAGE_EMPTY_LINE : contentAsString;","isFullCredit":true},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":262,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":263,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":264,"author":{"gitId":"-"},"content":"     * Generates map of column header to position number for input {@code possibleHeader}.","isFullCredit":true},{"lineNumber":265,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":266,"author":{"gitId":"-"},"content":"     * @throws InvalidCsvException if {@code possibleHeader} does not contain all the mandatory headers.","isFullCredit":true},{"lineNumber":267,"author":{"gitId":"-"},"content":"     * @throws InvalidHeaderException if a column in {@code possibleHeader} cannot be parsed.","isFullCredit":true},{"lineNumber":268,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":269,"author":{"gitId":"-"},"content":"    private void validateHeader(String[] possibleHeader) throws InvalidCsvException, InvalidHeaderException {","isFullCredit":true},{"lineNumber":270,"author":{"gitId":"-"},"content":"        int headerSize \u003d possibleHeader.length;","isFullCredit":true},{"lineNumber":271,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e knownColumns \u003d new HashSet\u003c\u003e();","isFullCredit":true},{"lineNumber":272,"author":{"gitId":"-"},"content":"        ArrayList\u003cString\u003e unknownColumns \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":273,"author":{"gitId":"-"},"content":"        List\u003cString\u003e parsedHeaders \u003d mandatoryAndOptionalHeaders();","isFullCredit":true},{"lineNumber":274,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":275,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c headerSize; i++) {","isFullCredit":true},{"lineNumber":276,"author":{"gitId":"-"},"content":"            String possible \u003d possibleHeader[i].trim();","isFullCredit":true},{"lineNumber":277,"author":{"gitId":"-"},"content":"            for (String parsedHeader : parsedHeaders) {","isFullCredit":true},{"lineNumber":278,"author":{"gitId":"-"},"content":"                if (possible.equalsIgnoreCase(parsedHeader)) {","isFullCredit":true},{"lineNumber":279,"author":{"gitId":"-"},"content":"                    headerMap.put(parsedHeader, i);","isFullCredit":true},{"lineNumber":280,"author":{"gitId":"-"},"content":"                    knownColumns.add(possible);","isFullCredit":true},{"lineNumber":281,"author":{"gitId":"-"},"content":"                    break;","isFullCredit":true},{"lineNumber":282,"author":{"gitId":"-"},"content":"                }","isFullCredit":true},{"lineNumber":283,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":284,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":285,"author":{"gitId":"-"},"content":"            if (!knownColumns.contains(possible)) {","isFullCredit":true},{"lineNumber":286,"author":{"gitId":"-"},"content":"                unknownColumns.add(possible);","isFullCredit":true},{"lineNumber":287,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":288,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":289,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":290,"author":{"gitId":"-"},"content":"        if (unknownColumns.size() \u003e 0) {","isFullCredit":true},{"lineNumber":291,"author":{"gitId":"-"},"content":"            String errorMessage \u003d String.join(\", \", unknownColumns);","isFullCredit":true},{"lineNumber":292,"author":{"gitId":"-"},"content":"            throw new InvalidHeaderException(","isFullCredit":true},{"lineNumber":293,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_UNKNOWN_COLUMN, errorMessage, csvFilePath.toString()));","isFullCredit":true},{"lineNumber":294,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":295,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":296,"author":{"gitId":"-"},"content":"        for (String[] equivalentHeaders : mandatoryHeaders()) {","isFullCredit":true},{"lineNumber":297,"author":{"gitId":"-"},"content":"            boolean isAnyEquivalentHeaderPresent \u003d","isFullCredit":true},{"lineNumber":298,"author":{"gitId":"-"},"content":"                    Arrays.stream(equivalentHeaders).anyMatch(header -\u003e headerMap.containsKey(header));","isFullCredit":true},{"lineNumber":299,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":300,"author":{"gitId":"-"},"content":"            if (!isAnyEquivalentHeaderPresent) {","isFullCredit":true},{"lineNumber":301,"author":{"gitId":"-"},"content":"                throw new InvalidCsvException(String.format(","isFullCredit":true},{"lineNumber":302,"author":{"gitId":"-"},"content":"                        MESSAGE_MANDATORY_HEADER_MISSING, Arrays.toString(equivalentHeaders),","isFullCredit":true},{"lineNumber":303,"author":{"gitId":"-"},"content":"                        csvFilePath.getFileName()));","isFullCredit":true},{"lineNumber":304,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":305,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":306,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":307,"author":{"gitId":"-"},"content":"        logger.info(String.format(MESSAGE_COLUMNS_RECOGNIZED, csvFilePath.getFileName(),","isFullCredit":true},{"lineNumber":308,"author":{"gitId":"-"},"content":"                String.join(\",  \", headerMap.keySet())));","isFullCredit":true},{"lineNumber":309,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":310,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":311,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":312,"author":{"gitId":"-"},"content":"     * Gets the list of headers that are mandatory for verification.","isFullCredit":true},{"lineNumber":313,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":314,"author":{"gitId":"-"},"content":"    protected abstract String[][] mandatoryHeaders();","isFullCredit":true},{"lineNumber":315,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":316,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":317,"author":{"gitId":"-"},"content":"     * Gets the list of optional headers that can be parsed.","isFullCredit":true},{"lineNumber":318,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":319,"author":{"gitId":"-"},"content":"    protected abstract String[][] optionalHeaders();","isFullCredit":true},{"lineNumber":320,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":321,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":322,"author":{"gitId":"-"},"content":"     * Gets the list of all mandatory and optional headers that can be parsed.","isFullCredit":true},{"lineNumber":323,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":324,"author":{"gitId":"-"},"content":"    protected List\u003cString\u003e mandatoryAndOptionalHeaders() {","isFullCredit":true},{"lineNumber":325,"author":{"gitId":"-"},"content":"        return Stream.concat(Arrays.stream(mandatoryHeaders()), Arrays.stream(optionalHeaders()))","isFullCredit":true},{"lineNumber":326,"author":{"gitId":"-"},"content":"                .flatMap(Stream::of)","isFullCredit":true},{"lineNumber":327,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","isFullCredit":true},{"lineNumber":328,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":329,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":330,"author":{"gitId":"yong24s"},"content":"    /**","isFullCredit":true},{"lineNumber":331,"author":{"gitId":"yong24s"},"content":"     * Processes the csv file line by line.","isFullCredit":true},{"lineNumber":332,"author":{"gitId":"-"},"content":"     * All {@link CsvParser}s must use {@link CsvParser#get}, {@link CsvParser#getOrDefault},","isFullCredit":true},{"lineNumber":333,"author":{"gitId":"-"},"content":"     * {@link CsvParser#getAsList} or {@link CsvParser#getAsListWithoutOverridePrefix} to read contents in","isFullCredit":true},{"lineNumber":334,"author":{"gitId":"-"},"content":"     * {@code record} and add created objects into {@code results}.","isFullCredit":true},{"lineNumber":335,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":336,"author":{"gitId":"-"},"content":"     * @throws ParseException if any line does not get read successfully.","isFullCredit":true},{"lineNumber":337,"author":{"gitId":"yong24s"},"content":"     */","isFullCredit":true},{"lineNumber":338,"author":{"gitId":"-"},"content":"    protected abstract void processLine(List\u003cT\u003e results, final CSVRecord record) throws ParseException;","isFullCredit":true},{"lineNumber":339,"author":{"gitId":"yong24s"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yong24s":62,"yamidark":7,"eugenepeh":6,"-":264}},{"path":"src/main/java/reposense/parser/DateArgumentType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yong24s"},"content":"package reposense.parser;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"yong24s"},"content":"import java.util.Optional;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yong24s"},"content":"import net.sourceforge.argparse4j.inf.Argument;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yong24s"},"content":"import net.sourceforge.argparse4j.inf.ArgumentParser;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"yong24s"},"content":"import net.sourceforge.argparse4j.inf.ArgumentParserException;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"yong24s"},"content":"import net.sourceforge.argparse4j.inf.ArgumentType;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"import reposense.util.TimeUtil;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"yong24s"},"content":"/**","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Verifies and parses a string-formatted date to a {@link LocalDateTime} object.","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"yong24s"},"content":" */","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class DateArgumentType implements ArgumentType\u003cOptional\u003cLocalDateTime\u003e\u003e {","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"yong24s"},"content":"    private static final String PARSE_EXCEPTION_MESSAGE_INVALID_DATE_STRING_FORMAT \u003d \"Invalid Date: %s\";","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"yong24s"},"content":"    @Override","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Optional\u003cLocalDateTime\u003e convert(ArgumentParser parser, Argument arg, String value)","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throws ArgumentParserException {","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"yong24s"},"content":"        try {","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return Optional.of(TimeUtil.parseDate(value));","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"yong24s"},"content":"        } catch (java.text.ParseException pe) {","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"yong24s"},"content":"            throw new ArgumentParserException(","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"yong24s"},"content":"                    String.format(PARSE_EXCEPTION_MESSAGE_INVALID_DATE_STRING_FORMAT, value), parser);","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"yong24s"},"content":"        }","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"yong24s"},"content":"}","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":1,"yong24s":20,"-":7}},{"path":"src/main/java/reposense/parser/InvalidLocationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yong24s"},"content":"package reposense.parser;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"yong24s"},"content":"/**","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"yong24s"},"content":" * Signals that location cannot be represented by {@code URL} or {@code Path}.","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"yong24s"},"content":" */","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yong24s"},"content":"public class InvalidLocationException extends ParseException {","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yong24s"},"content":"    public InvalidLocationException(String message) {","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"yong24s"},"content":"        super(message);","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yong24s"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yong24s":10}},{"path":"src/main/java/reposense/parser/JsonParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.parser;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.FileReader;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"yong24s"},"content":"import java.io.IOException;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.lang.reflect.Type;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.google.gson.Gson;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.google.gson.stream.JsonReader;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a json parser that is able to parse json file from a {@link Path} into an object of type {@code T}.","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"public abstract class JsonParser\u003cT\u003e {","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Gets the type of {@code T} for json conversion.","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public abstract Type getType();","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Converts json file from the given {@code path} into an object and returns it.","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"yong24s"},"content":"     * @throws IOException if {@code path} is invalid.","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"yong24s"},"content":"    public abstract T parse(Path path) throws IOException;","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"yong24s"},"content":"    protected T fromJson(Path path) throws IOException {","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return fromJson(new Gson(), path, getType());","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"yong24s"},"content":"    protected T fromJson(Gson gson, Path path, Type type) throws IOException {","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"yong24s"},"content":"        try (JsonReader jsonReader \u003d new JsonReader(new FileReader(path.toString()))) {","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"            return gson.fromJson(jsonReader, type);","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"yong24s"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yong24s":7,"-":30}},{"path":"src/main/java/reposense/parser/OutputFolderArgumentType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yong24s"},"content":"package reposense.parser;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"yong24s"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"yong24s"},"content":"import java.nio.file.Paths;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yong24s"},"content":"import net.sourceforge.argparse4j.impl.Arguments;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yong24s"},"content":"import net.sourceforge.argparse4j.inf.Argument;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"yong24s"},"content":"import net.sourceforge.argparse4j.inf.ArgumentParser;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"yong24s"},"content":"import net.sourceforge.argparse4j.inf.ArgumentParserException;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yong24s"},"content":"import net.sourceforge.argparse4j.inf.ArgumentType;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Checks the argument of {@code --output} flag.","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"yong24s"},"content":"public class OutputFolderArgumentType implements ArgumentType\u003cPath\u003e {","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"yong24s"},"content":"    @Override","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"yong24s"},"content":"    public Path convert(ArgumentParser parser, Argument arg, String value) throws ArgumentParserException {","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"yong24s"},"content":"        // Piggyback on library methods to do file existence checks","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Arguments.fileType().verifyExists().verifyIsDirectory().verifyCanWrite()","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"                .or()","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"                .verifyNotExists().convert(parser, arg, value);","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"yong24s"},"content":"        return Paths.get(value).resolve(ArgsParser.DEFAULT_REPORT_NAME);","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"yong24s"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yong24s":18,"-":6}},{"path":"src/main/java/reposense/parser/ParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yamidark"},"content":"package reposense.parser;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that there is an exception when parsing a string.","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yong24s"},"content":"public class ParseException extends Exception {","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yong24s"},"content":"    public ParseException(String message) {","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"yong24s"},"content":"        super(message);","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yong24s"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yamidark":1,"yong24s":6,"-":3}},{"path":"src/main/java/reposense/parser/RepoConfigCsvParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yong24s"},"content":"package reposense.parser;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"yong24s"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"yong24s"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.apache.commons.csv.CSVRecord;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"import reposense.model.FileType;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"yong24s"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.util.StringsUtil;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Container for the values parsed from {@code repo-config.csv} file.","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"yong24s"},"content":"public class RepoConfigCsvParser extends CsvParser\u003cRepoConfiguration\u003e {","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"yong24s"},"content":"    public static final String REPO_CONFIG_FILENAME \u003d \"repo-config.csv\";","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"yong24s"},"content":"    private static final String IGNORE_STANDALONE_CONFIG_KEYWORD \u003d \"yes\";","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String IGNORE_FILESIZE_LIMIT_KEYWORD \u003d \"yes\";","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String SKIP_IGNORED_FILE_ANALYSIS_KEYWORD \u003d \"yes\";","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String SHALLOW_CLONING_CONFIG_KEYWORD \u003d \"yes\";","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String FIND_PREVIOUS_AUTHORS_KEYWORD \u003d \"yes\";","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"yong24s"},"content":"    /**","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"yong24s"},"content":"     * Positions of the elements of a line in repo-config.csv config file","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"yong24s"},"content":"     */","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String[] LOCATION_HEADER \u003d {\"Repository\u0027s Location\"};","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String[] BRANCH_HEADER \u003d {\"Branch\"};","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String[] FILE_FORMATS_HEADER \u003d {\"File formats\"};","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String[] IGNORE_GLOB_LIST_HEADER \u003d {\"Ignore Glob List\"};","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String[] IGNORE_STANDALONE_CONFIG_HEADER \u003d {\"Ignore Standalone Config\"};","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String[] IGNORE_FILESIZE_LIMIT_HEADER \u003d {\"Ignore File Size Limit\"};","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String[] IGNORE_COMMIT_LIST_CONFIG_HEADER \u003d {\"Ignore Commits List\"};","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String[] IGNORE_AUTHOR_LIST_CONFIG_HEADER \u003d {\"Ignore Authors List\"};","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String[] SKIP_IGNORED_FILE_ANALYSIS_HEADER \u003d {\"Skip Ignored File Analysis\"};","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String[] SHALLOW_CLONING_CONFIG_HEADER \u003d {\"Shallow Cloning\"};","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String[] FIND_PREVIOUS_AUTHORS_CONFIG_HEADER \u003d {\"Find Previous Authors\"};","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String[] FILESIZE_LIMIT_HEADER \u003d {\"File Size Limit\"};","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public RepoConfigCsvParser(Path csvFilePath) throws FileNotFoundException {","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"        super(csvFilePath);","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"yong24s"},"content":"    /**","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Gets the list of headers that are mandatory for verification.","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"yong24s"},"content":"     */","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"yong24s"},"content":"    @Override","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected String[][] mandatoryHeaders() {","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new String[][] {","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"                LOCATION_HEADER,","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"        };","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Gets the list of optional headers that can be parsed.","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"    protected String[][] optionalHeaders() {","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new String[][] {","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"                BRANCH_HEADER, FILE_FORMATS_HEADER, IGNORE_GLOB_LIST_HEADER, IGNORE_STANDALONE_CONFIG_HEADER,","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"                IGNORE_FILESIZE_LIMIT_HEADER, IGNORE_COMMIT_LIST_CONFIG_HEADER, IGNORE_AUTHOR_LIST_CONFIG_HEADER,","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"                SHALLOW_CLONING_CONFIG_HEADER, FIND_PREVIOUS_AUTHORS_CONFIG_HEADER, FILESIZE_LIMIT_HEADER,","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"                SKIP_IGNORED_FILE_ANALYSIS_HEADER","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"yong24s"},"content":"        };","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"yong24s"},"content":"    /**","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Processes the csv {@code record} line by line and add created {@link RepoConfiguration} into {@code results} but","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * ignores duplicated {@link RepoConfiguration} if there exists one that has same {@code location} and","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"yong24s"},"content":"     * {@code branch}.","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws InvalidLocationException if the location represented in {@code record} is invalid.","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"yong24s"},"content":"     */","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"yong24s"},"content":"    @Override","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"    protected void processLine(List\u003cRepoConfiguration\u003e results, CSVRecord record) throws InvalidLocationException {","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // The variable expansion is performed to simulate running the same location from command line.","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // This helps to support things like tilde expansion and other Bash/CMD features.","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"        RepoLocation location \u003d new RepoLocation(FileUtil.getVariableExpandedFilePath(get(record, LOCATION_HEADER)));","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String branch \u003d getOrDefault(record, BRANCH_HEADER, RepoConfiguration.DEFAULT_BRANCH);","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"        boolean isFormatsOverriding \u003d isElementOverridingStandaloneConfig(record, FILE_FORMATS_HEADER);","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e formats \u003d FileType.convertFormatStringsToFileTypes(","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"                getAsListWithoutOverridePrefix(record, FILE_FORMATS_HEADER));","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"        boolean isIgnoreGlobListOverriding \u003d isElementOverridingStandaloneConfig(record, IGNORE_GLOB_LIST_HEADER);","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"        List\u003cString\u003e ignoreGlobList \u003d getAsListWithoutOverridePrefix(record, IGNORE_GLOB_LIST_HEADER);","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"-"},"content":"        boolean isIgnoreCommitListOverriding \u003d","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"                isElementOverridingStandaloneConfig(record, IGNORE_COMMIT_LIST_CONFIG_HEADER);","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"-"},"content":"        List\u003cCommitHash\u003e ignoreCommitList \u003d CommitHash.convertStringsToCommits(","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"                getAsListWithoutOverridePrefix(record, IGNORE_COMMIT_LIST_CONFIG_HEADER));","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"        boolean isIgnoredAuthorsListOverriding \u003d","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"                isElementOverridingStandaloneConfig(record, IGNORE_AUTHOR_LIST_CONFIG_HEADER);","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"        List\u003cString\u003e ignoredAuthorsList \u003d getAsListWithoutOverridePrefix(record, IGNORE_AUTHOR_LIST_CONFIG_HEADER);","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"        boolean isFileSizeLimitIgnored \u003d matchValueAndKeyword(record, IGNORE_FILESIZE_LIMIT_HEADER,","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"                IGNORE_FILESIZE_LIMIT_KEYWORD);","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"-"},"content":"        boolean isIgnoredFileAnalysisSkipped \u003d matchValueAndKeyword(record, SKIP_IGNORED_FILE_ANALYSIS_HEADER,","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"                SKIP_IGNORED_FILE_ANALYSIS_KEYWORD);","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (isFileSizeLimitIgnored \u0026\u0026 isIgnoredFileAnalysisSkipped) {","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"-"},"content":"            logger.warning(\"Ignoring skip ignored file analysis column since file size limit is ignored\");","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"            isIgnoredFileAnalysisSkipped \u003d false;","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"-"},"content":"        boolean isFileSizeLimitOverriding \u003d isElementOverridingStandaloneConfig(record, FILESIZE_LIMIT_HEADER);","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"-"},"content":"        List\u003cString\u003e fileSizeLimitStringList \u003d getAsListWithoutOverridePrefix(record, FILESIZE_LIMIT_HEADER);","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"-"},"content":"        long fileSizeLimit \u003d RepoConfiguration.DEFAULT_FILE_SIZE_LIMIT;","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // If file diff limit is specified","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (fileSizeLimitStringList.size() \u003e 0) {","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"            if (isFileSizeLimitIgnored) {","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"-"},"content":"                logger.warning(\"Ignoring file size limit column since file size limit is ignored\");","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"-"},"content":"                isFileSizeLimitOverriding \u003d false;","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"-"},"content":"            } else {","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"-"},"content":"                String fileSizeLimitString \u003d fileSizeLimitStringList.get(0).trim();","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"-"},"content":"                int parseValue;","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"-"},"content":"                if (!StringsUtil.isNumeric(fileSizeLimitString)","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"                        || (parseValue \u003d Integer.parseInt(fileSizeLimitString)) \u003c\u003d 0) {","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"-"},"content":"                    logger.warning(String.format(\"Values in \\\"%s\\\" column should be positive integers.\",","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"-"},"content":"                            FILESIZE_LIMIT_HEADER[0]));","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"-"},"content":"                    isFileSizeLimitOverriding \u003d false;","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"-"},"content":"                } else {","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"-"},"content":"                    fileSizeLimit \u003d parseValue;","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"-"},"content":"                }","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"-"},"content":"        boolean isStandaloneConfigIgnored \u003d matchValueAndKeyword(record, IGNORE_STANDALONE_CONFIG_HEADER,","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"-"},"content":"                IGNORE_STANDALONE_CONFIG_KEYWORD);","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"-"},"content":"        boolean isShallowCloningPerformed \u003d matchValueAndKeyword(record, SHALLOW_CLONING_CONFIG_HEADER,","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"-"},"content":"                SHALLOW_CLONING_CONFIG_KEYWORD);","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"-"},"content":"        boolean isFindingPreviousAuthorsPerformed \u003d matchValueAndKeyword(record, FIND_PREVIOUS_AUTHORS_CONFIG_HEADER,","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"-"},"content":"                FIND_PREVIOUS_AUTHORS_KEYWORD);","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"-"},"content":"        addConfig(results, location, branch, isFormatsOverriding, formats, isIgnoreGlobListOverriding, ignoreGlobList,","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"-"},"content":"                isIgnoreCommitListOverriding, ignoreCommitList, isIgnoredAuthorsListOverriding, ignoredAuthorsList,","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"-"},"content":"                isFileSizeLimitIgnored, isIgnoredFileAnalysisSkipped, isFileSizeLimitOverriding, fileSizeLimit,","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"-"},"content":"                isStandaloneConfigIgnored, isShallowCloningPerformed, isFindingPreviousAuthorsPerformed);","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Returns true if value from {@code record}, that matches any of the equivalent headers in","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * {@code equivalentHeaders}, is the same as the given {@code keyword}, else false.","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private boolean matchValueAndKeyword(CSVRecord record, String[] equivalentHeaders, String keyword) {","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"-"},"content":"        String value \u003d get(record, equivalentHeaders);","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"-"},"content":"        boolean isIgnored \u003d value.equalsIgnoreCase(keyword);","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (!isIgnored \u0026\u0026 !value.isEmpty()) {","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"-"},"content":"            logger.warning(String.format(\"Ignoring unknown value %s in %s column.\", value, keyword.toLowerCase()));","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return isIgnored;","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Creates a new {@link RepoConfiguration} with the supplied inputs and attempts to add it to {@code results}.","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Does nothing if the repo already exists in {@code results}.","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"-"},"content":"    private void addConfig(List\u003cRepoConfiguration\u003e results, RepoLocation location, String branch,","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"-"},"content":"            boolean isFormatsOverriding, List\u003cFileType\u003e formats, boolean isIgnoreGlobListOverriding,","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"-"},"content":"            List\u003cString\u003e ignoreGlobList, boolean isIgnoreCommitListOverriding, List\u003cCommitHash\u003e ignoreCommitList,","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"-"},"content":"            boolean isIgnoredAuthorsListOverriding, List\u003cString\u003e ignoredAuthorsList, boolean isFileSizeLimitIgnored,","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"-"},"content":"            boolean isIgnoredFileAnalysisSkipped, boolean isFileSizeLimitOverriding, long fileSizeLimit,","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"-"},"content":"            boolean isStandaloneConfigIgnored, boolean isShallowCloningPerformed,","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"-"},"content":"            boolean isFindingPreviousAuthorsPerformed) {","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"-"},"content":"        RepoConfiguration config \u003d new RepoConfiguration(location, branch, formats, ignoreGlobList, fileSizeLimit,","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"-"},"content":"                isStandaloneConfigIgnored, isFileSizeLimitIgnored, ignoreCommitList, isFormatsOverriding,","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"-"},"content":"                isIgnoreGlobListOverriding, isIgnoreCommitListOverriding, isFileSizeLimitOverriding,","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"-"},"content":"                isShallowCloningPerformed, isFindingPreviousAuthorsPerformed, isIgnoredFileAnalysisSkipped,","isFullCredit":true},{"lineNumber":179,"author":{"gitId":"-"},"content":"                ignoredAuthorsList, isIgnoredAuthorsListOverriding);","isFullCredit":true},{"lineNumber":180,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":181,"author":{"gitId":"yong24s"},"content":"        if (results.contains(config)) {","isFullCredit":true},{"lineNumber":182,"author":{"gitId":"yong24s"},"content":"            logger.warning(\"Ignoring duplicated repository \" + location + \" \" + branch);","isFullCredit":true},{"lineNumber":183,"author":{"gitId":"yong24s"},"content":"            return;","isFullCredit":true},{"lineNumber":184,"author":{"gitId":"yong24s"},"content":"        }","isFullCredit":true},{"lineNumber":185,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":186,"author":{"gitId":"yong24s"},"content":"        results.add(config);","isFullCredit":true},{"lineNumber":187,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":188,"author":{"gitId":"yong24s"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yong24s":39,"-":149}},{"path":"src/main/java/reposense/parser/ReportFolderArgumentType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yong24s"},"content":"package reposense.parser;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"yong24s"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"yong24s"},"content":"import java.nio.file.Paths;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yong24s"},"content":"import net.sourceforge.argparse4j.impl.Arguments;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yong24s"},"content":"import net.sourceforge.argparse4j.inf.Argument;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"yong24s"},"content":"import net.sourceforge.argparse4j.inf.ArgumentParser;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"yong24s"},"content":"import net.sourceforge.argparse4j.inf.ArgumentParserException;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yong24s"},"content":"import net.sourceforge.argparse4j.inf.ArgumentType;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Checks the argument of {@code --view} flag.","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"yong24s"},"content":"public class ReportFolderArgumentType implements ArgumentType\u003cPath\u003e {","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"yong24s"},"content":"    @Override","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"yong24s"},"content":"    public Path convert(ArgumentParser parser, Argument arg, String value) throws ArgumentParserException {","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"yong24s"},"content":"        // Piggyback on library methods to do file existence checks","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"yong24s"},"content":"        Arguments.fileType().verifyExists().verifyIsDirectory().verifyCanRead().convert(parser, arg, value);","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"yong24s"},"content":"        return Paths.get(value);","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"yong24s"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yong24s":19,"-":3}},{"path":"src/main/java/reposense/parser/SinceDateArgumentType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.parser;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Instant;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.ZoneId;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.ZonedDateTime;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.inf.Argument;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.inf.ArgumentParser;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.inf.ArgumentParserException;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.util.TimeUtil;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Verifies and parses a string-formatted since date to a {@link LocalDateTime} object.","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class SinceDateArgumentType extends DateArgumentType {","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /*","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * When user specifies \"d1\", arbitrary first commit date will be returned.","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * This date is equivalent to 1970-01-01 00:00:00 in UTC time.","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Then, ReportGenerator will replace the arbitrary since date with the earliest commit date.","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String FIRST_COMMIT_DATE_SHORTHAND \u003d \"d1\";","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final ZonedDateTime ARBITRARY_FIRST_COMMIT_DATE_UTC \u003d ZonedDateTime.ofInstant(","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"            Instant.ofEpochMilli(0), ZoneId.of(\"Z\"));","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final LocalDateTime ARBITRARY_FIRST_COMMIT_DATE_LOCAL \u003d ARBITRARY_FIRST_COMMIT_DATE_UTC","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .toLocalDateTime();","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns an arbitrary year {@link SinceDateArgumentType#ARBITRARY_FIRST_COMMIT_DATE_LOCAL} if user specifies","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * {@link SinceDateArgumentType#FIRST_COMMIT_DATE_SHORTHAND} in {@code value}, or attempts to return the","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * desired date otherwise.","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ArgumentParserException if the given date cannot be parsed.","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cLocalDateTime\u003e convert(ArgumentParser parser, Argument arg, String value)","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throws ArgumentParserException {","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"jamessspanggg"},"content":"        if (FIRST_COMMIT_DATE_SHORTHAND.equals(value)) {","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return Optional.of(ARBITRARY_FIRST_COMMIT_DATE_LOCAL);","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"jamessspanggg"},"content":"        }","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String sinceDate \u003d TimeUtil.extractDate(value);","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"jamessspanggg"},"content":"        return super.convert(parser, arg, sinceDate + \" 00:00:00\");","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the {@link SinceDateArgumentType#ARBITRARY_FIRST_COMMIT_DATE_LOCAL}, which is the","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * {@link LocalDateTime} of {@link SinceDateArgumentType#ARBITRARY_FIRST_COMMIT_DATE_UTC}.","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static LocalDateTime getArbitraryFirstCommitDateLocal() {","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return ARBITRARY_FIRST_COMMIT_DATE_LOCAL;","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the {@link SinceDateArgumentType#ARBITRARY_FIRST_COMMIT_DATE_UTC} adjusted for the time zone based on","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * {@code toZoneId} and converted to a {@link LocalDateTime} object.","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static LocalDateTime getArbitraryFirstCommitDateConverted(ZoneId toZoneId) {","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return ARBITRARY_FIRST_COMMIT_DATE_UTC.withZoneSameInstant(toZoneId).toLocalDateTime();","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":3,"-":58}},{"path":"src/main/java/reposense/parser/StandaloneConfigJsonParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.parser;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"yong24s"},"content":"import java.io.IOException;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.lang.reflect.Type;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.google.gson.reflect.TypeToken;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import reposense.model.StandaloneConfig;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses json file from {@link Path} and creates a new {@link StandaloneConfig} object.","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class StandaloneConfigJsonParser extends JsonParser\u003cStandaloneConfig\u003e {","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Gets the type of {@link StandaloneConfig} for json conversion.","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public Type getType() {","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new TypeToken\u003cStandaloneConfig\u003e(){}.getType();","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts json file from the given {@code path} and returns a {@link StandaloneConfig} object.","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"yong24s"},"content":"     * @throws IOException if {@code path} is invalid.","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"yong24s"},"content":"    public StandaloneConfig parse(Path path) throws IOException {","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return fromJson(path);","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yong24s":3,"-":30}},{"path":"src/main/java/reposense/parser/UntilDateArgumentType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamessspanggg"},"content":"package reposense.parser;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"jamessspanggg"},"content":"import java.util.Optional;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"jamessspanggg"},"content":"import net.sourceforge.argparse4j.inf.Argument;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"jamessspanggg"},"content":"import net.sourceforge.argparse4j.inf.ArgumentParser;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"jamessspanggg"},"content":"import net.sourceforge.argparse4j.inf.ArgumentParserException;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import reposense.util.TimeUtil;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"jamessspanggg"},"content":"/**","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Verifies and parses a string-formatted until date to a {@link LocalDateTime} object.","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"jamessspanggg"},"content":" */","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"jamessspanggg"},"content":"public class UntilDateArgumentType extends DateArgumentType {","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"jamessspanggg"},"content":"    @Override","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public Optional\u003cLocalDateTime\u003e convert(ArgumentParser parser, Argument arg, String value)","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"            throws ArgumentParserException {","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String untilDate \u003d TimeUtil.extractDate(value);","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"jamessspanggg"},"content":"        return super.convert(parser, arg, untilDate + \" 23:59:59\");","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"jamessspanggg"},"content":"}","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":16,"-":6}},{"path":"src/main/java/reposense/report/CommitReportJson.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yamidark"},"content":"package reposense.report;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"yamidark"},"content":"import java.util.Collections;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"yamidark"},"content":"import java.util.HashMap;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.LinkedHashMap;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yamidark"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yamidark"},"content":"import java.util.Map;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"yamidark"},"content":"import reposense.authorship.model.AuthorshipSummary;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"ongspxm"},"content":"import reposense.commits.model.AuthorDailyContribution;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"yamidark"},"content":"import reposense.commits.model.CommitContributionSummary;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"yamidark"},"content":"import reposense.model.Author;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.model.FileType;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"yamidark"},"content":"/**","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"yamidark"},"content":" * Class that holds the data to be serialized into JSON format in `commits.json`.","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"yamidark"},"content":" */","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"yamidark"},"content":"public class CommitReportJson {","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"ongspxm"},"content":"    private final Map\u003cAuthor, List\u003cAuthorDailyContribution\u003e\u003e authorDailyContributionsMap;","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Map\u003cAuthor, LinkedHashMap\u003cFileType, Integer\u003e\u003e authorFileTypeContributionMap;","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"yamidark"},"content":"    private final Map\u003cAuthor, Float\u003e authorContributionVariance;","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"yamidark"},"content":"    private final Map\u003cAuthor, String\u003e authorDisplayNameMap;","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"jamessspanggg"},"content":"     * Constructor to construct an empty commit report with the author\u0027s display name as {@code displayName}.","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"jamessspanggg"},"content":"    public CommitReportJson(String displayName) {","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"eugenepeh"},"content":"        Author emptyAuthor \u003d Author.UNKNOWN_AUTHOR;","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"ongspxm"},"content":"        authorDailyContributionsMap \u003d new HashMap\u003c\u003e();","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"ongspxm"},"content":"        authorDailyContributionsMap.put(emptyAuthor, Collections.emptyList());","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"        authorFileTypeContributionMap \u003d new HashMap\u003c\u003e();","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"        authorFileTypeContributionMap.put(emptyAuthor, new LinkedHashMap\u003c\u003e());","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"yamidark"},"content":"        authorContributionVariance \u003d new HashMap\u003c\u003e();","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"yamidark"},"content":"        authorContributionVariance.put(emptyAuthor, (float) 0.0);","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"yamidark"},"content":"        authorDisplayNameMap \u003d new HashMap\u003c\u003e();","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"jamessspanggg"},"content":"        authorDisplayNameMap.put(emptyAuthor, displayName);","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"yamidark"},"content":"    public CommitReportJson(CommitContributionSummary commitSummary, AuthorshipSummary authorshipSummary) {","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"ongspxm"},"content":"        authorDailyContributionsMap \u003d commitSummary.getAuthorDailyContributionsMap();","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"        authorFileTypeContributionMap \u003d authorshipSummary.getAuthorFileTypeContributionMap();","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"yamidark"},"content":"        authorContributionVariance \u003d commitSummary.getAuthorContributionVariance();","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"yamidark"},"content":"        authorDisplayNameMap \u003d commitSummary.getAuthorDisplayNameMap();","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"yamidark"},"content":"}","isFullCredit":true}],"authorContributionMap":{"ongspxm":5,"jamessspanggg":3,"yamidark":33,"eugenepeh":1,"-":7}},{"path":"src/main/java/reposense/report/RepoCloner.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.report;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static reposense.util.FileUtil.getRepoParentFolder;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.git.GitBranch;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.git.GitCatFile;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.git.GitClone;","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.git.GitRevList;","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.git.GitShow;","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.git.exception.CommitNotFoundException;","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.git.exception.GitBranchException;","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.git.exception.GitCloneException;","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.system.CommandRunnerProcess;","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"import reposense.system.CommandRunnerProcessException;","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"import reposense.util.SystemUtil;","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Handles asynchronous cloning of repos to allow multiple repos to be cloned and analyzed concurrently.","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class RepoCloner {","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_START_CLONING \u003d \"Cloning in parallel from %s...\";","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_START_CLONING_SHALLOW \u003d \"Shallow cloning in parallel from %s...\";","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_ERROR_CLONING_SHALLOW \u003d","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \"Exception met while running shallow clone of repo \\\"%s\\\".\";","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_START_CLONING_PARTIAL \u003d \"Partial cloning from %s...\";","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_ERROR_CLONING_PARTIAL \u003d","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \"Exception met while running partial clone of repo \\\"%s\\\".\";","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_START_CLONING_SHALLOW_PARTIAL \u003d \"Shallow partial cloning from %s...\";","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_ERROR_CLONING_SHALLOW_PARTIAL \u003d","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \"Exception met while running shallow partial clone of repo \\\"%s\\\".\";","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_WAITING_FOR_CLONING \u003d \"Waiting for cloning of %s to complete...\";","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_COMPLETE_CLONING \u003d \"Cloning of %s completed!\";","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_ERROR_DELETING_DIRECTORY \u003d \"Error deleting report directory.\";","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_ERROR_CLONING \u003d","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"            \"Exception met while trying to clone the repo \\\"%s\\\", will skip this repo.\";","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_ERROR_GETTING_BRANCH \u003d","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \"Exception met while trying to get current branch of %s (%s), will skip this repo.\";","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final int MAX_NO_OF_REPOS \u003d 2;","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(RepoCloner.class);","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final boolean DEFAULT_IS_FRESH_CLONE_FOR_TEST_REQUIRED \u003d false;","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private RepoConfiguration[] configs \u003d new RepoConfiguration[MAX_NO_OF_REPOS];","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private int currentIndex \u003d 0;","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private int previousIndex \u003d 0;","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private boolean isCurrentRepoCloned \u003d false;","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private String currentRepoDefaultBranch;","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private CommandRunnerProcess crp;","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Spawns a process to clone the bare repository specified by {@code config}.","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Does not wait for process to finish executing.","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void cloneBare(RepoConfiguration config) {","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"        cloneBare(config, DEFAULT_IS_FRESH_CLONE_FOR_TEST_REQUIRED);","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Spawns a process to clone the bare repository specified by {@code config}.","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Does not wait for process to finish executing.","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * For test environments, cloning is skipped if it has been done before and {@code shouldFreshClone} is false.","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void cloneBare(RepoConfiguration config, boolean shouldFreshClone) {","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"        configs[currentIndex] \u003d config;","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!config.isShallowCloningPerformed()) {","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"            isCurrentRepoCloned \u003d spawnCloneProcess(config, shouldFreshClone);","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"        } else {","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"            boolean didShallowPartialCloneSucceed \u003d","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"                    spawnShallowPartialCloneProcess(config, shouldFreshClone);","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"            String shallowPartialBareRoot \u003d FileUtil.getShallowPartialBareRepoPath(config).toString();","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"            if (!didShallowPartialCloneSucceed || GitRevList.checkIsEmptyRepo(shallowPartialBareRoot)) {","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"                isCurrentRepoCloned \u003d spawnCloneProcess(config, shouldFreshClone);","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"                return;","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"-"},"content":"            List\u003cString\u003e graftedCommits \u003d GitRevList.getRootCommits(shallowPartialBareRoot);","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"            List\u003cString\u003e graftedCommitParents \u003d GitCatFile.getParentsOfCommits(shallowPartialBareRoot, graftedCommits);","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"            boolean didPartialCloneSucceed \u003d spawnPartialCloneProcess(config, shouldFreshClone);","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"            if (!didPartialCloneSucceed) {","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"                isCurrentRepoCloned \u003d spawnCloneProcess(config, shouldFreshClone);","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"-"},"content":"                return;","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"            String partialBareRoot \u003d FileUtil.getPartialBareRepoPath(config).toString();","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"-"},"content":"            LocalDateTime sinceDate;","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"            try {","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"                List\u003cString\u003e distinctParents \u003d graftedCommitParents.stream().distinct().collect(Collectors.toList());","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"                sinceDate \u003d GitShow.getEarliestCommitDate(partialBareRoot, distinctParents);","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"-"},"content":"            } catch (CommitNotFoundException e) {","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"                sinceDate \u003d null;","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"-"},"content":"            isCurrentRepoCloned \u003d (sinceDate !\u003d null)","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"-"},"content":"                    ? spawnShallowCloneProcess(config, sinceDate, shouldFreshClone)","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"-"},"content":"                    : spawnCloneProcess(config, shouldFreshClone);","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Waits for current clone process to finish executing and returns the {@link RepoLocation} of the corresponding","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * {@link RepoConfiguration}.","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public RepoLocation getClonedRepoLocation() {","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (isCurrentRepoCloned) {","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"-"},"content":"            isCurrentRepoCloned \u003d waitForCloneProcess(configs[currentIndex]);","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!isCurrentRepoCloned) {","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"-"},"content":"            deleteDirectory(configs[currentIndex].getRepoRoot());","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return null;","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String bareRepoPath \u003d FileUtil.getBareRepoPath(configs[currentIndex]).toString();","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"-"},"content":"            currentRepoDefaultBranch \u003d GitBranch.getCurrentBranch(bareRepoPath);","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"-"},"content":"        } catch (GitBranchException gbe) {","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"-"},"content":"            // GitBranch will throw this exception when repository is empty","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"-"},"content":"            logger.log(Level.WARNING, String.format(MESSAGE_ERROR_GETTING_BRANCH,","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"-"},"content":"                    configs[currentIndex].getLocation(), configs[currentIndex].getBranch()), gbe);","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return null;","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"-"},"content":"        cleanupPrevRepoFolder();","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"-"},"content":"        previousIndex \u003d currentIndex;","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"-"},"content":"        currentIndex \u003d (currentIndex + 1) % configs.length;","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return configs[previousIndex].getLocation();","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Cleans up data associated with a particular repo given by {@code config}.","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void cleanupRepo(RepoConfiguration config) {","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"-"},"content":"        deleteDirectory(getRepoParentFolder(config).toString());","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Cleans up after all repos have been cloned and analyzed.","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void cleanup() {","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"-"},"content":"        deleteDirectory(FileUtil.REPOS_ADDRESS);","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Spawns a process to clone repo specified in {@code config}. Does not wait for process to finish executing.","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Should only handle a maximum of one spawned process at any time.","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * For test environments, cloning is skipped if it has been done before and {@code shouldFreshClone} is false.","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private boolean spawnCloneProcess(RepoConfiguration config, boolean shouldFreshClone) {","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assert(crp \u003d\u003d null);","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"-"},"content":"        try {","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"-"},"content":"            if (!SystemUtil.isTestEnvironment()) {","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"-"},"content":"                FileUtil.deleteDirectory(FileUtil.getBareRepoPath(config).toString());","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"-"},"content":"            Path repoDirectoryPath \u003d getRepoParentFolder(config);","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"-"},"content":"            Path repoPath \u003d Paths.get(repoDirectoryPath.toString(), config.getRepoName());","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"-"},"content":"            if (SystemUtil.isTestEnvironment() \u0026\u0026 Files.exists(repoPath) \u0026\u0026 !shouldFreshClone) {","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"-"},"content":"                logger.info(\"Skipped cloning from \" + config.getLocation()","isFullCredit":true},{"lineNumber":179,"author":{"gitId":"-"},"content":"                        + \" as it was cloned before and cloning is not forced.\");","isFullCredit":true},{"lineNumber":180,"author":{"gitId":"-"},"content":"                return true;","isFullCredit":true},{"lineNumber":181,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":182,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":183,"author":{"gitId":"-"},"content":"            Files.createDirectories(repoDirectoryPath);","isFullCredit":true},{"lineNumber":184,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.info(String.format(MESSAGE_START_CLONING, config.getLocation()));","isFullCredit":true},{"lineNumber":186,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":187,"author":{"gitId":"-"},"content":"            Path outputDirectory \u003d Paths.get(repoDirectoryPath.toString(),","isFullCredit":true},{"lineNumber":188,"author":{"gitId":"-"},"content":"                    FileUtil.getBareRepoFolderName(config));","isFullCredit":true},{"lineNumber":189,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":190,"author":{"gitId":"-"},"content":"            crp \u003d GitClone.cloneBareAsync(config, Paths.get(\".\"), outputDirectory.toString());","isFullCredit":true},{"lineNumber":191,"author":{"gitId":"-"},"content":"        } catch (GitCloneException | IOException e) {","isFullCredit":true},{"lineNumber":192,"author":{"gitId":"-"},"content":"            logger.log(Level.WARNING, String.format(MESSAGE_ERROR_CLONING, config.getDisplayName()), e);","isFullCredit":true},{"lineNumber":193,"author":{"gitId":"yong24s"},"content":"            return false;","isFullCredit":true},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return true;","isFullCredit":true},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":197,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * Spawns a process to shallow clone repo specified in {@code config} based on {@code shallowSinceDate}.","isFullCredit":true},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Does not wait for process to finish executing.","isFullCredit":true},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * Should only handle a maximum of one spawned process at any time.","isFullCredit":true},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * For test environments, cloning is skipped if it has been done before and {@code shouldFreshClone} is false.","isFullCredit":true},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":204,"author":{"gitId":"-"},"content":"    private boolean spawnShallowCloneProcess(RepoConfiguration config, LocalDateTime shallowSinceDate,","isFullCredit":true},{"lineNumber":205,"author":{"gitId":"-"},"content":"            boolean shouldFreshClone) {","isFullCredit":true},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assert(crp \u003d\u003d null);","isFullCredit":true},{"lineNumber":207,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":208,"author":{"gitId":"-"},"content":"        try {","isFullCredit":true},{"lineNumber":209,"author":{"gitId":"-"},"content":"            if (!SystemUtil.isTestEnvironment()) {","isFullCredit":true},{"lineNumber":210,"author":{"gitId":"-"},"content":"                FileUtil.deleteDirectory(FileUtil.getBareRepoPath(config).toString());","isFullCredit":true},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":212,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":213,"author":{"gitId":"-"},"content":"            Path repoDirectoryPath \u003d getRepoParentFolder(config);","isFullCredit":true},{"lineNumber":214,"author":{"gitId":"-"},"content":"            Path repoPath \u003d Paths.get(repoDirectoryPath.toString(), config.getRepoName());","isFullCredit":true},{"lineNumber":215,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":216,"author":{"gitId":"-"},"content":"            if (SystemUtil.isTestEnvironment() \u0026\u0026 Files.exists(repoPath) \u0026\u0026 !shouldFreshClone) {","isFullCredit":true},{"lineNumber":217,"author":{"gitId":"-"},"content":"                logger.info(\"Skipped cloning from \" + config.getLocation()","isFullCredit":true},{"lineNumber":218,"author":{"gitId":"-"},"content":"                        + \" as it was cloned before and cloning is not forced.\");","isFullCredit":true},{"lineNumber":219,"author":{"gitId":"-"},"content":"                return true;","isFullCredit":true},{"lineNumber":220,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":221,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":222,"author":{"gitId":"-"},"content":"            Files.createDirectories(repoDirectoryPath);","isFullCredit":true},{"lineNumber":223,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":224,"author":{"gitId":"-"},"content":"            Path outputDirectory \u003d Paths.get(repoDirectoryPath.toString(),","isFullCredit":true},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    FileUtil.getBareRepoFolderName(config));","isFullCredit":true},{"lineNumber":226,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":227,"author":{"gitId":"-"},"content":"            logger.info(String.format(MESSAGE_START_CLONING_SHALLOW, config.getLocation()));","isFullCredit":true},{"lineNumber":228,"author":{"gitId":"-"},"content":"            crp \u003d GitClone.cloneShallowBareAsync(config, Paths.get(\".\"), outputDirectory.toString(),","isFullCredit":true},{"lineNumber":229,"author":{"gitId":"-"},"content":"                    shallowSinceDate);","isFullCredit":true},{"lineNumber":230,"author":{"gitId":"-"},"content":"        } catch (GitCloneException | IOException e) {","isFullCredit":true},{"lineNumber":231,"author":{"gitId":"-"},"content":"            logger.log(Level.WARNING, String.format(MESSAGE_ERROR_CLONING_SHALLOW, config.getDisplayName()), e);","isFullCredit":true},{"lineNumber":232,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":true},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":234,"author":{"gitId":"-"},"content":"        return true;","isFullCredit":true},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":236,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":237,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":238,"author":{"gitId":"-"},"content":"     * Spawns a process to create partial clone of repo specified in {@code config}.","isFullCredit":true},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * Waits for process to finish executing.","isFullCredit":true},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * For test environments, cloning is skipped if it has been done before and {@code shouldFreshClone} is false.","isFullCredit":true},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":242,"author":{"gitId":"-"},"content":"    private boolean spawnPartialCloneProcess(RepoConfiguration config, boolean shouldFreshClone) {","isFullCredit":true},{"lineNumber":243,"author":{"gitId":"-"},"content":"        assert(crp \u003d\u003d null);","isFullCredit":true},{"lineNumber":244,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":245,"author":{"gitId":"-"},"content":"        try {","isFullCredit":true},{"lineNumber":246,"author":{"gitId":"-"},"content":"            if (!SystemUtil.isTestEnvironment()) {","isFullCredit":true},{"lineNumber":247,"author":{"gitId":"-"},"content":"                FileUtil.deleteDirectory(FileUtil.getPartialBareRepoPath(config).toString());","isFullCredit":true},{"lineNumber":248,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":249,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":250,"author":{"gitId":"-"},"content":"            Path repoDirectoryPath \u003d getRepoParentFolder(config);","isFullCredit":true},{"lineNumber":251,"author":{"gitId":"-"},"content":"            Path repoPath \u003d Paths.get(repoDirectoryPath.toString(), config.getRepoName());","isFullCredit":true},{"lineNumber":252,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":253,"author":{"gitId":"-"},"content":"            if (SystemUtil.isTestEnvironment() \u0026\u0026 Files.exists(repoPath) \u0026\u0026 !shouldFreshClone) {","isFullCredit":true},{"lineNumber":254,"author":{"gitId":"-"},"content":"                logger.info(\"Skipped cloning from \" + config.getLocation()","isFullCredit":true},{"lineNumber":255,"author":{"gitId":"-"},"content":"                        + \" as it was cloned before and cloning is not forced.\");","isFullCredit":true},{"lineNumber":256,"author":{"gitId":"-"},"content":"                return true;","isFullCredit":true},{"lineNumber":257,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":258,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":259,"author":{"gitId":"-"},"content":"            Files.createDirectories(repoDirectoryPath);","isFullCredit":true},{"lineNumber":260,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":261,"author":{"gitId":"-"},"content":"            Path outputDirectory \u003d Paths.get(repoDirectoryPath.toString(),","isFullCredit":true},{"lineNumber":262,"author":{"gitId":"-"},"content":"                    FileUtil.getPartialBareRepoFolderName(config));","isFullCredit":true},{"lineNumber":263,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":264,"author":{"gitId":"-"},"content":"            logger.info(String.format(MESSAGE_START_CLONING_PARTIAL, config.getLocation()));","isFullCredit":true},{"lineNumber":265,"author":{"gitId":"-"},"content":"            GitClone.clonePartialBare(config, Paths.get(\".\"), outputDirectory.toString());","isFullCredit":true},{"lineNumber":266,"author":{"gitId":"-"},"content":"        } catch (GitCloneException | IOException e) {","isFullCredit":true},{"lineNumber":267,"author":{"gitId":"-"},"content":"            logger.log(Level.WARNING, String.format(MESSAGE_ERROR_CLONING_PARTIAL, config.getDisplayName()), e);","isFullCredit":true},{"lineNumber":268,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":true},{"lineNumber":269,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":270,"author":{"gitId":"-"},"content":"        return true;","isFullCredit":true},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":272,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":273,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":274,"author":{"gitId":"-"},"content":"     * Spawns a process to create shallow partial clone of repo specified in {@code config}.","isFullCredit":true},{"lineNumber":275,"author":{"gitId":"-"},"content":"     * Waits for process to finish executing.","isFullCredit":true},{"lineNumber":276,"author":{"gitId":"-"},"content":"     * For test environments, cloning is skipped if it has been done before and {@code shouldFreshClone} is false.","isFullCredit":true},{"lineNumber":277,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":278,"author":{"gitId":"-"},"content":"    private boolean spawnShallowPartialCloneProcess(RepoConfiguration config, boolean shouldFreshClone) {","isFullCredit":true},{"lineNumber":279,"author":{"gitId":"-"},"content":"        assert(crp \u003d\u003d null);","isFullCredit":true},{"lineNumber":280,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":281,"author":{"gitId":"-"},"content":"        try {","isFullCredit":true},{"lineNumber":282,"author":{"gitId":"-"},"content":"            if (!SystemUtil.isTestEnvironment()) {","isFullCredit":true},{"lineNumber":283,"author":{"gitId":"-"},"content":"                FileUtil.deleteDirectory(FileUtil.getShallowPartialBareRepoPath(config).toString());","isFullCredit":true},{"lineNumber":284,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":285,"author":{"gitId":"-"},"content":"            Path repoDirectoryPath \u003d getRepoParentFolder(config);","isFullCredit":true},{"lineNumber":286,"author":{"gitId":"-"},"content":"            Path repoPath \u003d Paths.get(repoDirectoryPath.toString(), config.getRepoName());","isFullCredit":true},{"lineNumber":287,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":288,"author":{"gitId":"-"},"content":"            if (SystemUtil.isTestEnvironment() \u0026\u0026 Files.exists(repoPath) \u0026\u0026 !shouldFreshClone) {","isFullCredit":true},{"lineNumber":289,"author":{"gitId":"-"},"content":"                logger.info(\"Skipped cloning from \" + config.getLocation()","isFullCredit":true},{"lineNumber":290,"author":{"gitId":"-"},"content":"                        + \" as it was cloned before and cloning is not forced.\");","isFullCredit":true},{"lineNumber":291,"author":{"gitId":"-"},"content":"                return true;","isFullCredit":true},{"lineNumber":292,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":293,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":294,"author":{"gitId":"-"},"content":"            Files.createDirectories(repoDirectoryPath);","isFullCredit":true},{"lineNumber":295,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":296,"author":{"gitId":"-"},"content":"            Path outputDirectory \u003d Paths.get(repoDirectoryPath.toString(),","isFullCredit":true},{"lineNumber":297,"author":{"gitId":"-"},"content":"                    FileUtil.getShallowPartialBareRepoFolderName(config));","isFullCredit":true},{"lineNumber":298,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":299,"author":{"gitId":"-"},"content":"            logger.info(String.format(MESSAGE_START_CLONING_SHALLOW_PARTIAL, config.getLocation()));","isFullCredit":true},{"lineNumber":300,"author":{"gitId":"-"},"content":"            GitClone.cloneShallowPartialBare(config, Paths.get(\".\"), outputDirectory.toString(),","isFullCredit":true},{"lineNumber":301,"author":{"gitId":"-"},"content":"                    config.getSinceDate());","isFullCredit":true},{"lineNumber":302,"author":{"gitId":"-"},"content":"        } catch (GitCloneException | IOException e) {","isFullCredit":true},{"lineNumber":303,"author":{"gitId":"-"},"content":"            logger.log(Level.WARNING, String.format(MESSAGE_ERROR_CLONING_SHALLOW_PARTIAL, config.getDisplayName()), e);","isFullCredit":true},{"lineNumber":304,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":true},{"lineNumber":305,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":306,"author":{"gitId":"-"},"content":"        return true;","isFullCredit":true},{"lineNumber":307,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":308,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":309,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":310,"author":{"gitId":"-"},"content":"     * Waits for previously spawned clone process to finish executing. Uses {@code config} to find the locations of","isFullCredit":true},{"lineNumber":311,"author":{"gitId":"-"},"content":"     * both the original and cloned repo as well as repo name.","isFullCredit":true},{"lineNumber":312,"author":{"gitId":"-"},"content":"     * Should only be called after {@code spawnCloneProcess} has been called.","isFullCredit":true},{"lineNumber":313,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":314,"author":{"gitId":"-"},"content":"    private boolean waitForCloneProcess(RepoConfiguration config) {","isFullCredit":true},{"lineNumber":315,"author":{"gitId":"-"},"content":"        try {","isFullCredit":true},{"lineNumber":316,"author":{"gitId":"-"},"content":"            Path repoPath \u003d Paths.get(FileUtil.REPOS_ADDRESS, config.getRepoFolderName(), config.getRepoName());","isFullCredit":true},{"lineNumber":317,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":318,"author":{"gitId":"-"},"content":"            if (SystemUtil.isTestEnvironment() \u0026\u0026 Files.exists(repoPath)) {","isFullCredit":true},{"lineNumber":319,"author":{"gitId":"-"},"content":"                return true;","isFullCredit":true},{"lineNumber":320,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":321,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":322,"author":{"gitId":"-"},"content":"            logger.info(String.format(MESSAGE_WAITING_FOR_CLONING, config.getLocation()));","isFullCredit":true},{"lineNumber":323,"author":{"gitId":"-"},"content":"            crp.waitForProcess();","isFullCredit":true},{"lineNumber":324,"author":{"gitId":"-"},"content":"            logger.info(String.format(MESSAGE_COMPLETE_CLONING, config.getLocation()));","isFullCredit":true},{"lineNumber":325,"author":{"gitId":"-"},"content":"        } catch (RuntimeException | CommandRunnerProcessException e) {","isFullCredit":true},{"lineNumber":326,"author":{"gitId":"-"},"content":"            crp \u003d null;","isFullCredit":true},{"lineNumber":327,"author":{"gitId":"-"},"content":"            logger.log(Level.WARNING, String.format(MESSAGE_ERROR_CLONING, config.getDisplayName()), e);","isFullCredit":true},{"lineNumber":328,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":true},{"lineNumber":329,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":330,"author":{"gitId":"-"},"content":"        crp \u003d null;","isFullCredit":true},{"lineNumber":331,"author":{"gitId":"-"},"content":"        return true;","isFullCredit":true},{"lineNumber":332,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":333,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":334,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":335,"author":{"gitId":"-"},"content":"     * Deletes previously cloned repo directories that are not in use anymore.","isFullCredit":true},{"lineNumber":336,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":337,"author":{"gitId":"-"},"content":"    private void cleanupPrevRepoFolder() {","isFullCredit":true},{"lineNumber":338,"author":{"gitId":"-"},"content":"        if (previousIndex !\u003d currentIndex) {","isFullCredit":true},{"lineNumber":339,"author":{"gitId":"-"},"content":"            deleteDirectory(configs[previousIndex].getRepoRoot());","isFullCredit":true},{"lineNumber":340,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":341,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":342,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":343,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":344,"author":{"gitId":"-"},"content":"     * Deletes the {@code root} directory, unless RepoSense is currently being tested.","isFullCredit":true},{"lineNumber":345,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":346,"author":{"gitId":"-"},"content":"    private void deleteDirectory(String root) {","isFullCredit":true},{"lineNumber":347,"author":{"gitId":"-"},"content":"        if (SystemUtil.isTestEnvironment()) {","isFullCredit":true},{"lineNumber":348,"author":{"gitId":"-"},"content":"            return;","isFullCredit":true},{"lineNumber":349,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":350,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":351,"author":{"gitId":"-"},"content":"        try {","isFullCredit":true},{"lineNumber":352,"author":{"gitId":"-"},"content":"            FileUtil.deleteDirectory(root);","isFullCredit":true},{"lineNumber":353,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","isFullCredit":true},{"lineNumber":354,"author":{"gitId":"-"},"content":"            logger.log(Level.WARNING, MESSAGE_ERROR_DELETING_DIRECTORY, ioe);","isFullCredit":true},{"lineNumber":355,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":356,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":357,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":358,"author":{"gitId":"-"},"content":"    public String getCurrentRepoDefaultBranch() {","isFullCredit":true},{"lineNumber":359,"author":{"gitId":"-"},"content":"        return currentRepoDefaultBranch;","isFullCredit":true},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":361,"author":{"gitId":"-"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yong24s":1,"-":360}},{"path":"src/main/java/reposense/report/ReportGenerator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yamidark"},"content":"package reposense.report;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"yamidark"},"content":"import java.io.IOException;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"yong24s"},"content":"import java.io.InputStream;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"yamidark"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"yamidark"},"content":"import java.nio.file.Paths;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.time.ZoneId;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"yamidark"},"content":"import java.util.Collections;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashMap;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Iterator;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"yamidark"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Map;","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Optional;","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.concurrent.CompletableFuture;","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.concurrent.ExecutorService;","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.concurrent.Executors;","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.function.Supplier;","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"yamidark"},"content":"import java.util.logging.Level;","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"yamidark"},"content":"import java.util.logging.Logger;","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"import com.google.gson.JsonSyntaxException;","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"import reposense.RepoSense;","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"yamidark"},"content":"import reposense.authorship.AuthorshipReporter;","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"yamidark"},"content":"import reposense.authorship.model.AuthorshipSummary;","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"yamidark"},"content":"import reposense.commits.CommitsReporter;","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"yamidark"},"content":"import reposense.commits.model.CommitContributionSummary;","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"import reposense.git.GitBlame;","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"import reposense.git.GitClone;","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"import reposense.git.GitRevParse;","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"eugenepeh"},"content":"import reposense.git.GitShortlog;","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"import reposense.git.GitShow;","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"import reposense.git.exception.CommitNotFoundException;","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"import reposense.git.exception.GitBranchException;","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"import reposense.git.exception.GitCloneException;","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"eugenepeh"},"content":"import reposense.model.Author;","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"yamidark"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"import reposense.model.ReportConfiguration;","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"import reposense.model.StandaloneConfig;","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"import reposense.parser.StandaloneConfigJsonParser;","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"jamessspanggg"},"content":"import reposense.report.exception.NoAuthorsWithCommitsFoundException;","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"yamidark"},"content":"import reposense.system.LogsManager;","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"yamidark"},"content":"import reposense.util.FileUtil;","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"import reposense.util.ProgressTracker;","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"import reposense.util.TimeUtil;","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"/**","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":" * Contains report generation related functionalities.","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":" */","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"yamidark"},"content":"public class ReportGenerator {","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static final String REPOSENSE_CONFIG_FOLDER \u003d \"_reposense\";","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static final String REPOSENSE_CONFIG_FILE \u003d \"config.json\";","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"yamidark"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(ReportGenerator.class);","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"    // zip file which contains all the report template files","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"yong24s"},"content":"    private static final String TEMPLATE_FILE \u003d \"/templateZip.zip\";","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_CONFIG_JSON \u003d \"%s Ignoring the config provided by %s (%s).\";","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_ERROR_CREATING_DIRECTORY \u003d","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"            \"Error has occurred while creating repo directory for %s (%s), will skip this repo.\";","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_NO_STANDALONE_CONFIG \u003d \"%s (%s) does not contain a standalone config file.\";","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_IGNORING_STANDALONE_CONFIG \u003d \"Ignoring standalone config file in %s (%s).\";","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_MALFORMED_STANDALONE_CONFIG \u003d \"%s/%s/%s is malformed for %s (%s).\";","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_NO_AUTHORS_SPECIFIED \u003d","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \"%s (%s) has no authors specified, using all authors by default.\";","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"jamessspanggg"},"content":"    private static final String MESSAGE_NO_AUTHORS_WITH_COMMITS_FOUND \u003d","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"jamessspanggg"},"content":"            \"No authors found with commits for %s (%s).\";","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_START_ANALYSIS \u003d \"Analyzing %s (%s)...\";","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_COMPLETE_ANALYSIS \u003d \"Analysis of %s (%s) completed!\";","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_REPORT_GENERATED \u003d \"The report is generated at %s\";","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_BRANCH_DOES_NOT_EXIST \u003d \"Branch %s does not exist in %s! Analysis terminated.\";","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_MISSING_TEMPLATE \u003d","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"            \"Unable to find template file. Proceeding to generate report...\";","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private static final String LOG_ERROR_CLONING \u003d \"Failed to clone from %s\";","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static final String LOG_ERROR_EXPANDING_COMMIT \u003d \"Cannot expand %s, it shall remain unexpanded\";","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private static final String LOG_BRANCH_DOES_NOT_EXIST \u003d \"Branch \\\"%s\\\" does not exist.\";","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static final String LOG_ERROR_CLONING_OR_BRANCHING \u003d \"Exception met while cloning or checking out.\";","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static final String LOG_UNEXPECTED_ERROR \u003d \"Unexpected error stack trace for %s:\\n\u003e%s\";","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e assetsFilesWhiteList \u003d","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"            Collections.unmodifiableList(Arrays.asList(new String[] {\"favicon.ico\"}));","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private LocalDateTime earliestSinceDate \u003d null;","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private ProgressTracker progressTracker \u003d null;","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Generates the authorship and commits JSON file for each repo in {@code configs} at {@code outputPath}, as","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * well as the summary JSON file of all the repos.","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @param configs The list of repos to analyze.","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @param outputPath The location at which to save the report.","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @param assetsPath The location at which assets for generating the report are stored.","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @param reportConfig The config for the output report.","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @param generationDate The time at which the report was generated.","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param cliSinceDate The date-time from which to start analyzing commits.","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param untilDate The cut-off date-time for analyzing commits.","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param isSinceDateProvided The boolean variable for whether client provided a sinceDate.","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param isUntilDateProvided The boolean variable for whether client provided an untilDate.","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param numCloningThreads The number of threads to use to clone the repos.","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @param numAnalysisThreads The number of threads to use to analyze the repos.","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @param reportGenerationTimeProvider Supplier for time taken to generate the report.","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @param zoneId The timezone to adjust all date-times to.","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @param shouldFreshClone The boolean variable for whether to clone a repo again during tests.","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @return the list of file paths that were generated.","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @throws IOException if templateZip.zip does not exists in jar file.","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public List\u003cPath\u003e generateReposReport(List\u003cRepoConfiguration\u003e configs, String outputPath, String assetsPath,","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"            ReportConfiguration reportConfig, String generationDate, LocalDateTime cliSinceDate,","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"-"},"content":"            LocalDateTime untilDate, boolean isSinceDateProvided, boolean isUntilDateProvided, int numCloningThreads,","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"-"},"content":"            int numAnalysisThreads, Supplier\u003cString\u003e reportGenerationTimeProvider, ZoneId zoneId,","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"-"},"content":"            boolean shouldFreshClone) throws IOException {","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"-"},"content":"        prepareTemplateFile(outputPath);","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (Files.exists(Paths.get(assetsPath))) {","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"-"},"content":"            FileUtil.copyDirectoryContents(assetsPath, outputPath, assetsFilesWhiteList);","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"-"},"content":"        earliestSinceDate \u003d null;","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"-"},"content":"        progressTracker \u003d new ProgressTracker(configs.size());","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"-"},"content":"        List\u003cPath\u003e reportFoldersAndFiles \u003d cloneAndAnalyzeRepos(configs, outputPath,","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"-"},"content":"                numCloningThreads, numAnalysisThreads, shouldFreshClone);","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"-"},"content":"        LocalDateTime reportSinceDate \u003d (TimeUtil.isEqualToArbitraryFirstDateConverted(cliSinceDate, zoneId))","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"-"},"content":"                ? earliestSinceDate : cliSinceDate;","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Optional\u003cPath\u003e summaryPath \u003d FileUtil.writeJsonFile(","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"-"},"content":"                new SummaryJson(configs, reportConfig, generationDate,","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"-"},"content":"                        reportSinceDate, untilDate, isSinceDateProvided,","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"-"},"content":"                        isUntilDateProvided, RepoSense.getVersion(), ErrorSummary.getInstance().getErrorSet(),","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"-"},"content":"                        reportGenerationTimeProvider.get(), zoneId),","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"-"},"content":"                getSummaryResultPath(outputPath));","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"-"},"content":"        summaryPath.ifPresent(reportFoldersAndFiles::add);","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(String.format(MESSAGE_REPORT_GENERATED, outputPath));","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return reportFoldersAndFiles;","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Copies the template file to the specified {@code outputPath} for the repo report to be generated.","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @throws IOException if I/O error encountered while copying template file.","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private void prepareTemplateFile(String outputPath) throws IOException {","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"-"},"content":"        InputStream is \u003d RepoSense.class.getResourceAsStream(TEMPLATE_FILE);","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (is !\u003d null) {","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"-"},"content":"            FileUtil.copyTemplate(is, outputPath);","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"-"},"content":"        } else {","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"-"},"content":"            logger.warning(MESSAGE_MISSING_TEMPLATE);","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Groups {@link RepoConfiguration} with the same {@link RepoLocation} together so that they are only cloned once.","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private Map\u003cRepoLocation, List\u003cRepoConfiguration\u003e\u003e groupConfigsByRepoLocation(","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"-"},"content":"            List\u003cRepoConfiguration\u003e configs) {","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Map\u003cRepoLocation, List\u003cRepoConfiguration\u003e\u003e repoLocationMap \u003d new HashMap\u003c\u003e();","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"-"},"content":"        for (RepoConfiguration config : configs) {","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"-"},"content":"            RepoLocation location \u003d config.getLocation();","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"-"},"content":"            if (!repoLocationMap.containsKey(location)) {","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"-"},"content":"                repoLocationMap.put(location, new ArrayList\u003c\u003e());","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"-"},"content":"            repoLocationMap.get(location).add(config);","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return repoLocationMap;","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Clone, analyze and generate the report for repositories in {@code repoLocationMap}.","isFullCredit":true},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Performs cloning and analysis of each repository in parallel, and generates the report.","isFullCredit":true},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Also removes any configs that failed to clone or analyze from {@code configs}.","isFullCredit":true},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * By default, runs in multi-threaded mode with {@code numCloningThreads} threads for cloning","isFullCredit":true},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * and {@code numAnalysisThreads} threads for analysis.","isFullCredit":true},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * To turn off multi-threading, run the program with the flags","isFullCredit":true},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * {@code --cloning-threads 1 --analysis-threads 1}.","isFullCredit":true},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * For test environments, cloning is skipped if it has been done before and {@code shouldFreshClone} is false.","isFullCredit":true},{"lineNumber":188,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * @return A list of paths to the JSON report files generated for each repository.","isFullCredit":true},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":191,"author":{"gitId":"-"},"content":"    private List\u003cPath\u003e cloneAndAnalyzeRepos(List\u003cRepoConfiguration\u003e configs, String outputPath,","isFullCredit":true},{"lineNumber":192,"author":{"gitId":"-"},"content":"            int numCloningThreads, int numAnalysisThreads, boolean shouldFreshClone) {","isFullCredit":true},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Map\u003cRepoLocation, List\u003cRepoConfiguration\u003e\u003e repoLocationMap \u003d groupConfigsByRepoLocation(configs);","isFullCredit":true},{"lineNumber":194,"author":{"gitId":"-"},"content":"        List\u003cRepoLocation\u003e repoLocationList \u003d new ArrayList\u003c\u003e(repoLocationMap.keySet());","isFullCredit":true},{"lineNumber":195,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // Fixed thread pools are used to limit the number of threads used by cloning and analysis jobs at any one time","isFullCredit":true},{"lineNumber":197,"author":{"gitId":"-"},"content":"        ExecutorService cloneExecutor \u003d Executors.newFixedThreadPool(numCloningThreads);","isFullCredit":true},{"lineNumber":198,"author":{"gitId":"-"},"content":"        ExecutorService analyzeExecutor \u003d Executors.newFixedThreadPool(numAnalysisThreads);","isFullCredit":true},{"lineNumber":199,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":200,"author":{"gitId":"-"},"content":"        List\u003cCompletableFuture\u003cAnalyzeJobOutput\u003e\u003e analyzeJobFutures \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":201,"author":{"gitId":"-"},"content":"        for (RepoLocation location : repoLocationList) {","isFullCredit":true},{"lineNumber":202,"author":{"gitId":"-"},"content":"            List\u003cRepoConfiguration\u003e configsToAnalyze \u003d repoLocationMap.get(location);","isFullCredit":true},{"lineNumber":203,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":204,"author":{"gitId":"-"},"content":"            // The `CompletableFuture.supplyAsync` method is used to clone the repo in parallel.","isFullCredit":true},{"lineNumber":205,"author":{"gitId":"-"},"content":"            // Note that the `cloneExecutor` is passed as a parameter to ensure that the number of threads used","isFullCredit":true},{"lineNumber":206,"author":{"gitId":"-"},"content":"            // for cloning is no more than `numCloningThreads`.","isFullCredit":true},{"lineNumber":207,"author":{"gitId":"-"},"content":"            CompletableFuture\u003cCloneJobOutput\u003e cloneFuture \u003d CompletableFuture.supplyAsync(() -\u003e","isFullCredit":true},{"lineNumber":208,"author":{"gitId":"-"},"content":"                    cloneRepo(configsToAnalyze.get(0), location, shouldFreshClone), cloneExecutor);","isFullCredit":true},{"lineNumber":209,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":210,"author":{"gitId":"-"},"content":"            // The `thenApplyAsync` method is used to analyze the cloned repo in parallel.","isFullCredit":true},{"lineNumber":211,"author":{"gitId":"-"},"content":"            // This ensures that the analysis job for each repo will only be run after the repo has been cloned.","isFullCredit":true},{"lineNumber":212,"author":{"gitId":"-"},"content":"            // Note that the `analyzeExecutor` is passed as a parameter to ensure that the number of threads used","isFullCredit":true},{"lineNumber":213,"author":{"gitId":"-"},"content":"            // for analysis is no more than `numAnalysisThreads`.","isFullCredit":true},{"lineNumber":214,"author":{"gitId":"-"},"content":"            CompletableFuture\u003cAnalyzeJobOutput\u003e analyzeFuture \u003d cloneFuture.thenApplyAsync(","isFullCredit":true},{"lineNumber":215,"author":{"gitId":"-"},"content":"                    cloneJobOutput -\u003e analyzeRepos(outputPath, configsToAnalyze, cloneJobOutput), analyzeExecutor);","isFullCredit":true},{"lineNumber":216,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":217,"author":{"gitId":"-"},"content":"            analyzeJobFutures.add(analyzeFuture);","isFullCredit":true},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":219,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":220,"author":{"gitId":"-"},"content":"        // Next, we collect the list of outputs from all the analyze jobs","isFullCredit":true},{"lineNumber":221,"author":{"gitId":"-"},"content":"        List\u003cAnalyzeJobOutput\u003e jobOutputs \u003d analyzeJobFutures.stream()","isFullCredit":true},{"lineNumber":222,"author":{"gitId":"-"},"content":"                .map(CompletableFuture::join)","isFullCredit":true},{"lineNumber":223,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","isFullCredit":true},{"lineNumber":224,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":225,"author":{"gitId":"-"},"content":"        // Finally, the ExecutorService objects are shut down to prevent memory leaks","isFullCredit":true},{"lineNumber":226,"author":{"gitId":"-"},"content":"        cloneExecutor.shutdown();","isFullCredit":true},{"lineNumber":227,"author":{"gitId":"-"},"content":"        analyzeExecutor.shutdown();","isFullCredit":true},{"lineNumber":228,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":229,"author":{"gitId":"-"},"content":"        List\u003cPath\u003e generatedFiles \u003d jobOutputs","isFullCredit":true},{"lineNumber":230,"author":{"gitId":"-"},"content":"                .stream()","isFullCredit":true},{"lineNumber":231,"author":{"gitId":"-"},"content":"                .flatMap(jobOutput -\u003e jobOutput.getFiles().stream())","isFullCredit":true},{"lineNumber":232,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","isFullCredit":true},{"lineNumber":233,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":234,"author":{"gitId":"-"},"content":"        List\u003cRepoLocation\u003e cloneFailLocations \u003d jobOutputs","isFullCredit":true},{"lineNumber":235,"author":{"gitId":"-"},"content":"                .stream()","isFullCredit":true},{"lineNumber":236,"author":{"gitId":"-"},"content":"                .filter(jobOutput -\u003e !jobOutput.isCloneSuccessful())","isFullCredit":true},{"lineNumber":237,"author":{"gitId":"-"},"content":"                .map(jobOutput -\u003e jobOutput.getLocation())","isFullCredit":true},{"lineNumber":238,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","isFullCredit":true},{"lineNumber":239,"author":{"gitId":"-"},"content":"        cloneFailLocations.forEach(location -\u003e handleCloningFailed(configs, location));","isFullCredit":true},{"lineNumber":240,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":241,"author":{"gitId":"-"},"content":"        List\u003cAnalysisErrorInfo\u003e analysisErrors \u003d jobOutputs","isFullCredit":true},{"lineNumber":242,"author":{"gitId":"-"},"content":"                .stream()","isFullCredit":true},{"lineNumber":243,"author":{"gitId":"-"},"content":"                .flatMap(jobOutput -\u003e jobOutput.getAnalyseErrors().stream())","isFullCredit":true},{"lineNumber":244,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","isFullCredit":true},{"lineNumber":245,"author":{"gitId":"-"},"content":"        analysisErrors.forEach(errorInfo -\u003e","isFullCredit":true},{"lineNumber":246,"author":{"gitId":"-"},"content":"                handleAnalysisFailed(configs, errorInfo.getFailedConfig(), errorInfo.getErrorMessage()));","isFullCredit":true},{"lineNumber":247,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":248,"author":{"gitId":"-"},"content":"        RepoCloner repoCloner \u003d new RepoCloner();","isFullCredit":true},{"lineNumber":249,"author":{"gitId":"-"},"content":"        repoCloner.cleanup();","isFullCredit":true},{"lineNumber":250,"author":{"gitId":"-"},"content":"        return generatedFiles;","isFullCredit":true},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":252,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":253,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":254,"author":{"gitId":"-"},"content":"     * Clones repo specified by {@code config} at {@code location}.","isFullCredit":true},{"lineNumber":255,"author":{"gitId":"-"},"content":"     * For test environments, cloning is skipped if it has been done before and {@code shouldFreshClone} is false.","isFullCredit":true},{"lineNumber":256,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":257,"author":{"gitId":"-"},"content":"     * @return A {@link CloneJobOutput} object comprising the {@code location} of the repo, whether the cloning was","isFullCredit":true},{"lineNumber":258,"author":{"gitId":"-"},"content":"     * successful, and the {@code defaultBranch} of the repo.","isFullCredit":true},{"lineNumber":259,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":260,"author":{"gitId":"-"},"content":"    private CloneJobOutput cloneRepo(RepoConfiguration config, RepoLocation location, boolean shouldFreshClone) {","isFullCredit":true},{"lineNumber":261,"author":{"gitId":"-"},"content":"        RepoCloner repoCloner \u003d new RepoCloner();","isFullCredit":true},{"lineNumber":262,"author":{"gitId":"-"},"content":"        repoCloner.cloneBare(config, shouldFreshClone);","isFullCredit":true},{"lineNumber":263,"author":{"gitId":"-"},"content":"        RepoLocation clonedRepoLocation \u003d repoCloner.getClonedRepoLocation();","isFullCredit":true},{"lineNumber":264,"author":{"gitId":"-"},"content":"        if (clonedRepoLocation !\u003d null) {","isFullCredit":true},{"lineNumber":265,"author":{"gitId":"-"},"content":"            String defaultBranch \u003d repoCloner.getCurrentRepoDefaultBranch();","isFullCredit":true},{"lineNumber":266,"author":{"gitId":"-"},"content":"            return new CloneJobOutput(location, defaultBranch);","isFullCredit":true},{"lineNumber":267,"author":{"gitId":"-"},"content":"        } else {","isFullCredit":true},{"lineNumber":268,"author":{"gitId":"-"},"content":"            return new CloneJobOutput(location);","isFullCredit":true},{"lineNumber":269,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":270,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":271,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":272,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":273,"author":{"gitId":"-"},"content":"     * Analyzes all repos in {@code configsToAnalyze} and generates their report at {@code outputPath}.","isFullCredit":true},{"lineNumber":274,"author":{"gitId":"-"},"content":"     * Uses {@code cloneJobOutput} to find repo location, default branch and whether cloning was successful.","isFullCredit":true},{"lineNumber":275,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":276,"author":{"gitId":"-"},"content":"     * @return An {@link AnalyzeJobOutput} object comprising the {@code location} of the repo, whether the cloning was","isFullCredit":true},{"lineNumber":277,"author":{"gitId":"-"},"content":"     * successful, the list of {@code generatedFiles} by the analysis and a list of {@code analysisErrors} encountered.","isFullCredit":true},{"lineNumber":278,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":279,"author":{"gitId":"-"},"content":"    private AnalyzeJobOutput analyzeRepos(String outputPath, List\u003cRepoConfiguration\u003e configsToAnalyze,","isFullCredit":true},{"lineNumber":280,"author":{"gitId":"-"},"content":"            CloneJobOutput cloneJobOutput) {","isFullCredit":true},{"lineNumber":281,"author":{"gitId":"-"},"content":"        RepoLocation location \u003d cloneJobOutput.getLocation();","isFullCredit":true},{"lineNumber":282,"author":{"gitId":"-"},"content":"        boolean cloneSuccessful \u003d cloneJobOutput.isCloneSuccessful();","isFullCredit":true},{"lineNumber":283,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":284,"author":{"gitId":"-"},"content":"        List\u003cPath\u003e generatedFiles \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":285,"author":{"gitId":"-"},"content":"        List\u003cAnalysisErrorInfo\u003e analysisErrors \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":286,"author":{"gitId":"-"},"content":"        RepoCloner repoCloner \u003d new RepoCloner();","isFullCredit":true},{"lineNumber":287,"author":{"gitId":"-"},"content":"        if (!cloneSuccessful) {","isFullCredit":true},{"lineNumber":288,"author":{"gitId":"-"},"content":"            repoCloner.cleanupRepo(configsToAnalyze.get(0));","isFullCredit":true},{"lineNumber":289,"author":{"gitId":"-"},"content":"            return new AnalyzeJobOutput(location, cloneSuccessful, generatedFiles, analysisErrors);","isFullCredit":true},{"lineNumber":290,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":291,"author":{"gitId":"-"},"content":"        Iterator\u003cRepoConfiguration\u003e itr \u003d configsToAnalyze.iterator();","isFullCredit":true},{"lineNumber":292,"author":{"gitId":"-"},"content":"        while (itr.hasNext()) {","isFullCredit":true},{"lineNumber":293,"author":{"gitId":"-"},"content":"            progressTracker.incrementProgress();","isFullCredit":true},{"lineNumber":294,"author":{"gitId":"-"},"content":"            RepoConfiguration configToAnalyze \u003d itr.next();","isFullCredit":true},{"lineNumber":295,"author":{"gitId":"-"},"content":"            configToAnalyze.updateBranch(cloneJobOutput.getDefaultBranch());","isFullCredit":true},{"lineNumber":296,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":297,"author":{"gitId":"-"},"content":"            Path repoReportDirectory \u003d Paths.get(outputPath, configToAnalyze.getOutputFolderName());","isFullCredit":true},{"lineNumber":298,"author":{"gitId":"-"},"content":"            logger.info(","isFullCredit":true},{"lineNumber":299,"author":{"gitId":"-"},"content":"                    String.format(progressTracker.getProgress() + \" \"","isFullCredit":true},{"lineNumber":300,"author":{"gitId":"-"},"content":"                            + MESSAGE_START_ANALYSIS, configToAnalyze.getLocation(), configToAnalyze.getBranch()));","isFullCredit":true},{"lineNumber":301,"author":{"gitId":"yamidark"},"content":"            try {","isFullCredit":true},{"lineNumber":302,"author":{"gitId":"-"},"content":"                GitRevParse.assertBranchExists(configToAnalyze, FileUtil.getBareRepoPath(configToAnalyze));","isFullCredit":true},{"lineNumber":303,"author":{"gitId":"-"},"content":"                GitClone.cloneFromBareAndUpdateBranch(Paths.get(\".\"), configToAnalyze);","isFullCredit":true},{"lineNumber":304,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":305,"author":{"gitId":"-"},"content":"                FileUtil.createDirectory(repoReportDirectory);","isFullCredit":true},{"lineNumber":306,"author":{"gitId":"-"},"content":"                generatedFiles.addAll(analyzeRepo(configToAnalyze, repoReportDirectory.toString()));","isFullCredit":true},{"lineNumber":307,"author":{"gitId":"yamidark"},"content":"            } catch (IOException ioe) {","isFullCredit":true},{"lineNumber":308,"author":{"gitId":"-"},"content":"                String logMessage \u003d String.format(MESSAGE_ERROR_CREATING_DIRECTORY,","isFullCredit":true},{"lineNumber":309,"author":{"gitId":"-"},"content":"                        configToAnalyze.getLocation(), configToAnalyze.getBranch());","isFullCredit":true},{"lineNumber":310,"author":{"gitId":"-"},"content":"                logger.log(Level.WARNING, logMessage, ioe);","isFullCredit":true},{"lineNumber":311,"author":{"gitId":"-"},"content":"            } catch (GitBranchException gbe) {","isFullCredit":true},{"lineNumber":312,"author":{"gitId":"-"},"content":"                logger.log(Level.SEVERE, String.format(MESSAGE_BRANCH_DOES_NOT_EXIST,","isFullCredit":true},{"lineNumber":313,"author":{"gitId":"-"},"content":"                        configToAnalyze.getBranch(), configToAnalyze.getLocation()), gbe);","isFullCredit":true},{"lineNumber":314,"author":{"gitId":"-"},"content":"                analysisErrors.add(new AnalysisErrorInfo(configToAnalyze,","isFullCredit":true},{"lineNumber":315,"author":{"gitId":"-"},"content":"                        String.format(LOG_BRANCH_DOES_NOT_EXIST, configToAnalyze.getBranch())));","isFullCredit":true},{"lineNumber":316,"author":{"gitId":"-"},"content":"            } catch (GitCloneException gce) {","isFullCredit":true},{"lineNumber":317,"author":{"gitId":"-"},"content":"                analysisErrors.add(new AnalysisErrorInfo(configToAnalyze, LOG_ERROR_CLONING_OR_BRANCHING));","isFullCredit":true},{"lineNumber":318,"author":{"gitId":"-"},"content":"            } catch (NoAuthorsWithCommitsFoundException nafe) {","isFullCredit":true},{"lineNumber":319,"author":{"gitId":"-"},"content":"                logger.log(Level.WARNING, String.format(MESSAGE_NO_AUTHORS_WITH_COMMITS_FOUND,","isFullCredit":true},{"lineNumber":320,"author":{"gitId":"-"},"content":"                        configToAnalyze.getLocation(), configToAnalyze.getBranch()));","isFullCredit":true},{"lineNumber":321,"author":{"gitId":"-"},"content":"                generatedFiles.addAll(generateEmptyRepoReport(repoReportDirectory.toString(),","isFullCredit":true},{"lineNumber":322,"author":{"gitId":"-"},"content":"                        Author.NAME_NO_AUTHOR_WITH_COMMITS_FOUND));","isFullCredit":true},{"lineNumber":323,"author":{"gitId":"-"},"content":"                generateEmptyRepoReport(repoReportDirectory.toString(), Author.NAME_NO_AUTHOR_WITH_COMMITS_FOUND);","isFullCredit":true},{"lineNumber":324,"author":{"gitId":"-"},"content":"            } catch (Exception e) {","isFullCredit":true},{"lineNumber":325,"author":{"gitId":"-"},"content":"                StringWriter sw \u003d new StringWriter();","isFullCredit":true},{"lineNumber":326,"author":{"gitId":"-"},"content":"                e.printStackTrace(new PrintWriter(sw));","isFullCredit":true},{"lineNumber":327,"author":{"gitId":"-"},"content":"                logger.log(Level.SEVERE, sw.toString());","isFullCredit":true},{"lineNumber":328,"author":{"gitId":"-"},"content":"                analysisErrors.add(new AnalysisErrorInfo(configToAnalyze,","isFullCredit":true},{"lineNumber":329,"author":{"gitId":"-"},"content":"                        String.format(LOG_UNEXPECTED_ERROR, configToAnalyze.getLocation(), sw.toString())));","isFullCredit":true},{"lineNumber":330,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":331,"author":{"gitId":"yamidark"},"content":"        }","isFullCredit":true},{"lineNumber":332,"author":{"gitId":"-"},"content":"        repoCloner.cleanupRepo(configsToAnalyze.get(0));","isFullCredit":true},{"lineNumber":333,"author":{"gitId":"-"},"content":"        return new AnalyzeJobOutput(location, cloneSuccessful, generatedFiles, analysisErrors);","isFullCredit":true},{"lineNumber":334,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":335,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":336,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":337,"author":{"gitId":"-"},"content":"     * Analyzes repo specified by {@code config} and generates the report at {@code repoReportDirectory}.","isFullCredit":true},{"lineNumber":338,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":339,"author":{"gitId":"-"},"content":"     * @return A list of paths to the JSON report files generated for the repo specified by {@code config}.","isFullCredit":true},{"lineNumber":340,"author":{"gitId":"-"},"content":"     * @throws NoAuthorsWithCommitsFoundException if there are no authors with commits found for the repo.","isFullCredit":true},{"lineNumber":341,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":342,"author":{"gitId":"-"},"content":"    private List\u003cPath\u003e analyzeRepo(RepoConfiguration config, String repoReportDirectory)","isFullCredit":true},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throws NoAuthorsWithCommitsFoundException {","isFullCredit":true},{"lineNumber":344,"author":{"gitId":"yamidark"},"content":"        // preprocess the config and repo","isFullCredit":true},{"lineNumber":345,"author":{"gitId":"-"},"content":"        updateRepoConfig(config);","isFullCredit":true},{"lineNumber":346,"author":{"gitId":"eugenepeh"},"content":"        updateAuthorList(config);","isFullCredit":true},{"lineNumber":347,"author":{"gitId":"-"},"content":"        updateIgnoreCommitList(config);","isFullCredit":true},{"lineNumber":348,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":349,"author":{"gitId":"-"},"content":"        if (config.isFindingPreviousAuthorsPerformed()) {","isFullCredit":true},{"lineNumber":350,"author":{"gitId":"-"},"content":"            generateIgnoreRevsFile(config);","isFullCredit":true},{"lineNumber":351,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":352,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":353,"author":{"gitId":"-"},"content":"        AuthorshipReporter authorshipReporter \u003d new AuthorshipReporter();","isFullCredit":true},{"lineNumber":354,"author":{"gitId":"-"},"content":"        AuthorshipSummary authorshipSummary \u003d authorshipReporter.generateAuthorshipSummary(config);","isFullCredit":true},{"lineNumber":355,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":356,"author":{"gitId":"-"},"content":"        CommitsReporter commitsReporter \u003d new CommitsReporter();","isFullCredit":true},{"lineNumber":357,"author":{"gitId":"-"},"content":"        CommitContributionSummary commitSummary \u003d commitsReporter.generateCommitSummary(config);","isFullCredit":true},{"lineNumber":358,"author":{"gitId":"-"},"content":"        earliestSinceDate \u003d commitSummary.getEarliestSinceDate();","isFullCredit":true},{"lineNumber":359,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":360,"author":{"gitId":"-"},"content":"        List\u003cPath\u003e generatedFiles \u003d generateIndividualRepoReport(repoReportDirectory, commitSummary, authorshipSummary);","isFullCredit":true},{"lineNumber":361,"author":{"gitId":"-"},"content":"        logger.info(String.format(MESSAGE_COMPLETE_ANALYSIS, config.getLocation(), config.getBranch()));","isFullCredit":true},{"lineNumber":362,"author":{"gitId":"-"},"content":"        return generatedFiles;","isFullCredit":true},{"lineNumber":363,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":364,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":365,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":366,"author":{"gitId":"eugenepeh"},"content":"     * Updates {@code config} with configuration provided by repository if exists.","isFullCredit":true},{"lineNumber":367,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":368,"author":{"gitId":"-"},"content":"     * @throws AssertionError if there is a problem with the file existence check.","isFullCredit":true},{"lineNumber":369,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":370,"author":{"gitId":"-"},"content":"    public void updateRepoConfig(RepoConfiguration config) throws AssertionError {","isFullCredit":true},{"lineNumber":371,"author":{"gitId":"-"},"content":"        Path configJsonPath \u003d","isFullCredit":true},{"lineNumber":372,"author":{"gitId":"-"},"content":"                Paths.get(config.getRepoRoot(), REPOSENSE_CONFIG_FOLDER, REPOSENSE_CONFIG_FILE).toAbsolutePath();","isFullCredit":true},{"lineNumber":373,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":374,"author":{"gitId":"-"},"content":"        if (!Files.exists(configJsonPath)) {","isFullCredit":true},{"lineNumber":375,"author":{"gitId":"-"},"content":"            logger.info(String.format(MESSAGE_NO_STANDALONE_CONFIG, config.getLocation(), config.getBranch()));","isFullCredit":true},{"lineNumber":376,"author":{"gitId":"-"},"content":"            return;","isFullCredit":true},{"lineNumber":377,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":378,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":379,"author":{"gitId":"-"},"content":"        if (config.isStandaloneConfigIgnored()) {","isFullCredit":true},{"lineNumber":380,"author":{"gitId":"-"},"content":"            logger.info(String.format(MESSAGE_IGNORING_STANDALONE_CONFIG, config.getLocation(), config.getBranch()));","isFullCredit":true},{"lineNumber":381,"author":{"gitId":"-"},"content":"            return;","isFullCredit":true},{"lineNumber":382,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":383,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":384,"author":{"gitId":"-"},"content":"        try {","isFullCredit":true},{"lineNumber":385,"author":{"gitId":"-"},"content":"            StandaloneConfig standaloneConfig \u003d new StandaloneConfigJsonParser().parse(configJsonPath);","isFullCredit":true},{"lineNumber":386,"author":{"gitId":"-"},"content":"            config.update(standaloneConfig);","isFullCredit":true},{"lineNumber":387,"author":{"gitId":"-"},"content":"        } catch (JsonSyntaxException jse) {","isFullCredit":true},{"lineNumber":388,"author":{"gitId":"-"},"content":"            logger.warning(String.format(MESSAGE_MALFORMED_STANDALONE_CONFIG, config.getDisplayName(),","isFullCredit":true},{"lineNumber":389,"author":{"gitId":"-"},"content":"                    REPOSENSE_CONFIG_FOLDER, REPOSENSE_CONFIG_FILE, config.getLocation(), config.getBranch()));","isFullCredit":true},{"lineNumber":390,"author":{"gitId":"eugenepeh"},"content":"        } catch (IllegalArgumentException iae) {","isFullCredit":true},{"lineNumber":391,"author":{"gitId":"-"},"content":"            logger.warning(String.format(MESSAGE_INVALID_CONFIG_JSON,","isFullCredit":true},{"lineNumber":392,"author":{"gitId":"-"},"content":"                    iae.getMessage(), config.getLocation(), config.getBranch()));","isFullCredit":true},{"lineNumber":393,"author":{"gitId":"yong24s"},"content":"        } catch (IOException ioe) {","isFullCredit":true},{"lineNumber":394,"author":{"gitId":"yong24s"},"content":"            throw new AssertionError(","isFullCredit":true},{"lineNumber":395,"author":{"gitId":"yong24s"},"content":"                    \"This exception should not happen as we have performed the file existence check.\");","isFullCredit":true},{"lineNumber":396,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":397,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":398,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":399,"author":{"gitId":"eugenepeh"},"content":"    /**","isFullCredit":true},{"lineNumber":400,"author":{"gitId":"eugenepeh"},"content":"     * Find and update {@code config} with all the author identities if author list is empty.","isFullCredit":true},{"lineNumber":401,"author":{"gitId":"-"},"content":"     * Also removes ignored authors from author list.","isFullCredit":true},{"lineNumber":402,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":403,"author":{"gitId":"-"},"content":"     * @throws NoAuthorsWithCommitsFoundException if there are no authors with commits found for the repo.","isFullCredit":true},{"lineNumber":404,"author":{"gitId":"eugenepeh"},"content":"     */","isFullCredit":true},{"lineNumber":405,"author":{"gitId":"-"},"content":"    private void updateAuthorList(RepoConfiguration config) throws NoAuthorsWithCommitsFoundException {","isFullCredit":true},{"lineNumber":406,"author":{"gitId":"eugenepeh"},"content":"        if (config.getAuthorList().isEmpty()) {","isFullCredit":true},{"lineNumber":407,"author":{"gitId":"-"},"content":"            logger.info(String.format(MESSAGE_NO_AUTHORS_SPECIFIED, config.getLocation(), config.getBranch()));","isFullCredit":true},{"lineNumber":408,"author":{"gitId":"eugenepeh"},"content":"            List\u003cAuthor\u003e authorList \u003d GitShortlog.getAuthors(config);","isFullCredit":true},{"lineNumber":409,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":410,"author":{"gitId":"jamessspanggg"},"content":"            if (authorList.isEmpty()) {","isFullCredit":true},{"lineNumber":411,"author":{"gitId":"jamessspanggg"},"content":"                throw new NoAuthorsWithCommitsFoundException();","isFullCredit":true},{"lineNumber":412,"author":{"gitId":"jamessspanggg"},"content":"            }","isFullCredit":true},{"lineNumber":413,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":414,"author":{"gitId":"eugenepeh"},"content":"            config.setAuthorList(authorList);","isFullCredit":true},{"lineNumber":415,"author":{"gitId":"eugenepeh"},"content":"        }","isFullCredit":true},{"lineNumber":416,"author":{"gitId":"-"},"content":"        config.removeIgnoredAuthors();","isFullCredit":true},{"lineNumber":417,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":418,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":419,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":420,"author":{"gitId":"-"},"content":"     * Updates {@code config} with the exact list of commits if commit ranges are provided.","isFullCredit":true},{"lineNumber":421,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":422,"author":{"gitId":"-"},"content":"    private void updateIgnoreCommitList(RepoConfiguration config) {","isFullCredit":true},{"lineNumber":423,"author":{"gitId":"-"},"content":"        List\u003cCommitHash\u003e updatedIgnoreCommitList \u003d config.getIgnoreCommitList().stream()","isFullCredit":true},{"lineNumber":424,"author":{"gitId":"-"},"content":"                .flatMap(x -\u003e CommitHash.getHashes(config.getRepoRoot(), config.getBranch(), x))","isFullCredit":true},{"lineNumber":425,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","isFullCredit":true},{"lineNumber":426,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(updatedIgnoreCommitList);","isFullCredit":true},{"lineNumber":427,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":428,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":429,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":430,"author":{"gitId":"-"},"content":"     * Adds {@code configs} that were not successfully cloned from {@code failedRepoLocation}","isFullCredit":true},{"lineNumber":431,"author":{"gitId":"-"},"content":"     * into the list of errors in the summary report and removes them from the list of {@code configs}.","isFullCredit":true},{"lineNumber":432,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":433,"author":{"gitId":"-"},"content":"    private void handleCloningFailed(List\u003cRepoConfiguration\u003e configs, RepoLocation failedRepoLocation) {","isFullCredit":true},{"lineNumber":434,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e failedConfigs \u003d configs.stream()","isFullCredit":true},{"lineNumber":435,"author":{"gitId":"-"},"content":"                .filter(config -\u003e config.getLocation().equals(failedRepoLocation))","isFullCredit":true},{"lineNumber":436,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","isFullCredit":true},{"lineNumber":437,"author":{"gitId":"-"},"content":"        handleFailedConfigs(configs, failedConfigs, String.format(LOG_ERROR_CLONING, failedRepoLocation));","isFullCredit":true},{"lineNumber":438,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":439,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":440,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":441,"author":{"gitId":"-"},"content":"     * Adds {@code failedConfig} that failed analysis into the list of errors in the summary report along with","isFullCredit":true},{"lineNumber":442,"author":{"gitId":"-"},"content":"     * an {@code errorMessage} and removes {@code failedConfig} from the list of {@code configs}.","isFullCredit":true},{"lineNumber":443,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":444,"author":{"gitId":"-"},"content":"    private void handleAnalysisFailed(List\u003cRepoConfiguration\u003e configs, RepoConfiguration failedConfig,","isFullCredit":true},{"lineNumber":445,"author":{"gitId":"-"},"content":"            String errorMessage) {","isFullCredit":true},{"lineNumber":446,"author":{"gitId":"-"},"content":"        handleFailedConfigs(configs, Collections.singletonList(failedConfig), errorMessage);","isFullCredit":true},{"lineNumber":447,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":448,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":449,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":450,"author":{"gitId":"-"},"content":"     * Adds {@code failedConfigs} that failed cloning/analysis into the list of errors in the summary report along","isFullCredit":true},{"lineNumber":451,"author":{"gitId":"-"},"content":"     * with an {@code errorMessage} and removes {@code failedConfigs} from the list of {@code configs}.","isFullCredit":true},{"lineNumber":452,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":453,"author":{"gitId":"-"},"content":"    private void handleFailedConfigs(List\u003cRepoConfiguration\u003e configs, List\u003cRepoConfiguration\u003e failedConfigs,","isFullCredit":true},{"lineNumber":454,"author":{"gitId":"-"},"content":"            String errorMessage) {","isFullCredit":true},{"lineNumber":455,"author":{"gitId":"-"},"content":"        Iterator\u003cRepoConfiguration\u003e itr \u003d configs.iterator();","isFullCredit":true},{"lineNumber":456,"author":{"gitId":"-"},"content":"        while (itr.hasNext()) {","isFullCredit":true},{"lineNumber":457,"author":{"gitId":"-"},"content":"            RepoConfiguration config \u003d itr.next();","isFullCredit":true},{"lineNumber":458,"author":{"gitId":"-"},"content":"            if (failedConfigs.contains(config)) {","isFullCredit":true},{"lineNumber":459,"author":{"gitId":"-"},"content":"                ErrorSummary.getInstance().addErrorMessage(config.getDisplayName(), errorMessage);","isFullCredit":true},{"lineNumber":460,"author":{"gitId":"-"},"content":"                itr.remove();","isFullCredit":true},{"lineNumber":461,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":462,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":463,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":464,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":465,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":466,"author":{"gitId":"-"},"content":"     * Generates an empty report at the {@code repoReportDirectory}, with the author display name","isFullCredit":true},{"lineNumber":467,"author":{"gitId":"-"},"content":"     * as {@code displayName}.","isFullCredit":true},{"lineNumber":468,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":469,"author":{"gitId":"-"},"content":"     * @return A list of paths to the JSON report files generated for this empty report.","isFullCredit":true},{"lineNumber":470,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":471,"author":{"gitId":"-"},"content":"    private List\u003cPath\u003e generateEmptyRepoReport(String repoReportDirectory, String displayName) {","isFullCredit":true},{"lineNumber":472,"author":{"gitId":"jamessspanggg"},"content":"        CommitReportJson emptyCommitReportJson \u003d new CommitReportJson(displayName);","isFullCredit":true},{"lineNumber":473,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":474,"author":{"gitId":"-"},"content":"        List\u003cPath\u003e generatedFiles \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":475,"author":{"gitId":"-"},"content":"        FileUtil.writeJsonFile(emptyCommitReportJson, getIndividualCommitsPath(repoReportDirectory))","isFullCredit":true},{"lineNumber":476,"author":{"gitId":"-"},"content":"                .ifPresent(generatedFiles::add);","isFullCredit":true},{"lineNumber":477,"author":{"gitId":"-"},"content":"        FileUtil.writeJsonFile(Collections.emptyList(), getIndividualAuthorshipPath(repoReportDirectory))","isFullCredit":true},{"lineNumber":478,"author":{"gitId":"-"},"content":"                .ifPresent(generatedFiles::add);","isFullCredit":true},{"lineNumber":479,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":480,"author":{"gitId":"-"},"content":"        return generatedFiles;","isFullCredit":true},{"lineNumber":481,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":482,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":483,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":484,"author":{"gitId":"-"},"content":"     * Generates a report for a single repository at {@code repoReportDirectory} based on {@code commitSummary}","isFullCredit":true},{"lineNumber":485,"author":{"gitId":"-"},"content":"     * and {@code authorshipSummary}.","isFullCredit":true},{"lineNumber":486,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":487,"author":{"gitId":"-"},"content":"     * @return A list of paths to the JSON report files generated for this report.","isFullCredit":true},{"lineNumber":488,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":489,"author":{"gitId":"-"},"content":"    private List\u003cPath\u003e generateIndividualRepoReport(String repoReportDirectory,","isFullCredit":true},{"lineNumber":490,"author":{"gitId":"-"},"content":"            CommitContributionSummary commitSummary, AuthorshipSummary authorshipSummary) {","isFullCredit":true},{"lineNumber":491,"author":{"gitId":"-"},"content":"        CommitReportJson commitReportJson \u003d new CommitReportJson(commitSummary, authorshipSummary);","isFullCredit":true},{"lineNumber":492,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":493,"author":{"gitId":"-"},"content":"        List\u003cPath\u003e generatedFiles \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":494,"author":{"gitId":"-"},"content":"        FileUtil.writeJsonFile(commitReportJson, getIndividualCommitsPath(repoReportDirectory))","isFullCredit":true},{"lineNumber":495,"author":{"gitId":"-"},"content":"                .ifPresent(generatedFiles::add);","isFullCredit":true},{"lineNumber":496,"author":{"gitId":"-"},"content":"        FileUtil.writeJsonFile(authorshipSummary.getFileResults(), getIndividualAuthorshipPath(repoReportDirectory))","isFullCredit":true},{"lineNumber":497,"author":{"gitId":"-"},"content":"                .ifPresent(generatedFiles::add);","isFullCredit":true},{"lineNumber":498,"author":{"gitId":"-"},"content":"        return generatedFiles;","isFullCredit":true},{"lineNumber":499,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":500,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":501,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":502,"author":{"gitId":"-"},"content":"     * Creates the .git-blame-ignore-revs file containing the contents of {@code ignoreCommitList}","isFullCredit":true},{"lineNumber":503,"author":{"gitId":"-"},"content":"     * in the repo root directory of {@code config}.","isFullCredit":true},{"lineNumber":504,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":505,"author":{"gitId":"-"},"content":"    private void generateIgnoreRevsFile(RepoConfiguration config) {","isFullCredit":true},{"lineNumber":506,"author":{"gitId":"-"},"content":"        List\u003cCommitHash\u003e expandedIgnoreCommitList \u003d config.getIgnoreCommitList().stream()","isFullCredit":true},{"lineNumber":507,"author":{"gitId":"-"},"content":"                .map(CommitHash::toString)","isFullCredit":true},{"lineNumber":508,"author":{"gitId":"-"},"content":"                .map(commitHash -\u003e {","isFullCredit":true},{"lineNumber":509,"author":{"gitId":"-"},"content":"                    try {","isFullCredit":true},{"lineNumber":510,"author":{"gitId":"-"},"content":"                        return GitShow.getExpandedCommitHash(config.getRepoRoot(), commitHash);","isFullCredit":true},{"lineNumber":511,"author":{"gitId":"-"},"content":"                    } catch (CommitNotFoundException e) {","isFullCredit":true},{"lineNumber":512,"author":{"gitId":"-"},"content":"                        logger.warning(String.format(LOG_ERROR_EXPANDING_COMMIT, commitHash));","isFullCredit":true},{"lineNumber":513,"author":{"gitId":"-"},"content":"                        return new CommitHash(commitHash);","isFullCredit":true},{"lineNumber":514,"author":{"gitId":"-"},"content":"                    }","isFullCredit":true},{"lineNumber":515,"author":{"gitId":"-"},"content":"                })","isFullCredit":true},{"lineNumber":516,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","isFullCredit":true},{"lineNumber":517,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":518,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(expandedIgnoreCommitList);","isFullCredit":true},{"lineNumber":519,"author":{"gitId":"-"},"content":"        FileUtil.writeIgnoreRevsFile(getIgnoreRevsFilePath(config.getRepoRoot()), config.getIgnoreCommitList());","isFullCredit":true},{"lineNumber":520,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":521,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":522,"author":{"gitId":"-"},"content":"    private String getSummaryResultPath(String targetFileLocation) {","isFullCredit":true},{"lineNumber":523,"author":{"gitId":"-"},"content":"        return targetFileLocation + \"/\" + SummaryJson.SUMMARY_JSON_FILE_NAME;","isFullCredit":true},{"lineNumber":524,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":525,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":526,"author":{"gitId":"-"},"content":"    private String getIgnoreRevsFilePath(String targetFileLocation) {","isFullCredit":true},{"lineNumber":527,"author":{"gitId":"-"},"content":"        return targetFileLocation + GitBlame.IGNORE_COMMIT_LIST_FILE_NAME;","isFullCredit":true},{"lineNumber":528,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":529,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":530,"author":{"gitId":"-"},"content":"    private String getIndividualAuthorshipPath(String repoReportDirectory) {","isFullCredit":true},{"lineNumber":531,"author":{"gitId":"yamidark"},"content":"        return repoReportDirectory + \"/authorship.json\";","isFullCredit":true},{"lineNumber":532,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":533,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":534,"author":{"gitId":"-"},"content":"    private String getIndividualCommitsPath(String repoReportDirectory) {","isFullCredit":true},{"lineNumber":535,"author":{"gitId":"yamidark"},"content":"        return repoReportDirectory + \"/commits.json\";","isFullCredit":true},{"lineNumber":536,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":537,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":538,"author":{"gitId":"-"},"content":"    public void setEarliestSinceDate(LocalDateTime newEarliestSinceDate) {","isFullCredit":true},{"lineNumber":539,"author":{"gitId":"-"},"content":"        if (earliestSinceDate \u003d\u003d null || newEarliestSinceDate.compareTo(earliestSinceDate) \u003c 0) {","isFullCredit":true},{"lineNumber":540,"author":{"gitId":"-"},"content":"            earliestSinceDate \u003d newEarliestSinceDate;","isFullCredit":true},{"lineNumber":541,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":542,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":543,"author":{"gitId":"yamidark"},"content":"}","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":9,"yamidark":40,"yong24s":5,"eugenepeh":15,"-":474}},{"path":"src/main/java/reposense/report/SummaryJson.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.report;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.ZoneId;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"import reposense.model.ReportConfiguration;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.model.SupportedDomainUrlMap;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the structure of summary.json file in reposense-report folder.","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class SummaryJson {","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String SUMMARY_JSON_FILE_NAME \u003d \"summary.json\";","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final String repoSenseVersion;","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final String reportGeneratedTime;","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final String reportGenerationTime;","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final ZoneId zoneId;","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final String reportTitle;","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cRepoConfiguration\u003e repos;","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cMap\u003cString, String\u003e\u003e errorSet;","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final LocalDateTime sinceDate;","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final LocalDateTime untilDate;","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"jamessspanggg"},"content":"    private final boolean isSinceDateProvided;","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"jamessspanggg"},"content":"    private final boolean isUntilDateProvided;","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Map\u003cString, Map\u003cString, String\u003e\u003e supportedDomainUrlMap;","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public SummaryJson(List\u003cRepoConfiguration\u003e repos, ReportConfiguration reportConfig, String reportGeneratedTime,","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"            LocalDateTime sinceDate, LocalDateTime untilDate, boolean isSinceDateProvided, boolean isUntilDateProvided,","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"            String repoSenseVersion, Set\u003cMap\u003cString, String\u003e\u003e errorSet, String reportGenerationTime, ZoneId zoneId) {","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.repos \u003d repos;","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.reportGeneratedTime \u003d reportGeneratedTime;","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.reportGenerationTime \u003d reportGenerationTime;","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.reportTitle \u003d reportConfig.getTitle();","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.sinceDate \u003d sinceDate;","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.untilDate \u003d untilDate;","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"jamessspanggg"},"content":"        this.isSinceDateProvided \u003d isSinceDateProvided;","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"jamessspanggg"},"content":"        this.isUntilDateProvided \u003d isUntilDateProvided;","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.repoSenseVersion \u003d repoSenseVersion;","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.errorSet \u003d errorSet;","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.zoneId \u003d zoneId;","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.supportedDomainUrlMap \u003d SupportedDomainUrlMap.getDefaultDomainUrlMap();","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":4,"-":44}},{"path":"src/main/java/reposense/report/exception/NoAuthorsWithCommitsFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamessspanggg"},"content":"package reposense.report.exception;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"jamessspanggg"},"content":"/**","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"jamessspanggg"},"content":" * Signals that no authors with commits were found from a specific repository.","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"jamessspanggg"},"content":" */","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"jamessspanggg"},"content":"public class NoAuthorsWithCommitsFoundException extends Exception {","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"jamessspanggg"},"content":"}","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":7}},{"path":"src/main/java/reposense/system/CommandRunner.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenepeh"},"content":"package reposense.system;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"yamidark"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yong24s"},"content":"import reposense.util.SystemUtil;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains command running related functionalities.","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandRunner {","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Spawns a backend terminal process, with working directory at {@code path}, to execute the {@code command}.","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws RuntimeException if an exception happens while executing the {@code command}.","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static String runCommand(Path path, String command) throws RuntimeException {","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"        CommandRunnerProcess crp \u003d spawnCommandProcess(path, command);","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"            return crp.waitForProcess();","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (CommandRunnerProcessException cre) {","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new RuntimeException(cre);","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Spawns a backend terminal process, with working directory at {@code path}, to execute the {@code command}.","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Does not wait for process to finish executing.","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static CommandRunnerProcess runCommandAsync(Path path, String command) {","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return spawnCommandProcess(path, command);","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Spawns a {@link CommandRunnerProcess} to execute {@code command}, with working directory at {@code path}.","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Does not wait for process to finish executing.","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws RuntimeException if an error happens while attempting to spawn the process.","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static CommandRunnerProcess spawnCommandProcess(Path path, String command) throws RuntimeException {","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ProcessBuilder pb \u003d null;","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"yong24s"},"content":"        if (SystemUtil.isWindows()) {","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"            pb \u003d new ProcessBuilder()","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"                    .command(new String[]{\"CMD\", \"/c\", command})","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"yamidark"},"content":"                    .directory(path.toFile());","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } else {","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"            pb \u003d new ProcessBuilder()","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"                    .command(new String[]{\"bash\", \"-c\", command})","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"yamidark"},"content":"                    .directory(path.toFile());","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Process p \u003d null;","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"            p \u003d pb.start();","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new RuntimeException(\"Error Creating Thread:\" + e.getMessage());","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"        StreamGobbler errorGobbler \u003d new StreamGobbler(p.getErrorStream());","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"        StreamGobbler outputGobbler \u003d new StreamGobbler(p.getInputStream());","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"        outputGobbler.start();","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"        errorGobbler.start();","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new CommandRunnerProcess(path, command, p, outputGobbler, errorGobbler);","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yamidark":4,"yong24s":3,"eugenepeh":2,"-":55}},{"path":"src/main/java/reposense/system/LogsManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.system;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.StandardCopyOption;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.logging.Handler;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Configures and manages the loggers and handlers, including their levels.","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class LogsManager {","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Whenever the log file size exceeds {@code MAX_FILE_SIZE_IN_BYTES} it rolls over to another file","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // The maximum number of files to store the logs is {@code FILE_COUNT}","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final int FILE_COUNT \u003d 2;","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final int MEGABYTE \u003d (1 \u003c\u003c 20);","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d 5 * MEGABYTE; // 5MB","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final ArrayList\u003cLogger\u003e LOGGER_LIST \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"    // All the log files will be store with a .log extension","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // eg. reposense.log.0, in the logs/ folder of the working directory","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String LOG_FOLDER_NAME \u003d \"reposense-logs\";","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE_NAME \u003d \"reposense.log\";","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Path TEMP_LOG_DIR \u003d Paths.get(System.getProperty(\"user.dir\"));","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static Path logFolderLocation;","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static Level currentConsoleLogLevel \u003d Level.INFO;","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static Level currentFileLogLevel \u003d Level.INFO;","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"        synchronized (LOGGER_LIST) {","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"            LOGGER_LIST.add(logger);","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return logger;","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a {@link Logger} for the given {@code clazz} name.","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Adds the {@link ConsoleHandler} to the {@code logger}.","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Creates the {@link ConsoleHandler} if it is null.","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Removes all the handlers from {@code logger}.","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Handler[] handlers \u003d logger.getHandlers();","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"        for (Handler handler : handlers) {","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"            logger.removeHandler(handler);","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Adds the {@link FileHandler} to the {@code logger}.","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Creates {@link FileHandler} if it is null.","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Path path \u003d TEMP_LOG_DIR.resolve(LOG_FOLDER_NAME);","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"        try {","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"            boolean isFileExist \u003d Files.exists(path);","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"            if (!isFileExist) {","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"-"},"content":"                Files.createDirectories(path);","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (!isFileExist) {","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"                logger.info(\"Log temp folder has been successfully created\");","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.log(Level.SEVERE, e.getMessage(), e);","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Moves the log file from the temporary directory to the specified output directory.","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * If the specified output directory is not set (i.e., logFolderLocation is null),","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * the method does nothing.","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Note that this closes the fileHandler.","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void moveLogFileToOutputFolder() {","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (logFolderLocation \u003d\u003d null) {","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"-"},"content":"            getLogger(LogsManager.class.getName())","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"-"},"content":"                    .warning(\"Log output folder was not set\");","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return;","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"-"},"content":"            // Close the FileHandler to release the lock on the log file","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"-"},"content":"            fileHandler.close();","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"-"},"content":"            Path tempLogDir \u003d TEMP_LOG_DIR.resolve(LOG_FOLDER_NAME);","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"-"},"content":"            Path outputLogDir \u003d logFolderLocation.resolve(LOG_FOLDER_NAME);","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"-"},"content":"            if (!Files.exists(outputLogDir)) {","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"-"},"content":"                Files.createDirectories(outputLogDir);","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"-"},"content":"                getLogger(LogsManager.class.getName())","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"-"},"content":"                        .info(\"Log output folder has been successfully created\");","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"-"},"content":"            List\u003cPath\u003e logFiles \u003d Files.list(tempLogDir).collect(Collectors.toList());","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"-"},"content":"            for (Path file : logFiles) {","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"-"},"content":"                Files.move(file, outputLogDir.resolve(file.getFileName()), StandardCopyOption.REPLACE_EXISTING);","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"-"},"content":"            Files.delete(tempLogDir);","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"-"},"content":"            getLogger(LogsManager.class.getName())","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    .severe(\"Failed to move log files to output folder: \" + e.getMessage());","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Creates a {@link FileHandler} for the log file.","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"yamidark"},"content":"     *","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Path path \u003d TEMP_LOG_DIR.resolve(LOG_FOLDER_NAME).resolve(LOG_FILE_NAME);","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(path.toString(), MAX_FILE_SIZE_IN_BYTES, FILE_COUNT, true);","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentFileLogLevel);","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return fileHandler;","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Creates a {@link ConsoleHandler} to output the log to console.","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentConsoleLogLevel);","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"-"},"content":"        consoleHandler.setFormatter(new CustomLogFormatter());","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return consoleHandler;","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Sets the log folder location using {@code location} and adds file handler with this location to all the loggers","isFullCredit":true},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * created.","isFullCredit":true},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public static void setLogFolderLocation(Path location) {","isFullCredit":true},{"lineNumber":184,"author":{"gitId":"-"},"content":"        logFolderLocation \u003d location;","isFullCredit":true},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yamidark":1,"-":185}},{"path":"src/main/java/reposense/system/StreamGobbler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenepeh"},"content":"package reposense.system;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.InputStream;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"yamidark"},"content":"import java.nio.ByteBuffer;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yamidark"},"content":"import java.nio.channels.Channels;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yamidark"},"content":"import java.nio.channels.ReadableByteChannel;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Contains input stream consumption and processing related functionalities.","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"eugenepeh"},"content":"public class StreamGobbler extends Thread {","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"yamidark"},"content":"    private final ByteBuffer buffer \u003d ByteBuffer.allocate(1 \u003c\u003c 13); // 8KB","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"eugenepeh"},"content":"    private InputStream is;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"yamidark"},"content":"    private String value;","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public StreamGobbler(InputStream is) {","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.is \u003d is;","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"eugenepeh"},"content":"    public String getValue() {","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"eugenepeh"},"content":"        return value;","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Reads from input stream {@code is} and stores it into {@code value}.","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void run() {","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"yamidark"},"content":"            StringBuilder sb \u003d new StringBuilder();","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"yamidark"},"content":"            ReadableByteChannel ch \u003d Channels.newChannel(is);","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"yamidark"},"content":"            int len;","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"yamidark"},"content":"            while ((len \u003d ch.read(buffer)) \u003e 0) {","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"yamidark"},"content":"                sb.append(new String(buffer.array(), 0, len));","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"yamidark"},"content":"                buffer.rewind();","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"yamidark"},"content":"            value \u003d sb.toString();","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"            ioe.printStackTrace();","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yamidark":13,"eugenepeh":7,"-":25}},{"path":"src/main/java/reposense/util/FileUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenepeh"},"content":"package reposense.util;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"eugenepeh"},"content":"import java.io.File;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"eugenepeh"},"content":"import java.io.FileNotFoundException;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.FileOutputStream;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"eugenepeh"},"content":"import java.io.IOException;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yamidark"},"content":"import java.io.InputStream;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"eugenepeh"},"content":"import java.io.OutputStream;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"eugenepeh"},"content":"import java.io.PrintWriter;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.ByteBuffer;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.FileSystems;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"yamidark"},"content":"import java.nio.file.Files;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"yamidark"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"yamidark"},"content":"import java.nio.file.Paths;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.StandardCopyOption;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.time.ZoneId;","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Optional;","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"eugenepeh"},"content":"import java.util.zip.ZipEntry;","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"eugenepeh"},"content":"import java.util.zip.ZipInputStream;","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"import java.util.zip.ZipOutputStream;","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"import com.google.gson.Gson;","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"import com.google.gson.GsonBuilder;","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"import com.google.gson.JsonPrimitive;","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"import com.google.gson.JsonSerializer;","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"import reposense.model.FileType;","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"import reposense.system.CommandRunner;","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"/**","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":" * Contains file processing related functionalities.","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":" */","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class FileUtil {","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"yong24s"},"content":"    public static final String REPOS_ADDRESS \u003d \"repos\";","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // zip file which contains all the specified file types","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ZIP_FILE \u003d \"archive.zip\";","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(FileUtil.class);","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"yamidark"},"content":"    private static final String GITHUB_API_DATE_FORMAT \u003d \"yyyy-MM-dd\";","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final ByteBuffer buffer \u003d ByteBuffer.allocate(1 \u003c\u003c 11); // 2KB","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String BARE_REPO_SUFFIX \u003d \"_bare\";","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final String PARTIAL_REPO_SUFFIX \u003d \"_partial\";","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final String SHALLOW_PARTIAL_REPO_SUFFIX \u003d \"_shallow_partial\";","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FILE_PATH \u003d \"\\\"%s\\\" is an invalid file path. Skipping this directory.\";","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_FAIL_TO_ZIP_FILES \u003d","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"            \"Exception occurred while attempting to zip the report files.\";","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_FAIL_TO_COPY_ASSETS \u003d","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"            \"Exception occurred while attempting to copy custom assets.\";","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Zips all files of type {@code fileTypes} that are in the directory {@code pathsToZip} into a single file and","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * output it to {@code sourceAndOutputPath}.","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static void zipFoldersAndFiles(List\u003cPath\u003e pathsToZip, Path sourceAndOutputPath, String... fileTypes) {","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"        zipFoldersAndFiles(pathsToZip, sourceAndOutputPath, sourceAndOutputPath, fileTypes);","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Zips all files listed in {@code pathsToZip} of type {@code fileTypes} located in the directory","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code sourcePath} into {@code outputPath}.","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static void zipFoldersAndFiles(List\u003cPath\u003e pathsToZip, Path sourcePath, Path outputPath,","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"            String... fileTypes) {","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"        try (","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"                FileOutputStream fos \u003d new FileOutputStream(outputPath + File.separator + ZIP_FILE);","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"                ZipOutputStream zos \u003d new ZipOutputStream(fos)","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"        ) {","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"            for (Path pathToZip : pathsToZip) {","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"                List\u003cPath\u003e allPaths \u003d getFilePaths(pathToZip, fileTypes);","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"                for (Path path : allPaths) {","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"                    String filePath \u003d sourcePath.relativize(path.toAbsolutePath()).toString();","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"                    String zipEntry \u003d Files.isDirectory(path) ? filePath + File.separator : filePath;","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"                    zos.putNextEntry(new ZipEntry(zipEntry.replace(\"\\\\\", \"/\")));","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"                    if (Files.isRegularFile(path)) {","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"                        Files.copy(path, zos);","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"                    }","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"-"},"content":"                    zos.closeEntry();","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"                }","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"-"},"content":"            logger.severe(MESSAGE_FAIL_TO_ZIP_FILES);","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Writes the JSON file representing the {@code object} at the given {@code path}.","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @return An {@link Optional} containing the {@link Path} to the JSON file, or an empty {@link Optional} if there","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * was an error while writing the JSON file.","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static Optional\u003cPath\u003e writeJsonFile(Object object, String path) {","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Gson gson \u003d new GsonBuilder()","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .registerTypeAdapter(LocalDateTime.class, (JsonSerializer\u003cLocalDateTime\u003e) (date, typeOfSrc, context)","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"                        -\u003e new JsonPrimitive(date.format(DateTimeFormatter.ofPattern(GITHUB_API_DATE_FORMAT))))","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .registerTypeAdapter(FileType.class, new FileType.FileTypeSerializer())","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .registerTypeAdapter(ZoneId.class, (JsonSerializer\u003cZoneId\u003e) (zoneId, typeOfSrc, context)","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"-"},"content":"                        -\u003e new JsonPrimitive(zoneId.toString()))","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .create();","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // Gson serializer from:","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // https://stackoverflow.com/questions/39192945/serialize-java-8-localdate-as-yyyy-mm-dd-with-gson","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String result \u003d gson.toJson(object);","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"yamidark"},"content":"        try (PrintWriter out \u003d new PrintWriter(path)) {","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"eugenepeh"},"content":"            out.print(result);","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"-"},"content":"            out.print(\"\\n\");","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return Optional.of(path).map(Paths::get);","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"-"},"content":"        } catch (FileNotFoundException e) {","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"            logger.log(Level.SEVERE, e.getMessage(), e);","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return Optional.empty();","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Writes the ignore revs file containing the {@code ignoreCommitList} at the given {@code path}.","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @return An {@link Optional} containing the {@link Path} to the ignore revs file, or an empty {@link Optional}","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * if there was an error while writing the ignore revs file.","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static Optional\u003cPath\u003e writeIgnoreRevsFile(String path, List\u003cCommitHash\u003e ignoreCommitList) {","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String contentOfIgnoreRevsFile \u003d ignoreCommitList.stream()","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .map(CommitHash::toString)","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .reduce(\"\", (hashes, newHash) -\u003e hashes + newHash + \"\\n\");","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"-"},"content":"        try (PrintWriter out \u003d new PrintWriter(path)) {","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"-"},"content":"            out.print(contentOfIgnoreRevsFile);","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return Optional.of(path).map(Paths::get);","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"-"},"content":"        } catch (FileNotFoundException e) {","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"-"},"content":"            logger.log(Level.SEVERE, e.getMessage(), e);","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return Optional.empty();","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Deletes the {@code root} directory.","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @throws IOException if the root path does not exist.","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"yamidark"},"content":"    public static void deleteDirectory(String root) throws IOException {","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"-"},"content":"        File rootDirectory \u003d Paths.get(root).toFile();","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (rootDirectory.exists()) {","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"-"},"content":"            for (File file : rootDirectory.listFiles()) {","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"-"},"content":"                if (file.isDirectory()) {","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"-"},"content":"                    deleteDirectory(file.toString());","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"-"},"content":"                } else {","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"-"},"content":"                    file.delete();","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"-"},"content":"                }","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"-"},"content":"            rootDirectory.delete();","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"-"},"content":"            if (rootDirectory.exists()) {","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"-"},"content":"                throw new IOException(String.format(\"Fail to delete directory %s\", rootDirectory));","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Unzips the contents of the {@code zipSourcePath} into {@code outputPath}.","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"yong24s"},"content":"     * @throws IOException if {@code zipSourcePath} is an invalid path.","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"yong24s"},"content":"    public static void unzip(Path zipSourcePath, Path outputPath) throws IOException {","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"yong24s"},"content":"        try (InputStream is \u003d Files.newInputStream(zipSourcePath)) {","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"yong24s"},"content":"            unzip(is, outputPath);","isFullCredit":true},{"lineNumber":179,"author":{"gitId":"yong24s"},"content":"        }","isFullCredit":true},{"lineNumber":180,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":181,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":182,"author":{"gitId":"yong24s"},"content":"    /**","isFullCredit":true},{"lineNumber":183,"author":{"gitId":"yong24s"},"content":"     * Unzips the contents of the {@code is} into {@code outputPath}.","isFullCredit":true},{"lineNumber":184,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":185,"author":{"gitId":"yong24s"},"content":"     * @throws IOException if {@code is} refers to an invalid path.","isFullCredit":true},{"lineNumber":186,"author":{"gitId":"yong24s"},"content":"     */","isFullCredit":true},{"lineNumber":187,"author":{"gitId":"yong24s"},"content":"    public static void unzip(InputStream is, Path outputPath) throws IOException {","isFullCredit":true},{"lineNumber":188,"author":{"gitId":"yong24s"},"content":"        try (ZipInputStream zis \u003d new ZipInputStream(is)) {","isFullCredit":true},{"lineNumber":189,"author":{"gitId":"-"},"content":"            ZipEntry entry;","isFullCredit":true},{"lineNumber":190,"author":{"gitId":"-"},"content":"            Files.createDirectories(outputPath);","isFullCredit":true},{"lineNumber":191,"author":{"gitId":"-"},"content":"            while ((entry \u003d zis.getNextEntry()) !\u003d null) {","isFullCredit":true},{"lineNumber":192,"author":{"gitId":"-"},"content":"                Path path \u003d Paths.get(outputPath.toString(), entry.getName());","isFullCredit":true},{"lineNumber":193,"author":{"gitId":"-"},"content":"                // create the directories of the zip directory","isFullCredit":true},{"lineNumber":194,"author":{"gitId":"-"},"content":"                if (entry.isDirectory()) {","isFullCredit":true},{"lineNumber":195,"author":{"gitId":"-"},"content":"                    Files.createDirectories(path.toAbsolutePath());","isFullCredit":true},{"lineNumber":196,"author":{"gitId":"-"},"content":"                    zis.closeEntry();","isFullCredit":true},{"lineNumber":197,"author":{"gitId":"-"},"content":"                    continue;","isFullCredit":true},{"lineNumber":198,"author":{"gitId":"-"},"content":"                }","isFullCredit":true},{"lineNumber":199,"author":{"gitId":"yamidark"},"content":"                if (!Files.exists(path.getParent())) {","isFullCredit":true},{"lineNumber":200,"author":{"gitId":"yamidark"},"content":"                    Files.createDirectories(path.getParent());","isFullCredit":true},{"lineNumber":201,"author":{"gitId":"eugenepeh"},"content":"                }","isFullCredit":true},{"lineNumber":202,"author":{"gitId":"-"},"content":"                try (OutputStream output \u003d Files.newOutputStream(path)) {","isFullCredit":true},{"lineNumber":203,"author":{"gitId":"-"},"content":"                    int length;","isFullCredit":true},{"lineNumber":204,"author":{"gitId":"-"},"content":"                    while ((length \u003d zis.read(buffer.array())) \u003e 0) {","isFullCredit":true},{"lineNumber":205,"author":{"gitId":"-"},"content":"                        output.write(buffer.array(), 0, length);","isFullCredit":true},{"lineNumber":206,"author":{"gitId":"-"},"content":"                    }","isFullCredit":true},{"lineNumber":207,"author":{"gitId":"-"},"content":"                }","isFullCredit":true},{"lineNumber":208,"author":{"gitId":"-"},"content":"                zis.closeEntry();","isFullCredit":true},{"lineNumber":209,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":212,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":213,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * Copies the template files from the {@code is} to the {@code outputPath}.","isFullCredit":true},{"lineNumber":215,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":216,"author":{"gitId":"yong24s"},"content":"     * @throws IOException if {@code is} refers to an invalid path.","isFullCredit":true},{"lineNumber":217,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":218,"author":{"gitId":"yong24s"},"content":"    public static void copyTemplate(InputStream is, String outputPath) throws IOException {","isFullCredit":true},{"lineNumber":219,"author":{"gitId":"yong24s"},"content":"        FileUtil.unzip(is, Paths.get(outputPath));","isFullCredit":true},{"lineNumber":220,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":221,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":222,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":223,"author":{"gitId":"-"},"content":"     * Copies files from {@code sourcePath} to the {@code outputPath}.","isFullCredit":true},{"lineNumber":224,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":225,"author":{"gitId":"-"},"content":"     * @throws IOException if {@code is} refers to an invalid path.","isFullCredit":true},{"lineNumber":226,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public static void copyDirectoryContents(String sourcePath, String outputPath) throws IOException {","isFullCredit":true},{"lineNumber":228,"author":{"gitId":"-"},"content":"        copyDirectoryContents(sourcePath, outputPath, null);","isFullCredit":true},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":230,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":231,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * Copies files from {@code sourcePath} to the {@code outputPath}.","isFullCredit":true},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * If {@code whiteList} is provided, only filenames specified by the whitelist will be copied.","isFullCredit":true},{"lineNumber":234,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":235,"author":{"gitId":"-"},"content":"     * @throws IOException if {@code is} refers to an invalid path.","isFullCredit":true},{"lineNumber":236,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":237,"author":{"gitId":"-"},"content":"    public static void copyDirectoryContents(String sourcePath, String outputPath, List\u003cString\u003e whiteList)","isFullCredit":true},{"lineNumber":238,"author":{"gitId":"-"},"content":"            throws IOException {","isFullCredit":true},{"lineNumber":239,"author":{"gitId":"-"},"content":"        Path source \u003d Paths.get(sourcePath);","isFullCredit":true},{"lineNumber":240,"author":{"gitId":"-"},"content":"        Path out \u003d Paths.get(outputPath);","isFullCredit":true},{"lineNumber":241,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":242,"author":{"gitId":"-"},"content":"        Files.walk(source, 1).skip(1).forEach(file -\u003e {","isFullCredit":true},{"lineNumber":243,"author":{"gitId":"-"},"content":"            if (whiteList \u003d\u003d null || whiteList !\u003d null \u0026\u0026 whiteList.contains(file.getFileName().toString())) {","isFullCredit":true},{"lineNumber":244,"author":{"gitId":"-"},"content":"                try {","isFullCredit":true},{"lineNumber":245,"author":{"gitId":"-"},"content":"                    Files.copy(file, out.resolve(source.relativize(file)), StandardCopyOption.REPLACE_EXISTING);","isFullCredit":true},{"lineNumber":246,"author":{"gitId":"-"},"content":"                } catch (IOException ioe) {","isFullCredit":true},{"lineNumber":247,"author":{"gitId":"-"},"content":"                    logger.severe(MESSAGE_FAIL_TO_COPY_ASSETS);","isFullCredit":true},{"lineNumber":248,"author":{"gitId":"-"},"content":"                }","isFullCredit":true},{"lineNumber":249,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":250,"author":{"gitId":"-"},"content":"        });","isFullCredit":true},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":252,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":253,"author":{"gitId":"yamidark"},"content":"     * Creates the {@code dest} directory if it does not exist.","isFullCredit":true},{"lineNumber":254,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":255,"author":{"gitId":"-"},"content":"     * @throws IOException if the directory could not be created.","isFullCredit":true},{"lineNumber":256,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":257,"author":{"gitId":"eugenepeh"},"content":"    public static void createDirectory(Path dest) throws IOException {","isFullCredit":true},{"lineNumber":258,"author":{"gitId":"yamidark"},"content":"        Files.createDirectories(dest);","isFullCredit":true},{"lineNumber":259,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":260,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":261,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":262,"author":{"gitId":"-"},"content":"     * Returns the relative path to the bare repo version of {@code config}.","isFullCredit":true},{"lineNumber":263,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":264,"author":{"gitId":"-"},"content":"    public static Path getRepoParentFolder(RepoConfiguration config) {","isFullCredit":true},{"lineNumber":265,"author":{"gitId":"-"},"content":"        return Paths.get(FileUtil.REPOS_ADDRESS, config.getRepoFolderName());","isFullCredit":true},{"lineNumber":266,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":267,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":268,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":269,"author":{"gitId":"-"},"content":"     * Returns the relative path to the bare repo version of {@code config}.","isFullCredit":true},{"lineNumber":270,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":271,"author":{"gitId":"-"},"content":"    public static Path getBareRepoPath(RepoConfiguration config) {","isFullCredit":true},{"lineNumber":272,"author":{"gitId":"-"},"content":"        return Paths.get(FileUtil.REPOS_ADDRESS,","isFullCredit":true},{"lineNumber":273,"author":{"gitId":"-"},"content":"                config.getRepoFolderName(), config.getRepoName() + BARE_REPO_SUFFIX);","isFullCredit":true},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":275,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":276,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":277,"author":{"gitId":"-"},"content":"     * Returns the relative path to the partial bare repo version of {@code config}.","isFullCredit":true},{"lineNumber":278,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":279,"author":{"gitId":"-"},"content":"    public static Path getPartialBareRepoPath(RepoConfiguration config) {","isFullCredit":true},{"lineNumber":280,"author":{"gitId":"-"},"content":"        return Paths.get(FileUtil.REPOS_ADDRESS,","isFullCredit":true},{"lineNumber":281,"author":{"gitId":"-"},"content":"                config.getRepoFolderName(), config.getRepoName() + PARTIAL_REPO_SUFFIX);","isFullCredit":true},{"lineNumber":282,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":283,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":284,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":285,"author":{"gitId":"-"},"content":"     * Returns the relative path to the shallow partial bare repo version of {@code config}.","isFullCredit":true},{"lineNumber":286,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":287,"author":{"gitId":"-"},"content":"    public static Path getShallowPartialBareRepoPath(RepoConfiguration config) {","isFullCredit":true},{"lineNumber":288,"author":{"gitId":"-"},"content":"        return Paths.get(FileUtil.REPOS_ADDRESS,","isFullCredit":true},{"lineNumber":289,"author":{"gitId":"-"},"content":"                config.getRepoFolderName(), config.getRepoName() + SHALLOW_PARTIAL_REPO_SUFFIX);","isFullCredit":true},{"lineNumber":290,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":291,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":292,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":293,"author":{"gitId":"-"},"content":"     * Returns the folder name of the bare repo version of {@code config}.","isFullCredit":true},{"lineNumber":294,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":295,"author":{"gitId":"-"},"content":"    public static String getBareRepoFolderName(RepoConfiguration config) {","isFullCredit":true},{"lineNumber":296,"author":{"gitId":"-"},"content":"        return config.getRepoName() + BARE_REPO_SUFFIX;","isFullCredit":true},{"lineNumber":297,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":298,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":299,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":300,"author":{"gitId":"-"},"content":"     * Returns the folder name of the partial bare repo version of {@code config}.","isFullCredit":true},{"lineNumber":301,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":302,"author":{"gitId":"-"},"content":"    public static String getPartialBareRepoFolderName(RepoConfiguration config) {","isFullCredit":true},{"lineNumber":303,"author":{"gitId":"-"},"content":"        return config.getRepoName() + PARTIAL_REPO_SUFFIX;","isFullCredit":true},{"lineNumber":304,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":305,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":306,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":307,"author":{"gitId":"-"},"content":"     * Returns the folder name of the shallow partial bare repo version of {@code config}.","isFullCredit":true},{"lineNumber":308,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":309,"author":{"gitId":"-"},"content":"    public static String getShallowPartialBareRepoFolderName(RepoConfiguration config) {","isFullCredit":true},{"lineNumber":310,"author":{"gitId":"-"},"content":"        return config.getRepoName() + SHALLOW_PARTIAL_REPO_SUFFIX;","isFullCredit":true},{"lineNumber":311,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":312,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":313,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":314,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} is a valid path.","isFullCredit":true},{"lineNumber":315,"author":{"gitId":"-"},"content":"     * Produces log messages when the invalid file path is skipped.","isFullCredit":true},{"lineNumber":316,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":317,"author":{"gitId":"-"},"content":"    public static boolean isValidPathWithLogging(String path) {","isFullCredit":true},{"lineNumber":318,"author":{"gitId":"-"},"content":"        try {","isFullCredit":true},{"lineNumber":319,"author":{"gitId":"-"},"content":"            Paths.get(path);","isFullCredit":true},{"lineNumber":320,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","isFullCredit":true},{"lineNumber":321,"author":{"gitId":"-"},"content":"            logger.log(Level.WARNING, String.format(MESSAGE_INVALID_FILE_PATH, path));","isFullCredit":true},{"lineNumber":322,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":true},{"lineNumber":323,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":324,"author":{"gitId":"-"},"content":"        return true;","isFullCredit":true},{"lineNumber":325,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":326,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":327,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":328,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} is a valid path.","isFullCredit":true},{"lineNumber":329,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":330,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","isFullCredit":true},{"lineNumber":331,"author":{"gitId":"-"},"content":"        try {","isFullCredit":true},{"lineNumber":332,"author":{"gitId":"-"},"content":"            Paths.get(path);","isFullCredit":true},{"lineNumber":333,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","isFullCredit":true},{"lineNumber":334,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":true},{"lineNumber":335,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":336,"author":{"gitId":"-"},"content":"        return true;","isFullCredit":true},{"lineNumber":337,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":338,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public static boolean isEmptyFile(String directoryPath, String relativeFilePath) {","isFullCredit":true},{"lineNumber":340,"author":{"gitId":"-"},"content":"        return (new File(directoryPath, relativeFilePath).length() \u003d\u003d 0);","isFullCredit":true},{"lineNumber":341,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":342,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":343,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":344,"author":{"gitId":"-"},"content":"     * Returns the Bash expanded version of the {@code filePath}.","isFullCredit":true},{"lineNumber":345,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":346,"author":{"gitId":"-"},"content":"    public static String getVariableExpandedFilePath(String filePath) {","isFullCredit":true},{"lineNumber":347,"author":{"gitId":"-"},"content":"        String echoOutput \u003d CommandRunner.runCommand(Paths.get(\".\"), \"echo \" + filePath);","isFullCredit":true},{"lineNumber":348,"author":{"gitId":"-"},"content":"        // CommandRunner returns some white space characters at the end","isFullCredit":true},{"lineNumber":349,"author":{"gitId":"-"},"content":"        return echoOutput.trim();","isFullCredit":true},{"lineNumber":350,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":351,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":352,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":353,"author":{"gitId":"-"},"content":"     *  Returns true if {@code relativePath} has been specified to be ignored in the {@code config}.","isFullCredit":true},{"lineNumber":354,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":355,"author":{"gitId":"-"},"content":"    public static boolean isFileIgnoredByGlob(RepoConfiguration config, Path relativePath) {","isFullCredit":true},{"lineNumber":356,"author":{"gitId":"-"},"content":"        boolean hasNoGlobMatches \u003d config.getIgnoreGlobList().stream()","isFullCredit":true},{"lineNumber":357,"author":{"gitId":"-"},"content":"                .map(glob -\u003e FileSystems.getDefault().getPathMatcher(\"glob:\" + glob))","isFullCredit":true},{"lineNumber":358,"author":{"gitId":"-"},"content":"                .filter(pathMatcher -\u003e pathMatcher.matches(relativePath))","isFullCredit":true},{"lineNumber":359,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()).isEmpty();","isFullCredit":true},{"lineNumber":360,"author":{"gitId":"-"},"content":"        return !hasNoGlobMatches;","isFullCredit":true},{"lineNumber":361,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":362,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":363,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":364,"author":{"gitId":"-"},"content":"     * Returns a list of {@link Path} of {@code fileTypes} contained in the given {@code directoryPath} directory.","isFullCredit":true},{"lineNumber":365,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":366,"author":{"gitId":"-"},"content":"     * @throws IOException if an error occurs while trying to access {@code directoryPath}.","isFullCredit":true},{"lineNumber":367,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":368,"author":{"gitId":"-"},"content":"    private static List\u003cPath\u003e getFilePaths(Path directoryPath, String... fileTypes) throws IOException {","isFullCredit":true},{"lineNumber":369,"author":{"gitId":"-"},"content":"        return Files.walk(directoryPath)","isFullCredit":true},{"lineNumber":370,"author":{"gitId":"-"},"content":"                .filter(p -\u003e FileUtil.isFileTypeInPath(p, fileTypes) || Files.isDirectory(p))","isFullCredit":true},{"lineNumber":371,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","isFullCredit":true},{"lineNumber":372,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":373,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":374,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":375,"author":{"gitId":"-"},"content":"     * Returns true if the {@code path} contains one of the {@code fileTypes} extension.","isFullCredit":true},{"lineNumber":376,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":377,"author":{"gitId":"-"},"content":"    private static boolean isFileTypeInPath(Path path, String... fileTypes) {","isFullCredit":true},{"lineNumber":378,"author":{"gitId":"-"},"content":"        return Arrays.stream(fileTypes).anyMatch(path.toString()::endsWith);","isFullCredit":true},{"lineNumber":379,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":380,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":381,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":382,"author":{"gitId":"-"},"content":"     * Returns true if the {@code path} exists corresponding to the given String.","isFullCredit":true},{"lineNumber":383,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":384,"author":{"gitId":"-"},"content":"    public static boolean pathExists(String path) {","isFullCredit":true},{"lineNumber":385,"author":{"gitId":"-"},"content":"        boolean isValidPathLocation;","isFullCredit":true},{"lineNumber":386,"author":{"gitId":"-"},"content":"        try {","isFullCredit":true},{"lineNumber":387,"author":{"gitId":"-"},"content":"            Path pathLocation \u003d Paths.get(path);","isFullCredit":true},{"lineNumber":388,"author":{"gitId":"-"},"content":"            isValidPathLocation \u003d Files.exists(pathLocation);","isFullCredit":true},{"lineNumber":389,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","isFullCredit":true},{"lineNumber":390,"author":{"gitId":"-"},"content":"            isValidPathLocation \u003d false;","isFullCredit":true},{"lineNumber":391,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":392,"author":{"gitId":"-"},"content":"        return isValidPathLocation;","isFullCredit":true},{"lineNumber":393,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":394,"author":{"gitId":"-"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yamidark":20,"yong24s":17,"eugenepeh":12,"-":345}},{"path":"src/main/java/reposense/util/StringsUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenepeh"},"content":"package reposense.util;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"yamidark"},"content":"import java.util.regex.Pattern;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"eugenepeh"},"content":"/**","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"eugenepeh"},"content":" * Contains strings related utilities.","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"eugenepeh"},"content":" */","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"eugenepeh"},"content":"public class StringsUtil {","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yamidark"},"content":"    private static final Pattern SPECIAL_SYMBOLS \u003d Pattern.compile(\"[@;:\u0026/\\\\\\\\!\u003c\u003e{}%#\\\"\\\\-\u003d\u0027()\\\\[\\\\].+*?^$|]\");","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"eugenepeh"},"content":"    /**","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"eugenepeh"},"content":"     * Filters the {@code text}, returning only the lines that matches the given {@code regex}.","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"eugenepeh"},"content":"     */","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"eugenepeh"},"content":"    public static String filterText(String text, String regex) {","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"eugenepeh"},"content":"        String[] split \u003d text.split(\"\\n\");","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"eugenepeh"},"content":"        StringBuilder sb \u003d new StringBuilder();","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"eugenepeh"},"content":"        for (String line: split) {","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"eugenepeh"},"content":"            if (line.matches(regex)) {","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"eugenepeh"},"content":"                sb.append(line + \"\\n\");","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"eugenepeh"},"content":"            }","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"eugenepeh"},"content":"        }","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"eugenepeh"},"content":"        return sb.toString();","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"yamidark"},"content":"     * Converts all special symbol characters inside {@code regexString} to the {@code replacementCharacter}.","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"yamidark"},"content":"    public static String replaceSpecialSymbols(String regexString, String replacementCharacter) {","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"yamidark"},"content":"        return SPECIAL_SYMBOLS.matcher(regexString).replaceAll(replacementCharacter);","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Adds quotes to the string.","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static String addQuotes(String original) {","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"eugenepeh"},"content":"        return \"\\\"\" + original + \"\\\"\";","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Adds the appropriate quotation marks for a file path depending on the OS.","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String addQuotesForFilePath(String filePath) {","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (SystemUtil.isWindows()) {","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"            return \"\\\"\" + filePath + \"\\\"\";","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } else {","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"            StringBuilder sb \u003d new StringBuilder();","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c filePath.length(); i++) {","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"                char c \u003d filePath.charAt(i);","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"                if (c \u003d\u003d \u0027\\\u0027\u0027) {","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"                    sb.append(\"\u0027\\\"\u0027\\\"\u0027\");","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"                } else {","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"                    sb.append(c);","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"                }","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return \u0027\\\u0027\u0027 + sb.toString() + \u0027\\\u0027\u0027;","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"yong24s"},"content":"    /**","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"yong24s"},"content":"     * Removes quotes at the start and end of {@code original}, if exists.","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"yong24s"},"content":"     */","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"yong24s"},"content":"    public static String removeQuote(String original) {","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return (original.startsWith(\"\\\"\") \u0026\u0026 original.endsWith(\"\\\"\"))","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"                ? original.substring(1, original.length() - 1)","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"                : original;","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Removes trailing backslashes from a {@code string}, if it exists.","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static String removeTrailingBackslash(String string) {","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (string.isEmpty()) {","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return string;","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"        int lastCharIndex \u003d string.length() - 1;","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String editedString \u003d string;","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"        boolean isLastCharBackslash \u003d string.charAt(lastCharIndex) \u003d\u003d \u0027\\\\\u0027;","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"        while (isLastCharBackslash) {","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"            editedString \u003d editedString.substring(0, lastCharIndex--);","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"            boolean isStringEmpty \u003d editedString.length() \u003d\u003d 0;","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"            isLastCharBackslash \u003d !isStringEmpty \u0026\u0026 editedString.charAt(lastCharIndex) \u003d\u003d \u0027\\\\\u0027;","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return editedString;","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Returns true iff {@code string} is purely numeric.","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static boolean isNumeric(String string) {","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return Pattern.compile(\"^\\\\d+$\").matcher(string).matches();","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yamidark":11,"yong24s":6,"eugenepeh":25,"-":52}},{"path":"src/main/java/reposense/util/SystemUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yong24s"},"content":"package reposense.util;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains system related functionalities.","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yong24s"},"content":"public class SystemUtil {","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"yong24s"},"content":"    /**","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"yong24s"},"content":"     * Returns true if the test environment is on Windows OS.","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yong24s"},"content":"     */","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"yong24s"},"content":"    public static boolean isWindows() {","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"yong24s"},"content":"        return (System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\") \u003e\u003d 0);","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the current environment is a test environment (defined by build.gradle).","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static boolean isTestEnvironment() {","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String environment \u003d System.getenv(\"REPOSENSE_ENVIRONMENT\");","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return ((environment !\u003d null) \u0026\u0026 (environment.equals(\"TEST\")));","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"yong24s"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yong24s":11,"-":11}},{"path":"src/main/java/reposense/util/TimeUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamessspanggg"},"content":"package reposense.util;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"jamessspanggg"},"content":"import java.time.ZoneId;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.format.ResolverStyle;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.parser.ParseException;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.parser.SinceDateArgumentType;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"jamessspanggg"},"content":"/**","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"jamessspanggg"},"content":" * Contains time related functionalities.","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"jamessspanggg"},"content":" */","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"jamessspanggg"},"content":"public class TimeUtil {","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"jamessspanggg"},"content":"    private static Long startTime;","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String DATE_FORMAT_REGEX \u003d","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \"^((0?[1-9]|[12][0-9]|3[01])\\\\/(0?[1-9]|1[012])\\\\/(19|2[0-9])[0-9]{2})\";","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // \"uuuu\" is used for year since \"yyyy\" does not work with ResolverStyle.STRICT","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final DateTimeFormatter CLI_ARGS_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/uuuu HH:mm:ss\");","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_SINCE_DATE_LATER_THAN_UNTIL_DATE \u003d","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \"\\\"Since Date\\\" cannot be later than \\\"Until Date\\\".\";","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_SINCE_DATE_LATER_THAN_TODAY_DATE \u003d","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"\\\"Since Date\\\" must not be later than today\u0027s date.\";","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String EARLIEST_VALID_DATE \u003d \"1970-01-01T00:00:00\";","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String LATEST_VALID_DATE \u003d \"2099-12-31T23:59:59\";","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_SINCE_DATE_EARLIER_THAN_EARLIEST_VALID_DATE \u003d","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \"Date of %s must not be earlier than \"","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + String.format(\"%s, resetting it to earliest valid date\", EARLIEST_VALID_DATE);","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_UNTIL_DATE_LATER_THAN_LATEST_VALID_DATE \u003d","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \"Date of %s must not be later than \"","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + String.format(\"%s, resetting it to latest valid date\", LATEST_VALID_DATE);","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(TimeUtil.class);","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"jamessspanggg"},"content":"    /**","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code startTime} to be the current time.","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"jamessspanggg"},"content":"     */","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"jamessspanggg"},"content":"    public static void startTimer() {","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"jamessspanggg"},"content":"        startTime \u003d System.nanoTime();","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"jamessspanggg"},"content":"    /**","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the formatted elapsed time from {@code startTime} until current time.","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"jamessspanggg"},"content":"     */","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static String getElapsedTime() {","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"jamessspanggg"},"content":"        long endTime \u003d System.nanoTime();","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"jamessspanggg"},"content":"        double elapsedTime \u003d (double) (endTime - startTime) / 1_000_000_000.0;","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"jamessspanggg"},"content":"        int elapsedHours \u003d (int) elapsedTime / 3600;","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"jamessspanggg"},"content":"        int elapsedMinutes \u003d (int) (elapsedTime % 3600) / 60;","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"jamessspanggg"},"content":"        double elapsedSeconds \u003d elapsedTime % 60;","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String formattedElapsedTime \u003d \"\";","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"jamessspanggg"},"content":"        if (elapsedHours \u003e 0) {","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"            formattedElapsedTime +\u003d String.format(\" %d hour(s)\", elapsedHours);","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"jamessspanggg"},"content":"        }","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"jamessspanggg"},"content":"        if (elapsedMinutes \u003e 0) {","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"            formattedElapsedTime +\u003d String.format(\" %d minute(s)\", elapsedMinutes);","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"jamessspanggg"},"content":"        }","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"        formattedElapsedTime +\u003d String.format(\" %.2f second(s)\", elapsedSeconds);","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return formattedElapsedTime;","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns the formatted elapsed time from {@code startTime} until current time,","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * with an additional explanatory string.","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static String getElapsedTimeMessage() {","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return \"Elapsed processing time:\" + getElapsedTime();","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"jamessspanggg"},"content":"    /**","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns a valid {@link LocalDateTime} that is set to midnight for the given {@code sinceDate}.","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static LocalDateTime getSinceDate(LocalDateTime sinceDate) {","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return getValidDate(sinceDate).withHour(0).withMinute(0).withSecond(0);","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Returns a valid {@link LocalDateTime} that is set to 23:59:59 for the given {@code untilDate}.","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static LocalDateTime getUntilDate(LocalDateTime untilDate) {","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return getValidDate(untilDate).withHour(23).withMinute(59).withSecond(59);","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Returns a valid {@link LocalDateTime} that is within {@value EARLIEST_VALID_DATE} and {@value LATEST_VALID_DATE}.","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Resets {@code date} passed the closest valid date if it exceeds the date range.","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static LocalDateTime getValidDate(LocalDateTime date) {","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (date.isBefore(LocalDateTime.parse(EARLIEST_VALID_DATE))) {","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"            logger.warning(String.format(MESSAGE_SINCE_DATE_EARLIER_THAN_EARLIEST_VALID_DATE, date));","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return LocalDateTime.parse(EARLIEST_VALID_DATE);","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (date.isAfter(LocalDateTime.parse(LATEST_VALID_DATE))) {","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"            logger.warning(String.format(MESSAGE_UNTIL_DATE_LATER_THAN_LATEST_VALID_DATE, date));","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return LocalDateTime.parse(LATEST_VALID_DATE);","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return date;","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Returns a {@link LocalDateTime} that is one month before {@code cliUntilDate} (if present) or one month","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * before report generation date otherwise.","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static LocalDateTime getDateMinusAMonth(LocalDateTime cliUntilDate) {","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return getSinceDate(cliUntilDate.minusMonths(1));","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Returns a {@link LocalDateTime} that is {@code numOfDays} before {@code cliUntilDate} (if present) or one month","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * before report generation date otherwise.","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static LocalDateTime getDateMinusNDays(LocalDateTime cliUntilDate, int numOfDays) {","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return getSinceDate(cliUntilDate.minusDays(numOfDays));","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Returns a {@link LocalDateTime} that is {@code numOfDays} after {@code cliSinceDate} (if present).","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static LocalDateTime getDatePlusNDays(LocalDateTime cliSinceDate, int numOfDays) {","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return getUntilDate(cliSinceDate.plusDays(numOfDays));","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Returns current date with time set to 23:59:59. The time zone is adjusted to the given {@code zoneId}.","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static LocalDateTime getCurrentDate(ZoneId zoneId) {","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return LocalDateTime.now(zoneId).withHour(23).withMinute(59).withSecond(59).withNano(0);","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Returns the {@link LocalDateTime} of {@code ARBITRARY_FIRST_COMMIT_DATE} in the UTC time zone.","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public static LocalDateTime getArbitraryFirstCommitDateLocal() {","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return SinceDateArgumentType.getArbitraryFirstCommitDateLocal();","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Returns the {@link LocalDateTime} of {@code ARBITRARY_FIRST_COMMIT_DATE} adjusted for the time zone based on","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * {@code toZoneId}.","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public static LocalDateTime getArbitraryFirstCommitDateConverted(ZoneId toZoneId) {","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return SinceDateArgumentType.getArbitraryFirstCommitDateConverted(toZoneId);","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Checks whether the given {@code dateTime} is the {@code ARBITRARY_FIRST_COMMIT_DATE} in UTC time.","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public static boolean isEqualToArbitraryFirstDateUtc(LocalDateTime dateTime) {","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return dateTime.equals(getArbitraryFirstCommitDateLocal());","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Checks whether the given {@code dateTime} is the {@code ARBITRARY_FIRST_COMMIT_DATE} in the time zone given by","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * {@code zoneId}.","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public static boolean isEqualToArbitraryFirstDateConverted(LocalDateTime dateTime, ZoneId zoneId) {","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return dateTime.equals(getArbitraryFirstCommitDateConverted(zoneId));","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Verifies that {@code sinceDate} is earlier than {@code untilDate}.","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code sinceDate} supplied is later than {@code untilDate}.","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public static void verifyDatesRangeIsCorrect(LocalDateTime sinceDate, LocalDateTime untilDate)","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"-"},"content":"            throws ParseException {","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if (sinceDate.compareTo(untilDate) \u003e 0) {","isFullCredit":true},{"lineNumber":179,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_SINCE_DATE_LATER_THAN_UNTIL_DATE);","isFullCredit":true},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":182,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Verifies that {@code sinceDate} is no later than the date of report generation, given by {@code currentDate}.","isFullCredit":true},{"lineNumber":185,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code sinceDate} supplied is later than date of report generation.","isFullCredit":true},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public static void verifySinceDateIsValid(LocalDateTime sinceDate, LocalDateTime currentDate)","isFullCredit":true},{"lineNumber":189,"author":{"gitId":"-"},"content":"            throws ParseException {","isFullCredit":true},{"lineNumber":190,"author":{"gitId":"-"},"content":"        if (sinceDate.compareTo(currentDate) \u003e 0) {","isFullCredit":true},{"lineNumber":191,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_SINCE_DATE_LATER_THAN_TODAY_DATE);","isFullCredit":true},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":194,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":195,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * Extracts the first substring of {@code date} string that matches the {@code DATE_FORMAT_REGEX}.","isFullCredit":true},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public static String extractDate(String date) {","isFullCredit":true},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Matcher matcher \u003d Pattern.compile(DATE_FORMAT_REGEX).matcher(date);","isFullCredit":true},{"lineNumber":200,"author":{"gitId":"-"},"content":"        String extractedDate \u003d date;","isFullCredit":true},{"lineNumber":201,"author":{"gitId":"-"},"content":"        if (matcher.find()) {","isFullCredit":true},{"lineNumber":202,"author":{"gitId":"-"},"content":"            extractedDate \u003d matcher.group(1);","isFullCredit":true},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":204,"author":{"gitId":"-"},"content":"        return extractedDate;","isFullCredit":true},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":206,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":207,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * Parses the given {@code date} string as a {@link LocalDateTime} based on the {@code CLI_ARGS_DATE_FORMAT}.","isFullCredit":true},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * Uses {@link ResolverStyle#STRICT} to avoid unexpected dates like 31/02/2020.","isFullCredit":true},{"lineNumber":210,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * @throws java.text.ParseException if date cannot be parsed by the required format.","isFullCredit":true},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public static LocalDateTime parseDate(String date) throws java.text.ParseException {","isFullCredit":true},{"lineNumber":214,"author":{"gitId":"-"},"content":"        try {","isFullCredit":true},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return LocalDateTime.parse(date, CLI_ARGS_DATE_FORMAT.withResolverStyle(ResolverStyle.STRICT));","isFullCredit":true},{"lineNumber":216,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","isFullCredit":true},{"lineNumber":217,"author":{"gitId":"-"},"content":"            throw new java.text.ParseException(String.format(","isFullCredit":true},{"lineNumber":218,"author":{"gitId":"-"},"content":"                    \"Exception message: %s\\n\", e.getMessage()), e.getErrorIndex());","isFullCredit":true},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":221,"author":{"gitId":"jamessspanggg"},"content":"}","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":35,"-":186}},{"path":"src/systemtest/java/reposense/ConfigSystemTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenepeh"},"content":"package reposense;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"yong24s"},"content":"import static org.apache.tools.ant.types.Commandline.translateCommandline;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static reposense.util.TestUtil.loadResource;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yamidark"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yamidark"},"content":"import java.nio.file.Paths;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"yamidark"},"content":"import java.util.Arrays;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"eugenepeh"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.AfterEach;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assumptions;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.parallel.Execution;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.parallel.ExecutionMode;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.git.GitVersion;","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.model.SupportedDomainUrlMap;","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.parser.SinceDateArgumentType;","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.report.ErrorSummary;","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"eugenepeh"},"content":"import reposense.util.FileUtil;","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.util.InputBuilder;","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.util.SystemTestUtil;","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"@Execution(ExecutionMode.SAME_THREAD)","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"yamidark"},"content":"public class ConfigSystemTest {","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"yamidark"},"content":"    private static final List\u003cString\u003e TESTING_FILE_FORMATS \u003d Arrays.asList(\"java\", \"adoc\");","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String TEST_TIME_ZONE \u003d \"Asia/Singapore\";","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String OUTPUT_DIRECTORY \u003d \"ft_temp\";","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Path REPORT_DIRECTORY_PATH \u003d Paths.get(OUTPUT_DIRECTORY, \"reposense-report\");","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String GIT_VERSION_INSUFFICIENT_MESSAGE \u003d \"Git version 2.23.0 and above necessary to run test\";","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static boolean didNotCloneRepoNormally \u003d true;","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @BeforeEach","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUp() throws Exception {","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"        SupportedDomainUrlMap.clearAccessedSet();","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"        FileUtil.deleteDirectory(OUTPUT_DIRECTORY);","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ErrorSummary.getInstance().clearErrorSet();","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @AfterEach","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void tearDown() throws Exception {","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"        FileUtil.deleteDirectory(OUTPUT_DIRECTORY);","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * System test with a specified until date and a {@link SinceDateArgumentType#FIRST_COMMIT_DATE_SHORTHAND}","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * since date to capture from the first commit.","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void testSinceBeginningDateRange() {","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"        InputBuilder inputBuilder \u003d initInputBuilder()","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .addSinceDate(SinceDateArgumentType.FIRST_COMMIT_DATE_SHORTHAND)","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .addUntilDate(\"2/3/2019\");","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"        runTest(inputBuilder, false,","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"                \"ConfigSystemTest/sinceBeginningDateRange/expected\");","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void test30DaysFromUntilDate() {","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"        InputBuilder inputBuilder \u003d initInputBuilder().addUntilDate(\"1/11/2017\");","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"        runTest(inputBuilder, false,","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"                \"ConfigSystemTest/30daysFromUntilDate/expected\");","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"jamessspanggg"},"content":"     * System test with a specified since date and until date, with the last modified date time in each","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"jamessspanggg"},"content":"     * line of code.","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void testDateRangeWithModifiedDateTimeInLines() {","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"        InputBuilder inputBuilder \u003d initInputBuilder()","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .addSinceDate(\"1/9/2017\")","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/10/2017\")","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .addLastModifiedDateFlags();","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"        runTest(inputBuilder, false,","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"                \"ConfigSystemTest/dateRangeWithModifiedDateTimeInLines/expected\");","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * System test with a specified until date and a {@link SinceDateArgumentType#FIRST_COMMIT_DATE_SHORTHAND}","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * since date to capture from the first commit, using shallow cloning.","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void testSinceBeginningDateRangeWithShallowCloning() {","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"-"},"content":"        InputBuilder inputBuilder \u003d initInputBuilder()","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .addSinceDate(SinceDateArgumentType.FIRST_COMMIT_DATE_SHORTHAND)","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .addUntilDate(\"2/3/2019\")","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .addShallowCloning();","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"        runTest(inputBuilder, true,","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"-"},"content":"                \"ConfigSystemTest/sinceBeginningDateRangeWithShallowCloning/expected\");","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void test30DaysFromUntilDateWithShallowCloning() {","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"        InputBuilder inputBuilder \u003d initInputBuilder()","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .addUntilDate(\"1/11/2017\")","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .addShallowCloning();","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"        runTest(inputBuilder, true,","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \"ConfigSystemTest/30daysFromUntilDateWithShallowCloning/expected\");","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * System test with a specified until date and a {@link SinceDateArgumentType#FIRST_COMMIT_DATE_SHORTHAND}","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * since date to capture from the first commit, using find previous authors.","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void testSinceBeginningDateRangeWithFindPreviousAuthors() {","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Assumptions.assumeTrue(GitVersion.isGitVersionSufficientForFindingPreviousAuthors(),","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"-"},"content":"                GIT_VERSION_INSUFFICIENT_MESSAGE);","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"-"},"content":"        InputBuilder inputBuilder \u003d initInputBuilder()","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .addSinceDate(SinceDateArgumentType.FIRST_COMMIT_DATE_SHORTHAND)","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .addUntilDate(\"2/3/2019\")","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .addFindPreviousAuthors();","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"-"},"content":"        runTest(inputBuilder, true,","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"-"},"content":"                \"ConfigSystemTest/sinceBeginningDateRangeFindPreviousAuthors/expected\");","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void test30DaysFromUntilDateWithFindPreviousAuthors() {","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Assumptions.assumeTrue(GitVersion.isGitVersionSufficientForFindingPreviousAuthors(),","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"-"},"content":"                GIT_VERSION_INSUFFICIENT_MESSAGE);","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"-"},"content":"        InputBuilder inputBuilder \u003d initInputBuilder()","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .addUntilDate(\"1/11/2017\")","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .addFindPreviousAuthors();","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"-"},"content":"        runTest(inputBuilder, true,","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"-"},"content":"                \"ConfigSystemTest/30daysFromUntilDateFindPreviousAuthors/expected\");","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Returns a {@link InputBuilder} that is initialized with some default values.","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * \u003cbr\u003eConfig Folder Path: {@code ConfigSystemTest}","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * \u003cbr\u003eFormats: {@link ConfigSystemTest#TESTING_FILE_FORMATS TESTING_FILE_FORMATS}","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * \u003cbr\u003eTimezone: {@link ConfigSystemTest#TEST_TIME_ZONE TEST_TIME_ZONE}","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * \u003cbr\u003eOutput Folder Path: {@link ConfigSystemTest#OUTPUT_DIRECTORY OUTPUT_DIRECTORY}","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * \u003cbr\u003eTest Mode: {@code Enabled}","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private InputBuilder initInputBuilder() {","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Path configFolder \u003d loadResource(getClass(), \"ConfigSystemTest\");","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"yong24s"},"content":"        String formats \u003d String.join(\" \", TESTING_FILE_FORMATS);","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return new InputBuilder().addConfig(configFolder)","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"-"},"content":"                .addFormats(formats)","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"-"},"content":"                .addTimezone(TEST_TIME_ZONE)","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"-"},"content":"                .addTestMode()","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY);","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Generates the testing report and compares it with the expected report.","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Re-generates a normal report after the testing finished if the first report is shallow-cloned.","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * @param inputBuilder The input builder that contains the command line input specified by user.","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * @param shouldFreshClone Boolean for whether to clone repo again if it has been cloned before.","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * @param pathToResource The location at which files generated during the test are stored.","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"-"},"content":"    private void runTest(InputBuilder inputBuilder, boolean shouldFreshClone, String pathToResource) {","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (shouldFreshClone || didNotCloneRepoNormally) {","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"-"},"content":"            inputBuilder \u003d inputBuilder.addFreshCloning();","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"-"},"content":"        RepoSense.main(translateCommandline(inputBuilder.build()));","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Path actualFiles \u003d loadResource(getClass(), pathToResource);","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"-"},"content":"        SystemTestUtil.verifyReportJsonFiles(actualFiles, REPORT_DIRECTORY_PATH);","isFullCredit":true},{"lineNumber":179,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":180,"author":{"gitId":"-"},"content":"        didNotCloneRepoNormally \u003d inputBuilder.isShallowCloning();","isFullCredit":true},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":2,"yong24s":6,"yamidark":7,"eugenepeh":6,"-":161}},{"path":"src/test/java/reposense/authorship/FileAnalyzerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yamidark"},"content":"package reposense.authorship;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.Month;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"yamidark"},"content":"import java.util.Arrays;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yamidark"},"content":"import java.util.Collections;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assumptions;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"yamidark"},"content":"import reposense.authorship.model.FileInfo;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"yamidark"},"content":"import reposense.authorship.model.FileResult;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"eugenepeh"},"content":"import reposense.git.GitCheckout;","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.git.GitVersion;","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"yamidark"},"content":"import reposense.model.Author;","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.model.FileType;","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"eugenepeh"},"content":"import reposense.template.GitTestTemplate;","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.util.TestUtil;","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"yamidark"},"content":"public class FileAnalyzerTest extends GitTestTemplate {","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final LocalDateTime BLAME_TEST_SINCE_DATE \u003d","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"            TestUtil.getSinceDate(2018, Month.FEBRUARY.getValue(), 6);","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final LocalDateTime BLAME_TEST_UNTIL_DATE \u003d","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"            TestUtil.getUntilDate(2018, Month.FEBRUARY.getValue(), 8);","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final LocalDateTime PREVIOUS_AUTHOR_BLAME_TEST_SINCE_DATE \u003d","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"            TestUtil.getSinceDate(2018, Month.FEBRUARY.getValue(), 6);","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final LocalDateTime PREVIOUS_AUTHOR_BLAME_TEST_UNTIL_DATE \u003d","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"            TestUtil.getUntilDate(2021, Month.AUGUST.getValue(), 7);","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final LocalDateTime EMAIL_WITH_ADDITION_TEST_SINCE_DATE \u003d","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"            TestUtil.getSinceDate(2019, Month.MARCH.getValue(), 28);","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final LocalDateTime EMAIL_WITH_ADDITION_TEST_UNTIL_DATE \u003d","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"            TestUtil.getUntilDate(2019, Month.MARCH.getValue(), 28);","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final LocalDateTime MOVED_FILE_SINCE_DATE \u003d","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"            TestUtil.getSinceDate(2018, Month.FEBRUARY.getValue(), 7);","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final LocalDateTime MOVED_FILE_UNTIL_DATE \u003d","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"            TestUtil.getUntilDate(2018, Month.FEBRUARY.getValue(), 9);","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final LocalDateTime SHOULD_INCLUDE_LAST_MODIFIED_IN_LINES_SINCE_DATE \u003d","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"            TestUtil.getSinceDate(2018, Month.FEBRUARY.getValue(), 7);","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final LocalDateTime LAST_MODIFIED_DATE \u003d","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"            LocalDateTime.of(2020, Month.OCTOBER.getValue(), 27, 18, 0, 7);","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final LocalDateTime SHOULD_INCLUDE_LAST_MODIFIED_IN_LINES_UNTIL_DATE \u003d","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"            TestUtil.getUntilDate(2018, Month.FEBRUARY.getValue(), 9);","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final LocalDateTime ANALYZE_BINARY_FILES_SINCE_DATE \u003d","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"            TestUtil.getSinceDate(2017, Month.JANUARY.getValue(), 1);","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final LocalDateTime ANALYZE_BINARY_FILES_UNTIL_DATE \u003d","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"            TestUtil.getUntilDate(2020, Month.JANUARY.getValue(), 1);","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final LocalDateTime ANALYZE_LARGE_FILES_SINCE_DATE \u003d","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"            TestUtil.getSinceDate(2017, Month.JANUARY.getValue(), 1);","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final LocalDateTime ANALYZE_LARGE_FILES_UNTIL_DATE \u003d","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"            TestUtil.getUntilDate(2022, Month.MARCH.getValue(), 8);","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static final LocalDateTime ANALYZE_FILES_EMPTY_EMAIL_COMMIT_SINCE_DATE \u003d","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"            TestUtil.getSinceDate(2022, Month.FEBRUARY.getValue(), 10);","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static final LocalDateTime ANALYZE_FILES_EMPTY_EMAIL_COMMIT_UNTIL_DATE \u003d","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"            TestUtil.getUntilDate(2022, Month.FEBRUARY.getValue(), 14);","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static final Author[] EXPECTED_LINE_AUTHORS_BLAME_TEST \u003d {","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"            MAIN_AUTHOR, MAIN_AUTHOR, FAKE_AUTHOR, MAIN_AUTHOR","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"    };","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private static final Author[] EXPECTED_LINE_AUTHORS_MOVED_FILE \u003d {","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"            MAIN_AUTHOR, MAIN_AUTHOR, MAIN_AUTHOR, MAIN_AUTHOR","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"    };","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private static final Author[] EXPECTED_LINE_AUTHORS_PREVIOUS_AUTHORS_BLAME_TEST \u003d {","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"            MAIN_AUTHOR, MAIN_AUTHOR, FAKE_AUTHOR, MAIN_AUTHOR","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"    };","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private RepoConfiguration config;","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private FileInfoExtractor fileInfoExtractor \u003d new FileInfoExtractor();","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private FileInfoAnalyzer fileInfoAnalyzer \u003d new FileInfoAnalyzer();","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @BeforeEach","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void before() throws Exception {","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"        super.before();","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"        config \u003d configs.get();","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"        config.setZoneId(TIME_ZONE_ID);","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(MAIN_AUTHOR_NAME), MAIN_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(FAKE_AUTHOR_NAME), FAKE_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(IGNORED_AUTHOR_NAME), IGNORED_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void blameTest() {","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"jamessspanggg"},"content":"        config.setSinceDate(BLAME_TEST_SINCE_DATE);","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"jamessspanggg"},"content":"        config.setUntilDate(BLAME_TEST_UNTIL_DATE);","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"yamidark"},"content":"        FileResult fileResult \u003d getFileResult(\"blameTest.java\");","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFileAnalysisCorrectness(fileResult, Arrays.asList(EXPECTED_LINE_AUTHORS_BLAME_TEST));","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void blameWithPreviousAuthorsTest() {","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Assumptions.assumeTrue(GitVersion.isGitVersionSufficientForFindingPreviousAuthors());","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"        config.setSinceDate(PREVIOUS_AUTHOR_BLAME_TEST_SINCE_DATE);","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"        config.setUntilDate(PREVIOUS_AUTHOR_BLAME_TEST_UNTIL_DATE);","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"        config.setIsFindingPreviousAuthorsPerformed(true);","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"-"},"content":"        config.setBranch(TEST_REPO_BLAME_WITH_PREVIOUS_AUTHORS_BRANCH);","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), TEST_REPO_BLAME_WITH_PREVIOUS_AUTHORS_BRANCH);","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"-"},"content":"        createTestIgnoreRevsFile(AUTHOR_TO_IGNORE_BLAME_COMMIT_LIST_07082021);","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"        FileResult fileResult \u003d getFileResult(\"blameTest.java\");","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"        removeTestIgnoreRevsFile();","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFileAnalysisCorrectness(fileResult, Arrays.asList(EXPECTED_LINE_AUTHORS_PREVIOUS_AUTHORS_BLAME_TEST));","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void movedFileBlameTest() {","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"jamessspanggg"},"content":"        config.setSinceDate(MOVED_FILE_SINCE_DATE);","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"jamessspanggg"},"content":"        config.setUntilDate(MOVED_FILE_UNTIL_DATE);","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"yamidark"},"content":"        FileResult fileResult \u003d getFileResult(\"newPos/movedFile.java\");","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertFileAnalysisCorrectness(fileResult, Arrays.asList(EXPECTED_LINE_AUTHORS_MOVED_FILE));","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void blameTestDateRange() throws Exception {","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutDate(config.getRepoRoot(), config.getBranch(), BLAME_TEST_UNTIL_DATE, config.getZoneId());","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"jamessspanggg"},"content":"        config.setSinceDate(BLAME_TEST_SINCE_DATE);","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"jamessspanggg"},"content":"        config.setUntilDate(BLAME_TEST_UNTIL_DATE);","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"yamidark"},"content":"        FileResult fileResult \u003d getFileResult(\"blameTest.java\");","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertFileAnalysisCorrectness(fileResult, Arrays.asList(EXPECTED_LINE_AUTHORS_BLAME_TEST));","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void blameWithPreviousAuthorsTestDateRange() throws Exception {","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Assumptions.assumeTrue(GitVersion.isGitVersionSufficientForFindingPreviousAuthors());","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"-"},"content":"        config.setSinceDate(PREVIOUS_AUTHOR_BLAME_TEST_SINCE_DATE);","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"-"},"content":"        config.setUntilDate(PREVIOUS_AUTHOR_BLAME_TEST_UNTIL_DATE);","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"-"},"content":"        config.setIsFindingPreviousAuthorsPerformed(true);","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"-"},"content":"        config.setBranch(TEST_REPO_BLAME_WITH_PREVIOUS_AUTHORS_BRANCH);","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), TEST_REPO_BLAME_WITH_PREVIOUS_AUTHORS_BRANCH);","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutDate(config.getRepoRoot(), config.getBranch(), PREVIOUS_AUTHOR_BLAME_TEST_UNTIL_DATE,","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"-"},"content":"                config.getZoneId());","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"-"},"content":"        createTestIgnoreRevsFile(AUTHOR_TO_IGNORE_BLAME_COMMIT_LIST_07082021);","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"-"},"content":"        FileResult fileResult \u003d getFileResult(\"blameTest.java\");","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"-"},"content":"        removeTestIgnoreRevsFile();","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertFileAnalysisCorrectness(fileResult, Arrays.asList(EXPECTED_LINE_AUTHORS_PREVIOUS_AUTHORS_BLAME_TEST));","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void movedFileBlameTestDateRange() throws Exception {","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutDate(config.getRepoRoot(), config.getBranch(), MOVED_FILE_UNTIL_DATE, config.getZoneId());","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"jamessspanggg"},"content":"        config.setSinceDate(MOVED_FILE_SINCE_DATE);","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"jamessspanggg"},"content":"        config.setUntilDate(MOVED_FILE_UNTIL_DATE);","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"yamidark"},"content":"        FileResult fileResult \u003d getFileResult(\"newPos/movedFile.java\");","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertFileAnalysisCorrectness(fileResult, Arrays.asList(EXPECTED_LINE_AUTHORS_MOVED_FILE));","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"yamidark"},"content":"    @Test","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void analyzeTextFile_blameTestFileIgnoreFakeAuthorCommitFullHash_success() {","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"jamessspanggg"},"content":"        config.setSinceDate(BLAME_TEST_SINCE_DATE);","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"jamessspanggg"},"content":"        config.setUntilDate(BLAME_TEST_UNTIL_DATE);","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"-"},"content":"        FileInfo fileInfoFull \u003d fileInfoExtractor.generateFileInfo(config, \"blameTest.java\");","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"yamidark"},"content":"        config.setIgnoreCommitList(Collections.singletonList(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018));","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"-"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfoFull);","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"-"},"content":"        FileInfo fileInfoShort \u003d fileInfoExtractor.generateFileInfo(config, \"blameTest.java\");","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"yamidark"},"content":"        config.setIgnoreCommitList(","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"-"},"content":"                Collections.singletonList(","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"-"},"content":"                        new CommitHash(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING.substring(0, 8))));","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"-"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfoShort);","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(fileInfoFull, fileInfoShort);","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(new Author(MAIN_AUTHOR_NAME), fileInfoFull.getLine(1).getAuthor());","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(new Author(MAIN_AUTHOR_NAME), fileInfoFull.getLine(2).getAuthor());","isFullCredit":true},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(new Author(MAIN_AUTHOR_NAME), fileInfoFull.getLine(4).getAuthor());","isFullCredit":true},{"lineNumber":180,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":181,"author":{"gitId":"yamidark"},"content":"        // line added in commit that was ignored","isFullCredit":true},{"lineNumber":182,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(Author.UNKNOWN_AUTHOR, fileInfoFull.getLine(3).getAuthor());","isFullCredit":true},{"lineNumber":183,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":184,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void analyzeFile_blameWithPreviousAuthorsIgnoreFirstCommitThatChangedLine_assignLineToUnknownAuthor() {","isFullCredit":true},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Assumptions.assumeTrue(GitVersion.isGitVersionSufficientForFindingPreviousAuthors());","isFullCredit":true},{"lineNumber":188,"author":{"gitId":"-"},"content":"        config.setSinceDate(PREVIOUS_AUTHOR_BLAME_TEST_SINCE_DATE);","isFullCredit":true},{"lineNumber":189,"author":{"gitId":"-"},"content":"        config.setUntilDate(PREVIOUS_AUTHOR_BLAME_TEST_UNTIL_DATE);","isFullCredit":true},{"lineNumber":190,"author":{"gitId":"-"},"content":"        config.setIsFindingPreviousAuthorsPerformed(true);","isFullCredit":true},{"lineNumber":191,"author":{"gitId":"-"},"content":"        config.setBranch(TEST_REPO_BLAME_WITH_PREVIOUS_AUTHORS_BRANCH);","isFullCredit":true},{"lineNumber":192,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), TEST_REPO_BLAME_WITH_PREVIOUS_AUTHORS_BRANCH);","isFullCredit":true},{"lineNumber":193,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":194,"author":{"gitId":"-"},"content":"        FileInfo fileInfoFull \u003d fileInfoExtractor.generateFileInfo(config, \"blameTest.java\");","isFullCredit":true},{"lineNumber":195,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":196,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(Collections.singletonList(MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018));","isFullCredit":true},{"lineNumber":197,"author":{"gitId":"-"},"content":"        createTestIgnoreRevsFile(config.getIgnoreCommitList());","isFullCredit":true},{"lineNumber":198,"author":{"gitId":"-"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfoFull);","isFullCredit":true},{"lineNumber":199,"author":{"gitId":"-"},"content":"        removeTestIgnoreRevsFile();","isFullCredit":true},{"lineNumber":200,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":201,"author":{"gitId":"-"},"content":"        FileInfo fileInfoShort \u003d fileInfoExtractor.generateFileInfo(config, \"blameTest.java\");","isFullCredit":true},{"lineNumber":202,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(Collections.singletonList(","isFullCredit":true},{"lineNumber":203,"author":{"gitId":"-"},"content":"                        new CommitHash(MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018_STRING.substring(0, 8))));","isFullCredit":true},{"lineNumber":204,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(createTestIgnoreRevsFile(config.getIgnoreCommitList()));","isFullCredit":true},{"lineNumber":205,"author":{"gitId":"-"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfoShort);","isFullCredit":true},{"lineNumber":206,"author":{"gitId":"-"},"content":"        removeTestIgnoreRevsFile();","isFullCredit":true},{"lineNumber":207,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":208,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(fileInfoFull, fileInfoShort);","isFullCredit":true},{"lineNumber":209,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":210,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(new Author(IGNORED_AUTHOR_NAME), fileInfoFull.getLine(2).getAuthor());","isFullCredit":true},{"lineNumber":211,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(new Author(FAKE_AUTHOR_NAME), fileInfoFull.getLine(3).getAuthor());","isFullCredit":true},{"lineNumber":212,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(new Author(IGNORED_AUTHOR_NAME), fileInfoFull.getLine(4).getAuthor());","isFullCredit":true},{"lineNumber":213,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":214,"author":{"gitId":"-"},"content":"        // line added in commit that was ignored","isFullCredit":true},{"lineNumber":215,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(Author.UNKNOWN_AUTHOR, fileInfoFull.getLine(1).getAuthor());","isFullCredit":true},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":217,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":218,"author":{"gitId":"yamidark"},"content":"    @Test","isFullCredit":true},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public void analyzeTextFile_blameTestFileIgnoreAllCommit_success() {","isFullCredit":true},{"lineNumber":220,"author":{"gitId":"jamessspanggg"},"content":"        config.setSinceDate(BLAME_TEST_SINCE_DATE);","isFullCredit":true},{"lineNumber":221,"author":{"gitId":"jamessspanggg"},"content":"        config.setUntilDate(BLAME_TEST_UNTIL_DATE);","isFullCredit":true},{"lineNumber":222,"author":{"gitId":"-"},"content":"        FileInfo fileInfoFull \u003d fileInfoExtractor.generateFileInfo(config, \"blameTest.java\");","isFullCredit":true},{"lineNumber":223,"author":{"gitId":"yamidark"},"content":"        config.setIgnoreCommitList(Arrays.asList(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018,","isFullCredit":true},{"lineNumber":224,"author":{"gitId":"yamidark"},"content":"                MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018));","isFullCredit":true},{"lineNumber":225,"author":{"gitId":"-"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfoFull);","isFullCredit":true},{"lineNumber":226,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":227,"author":{"gitId":"-"},"content":"        FileInfo fileInfoShort \u003d fileInfoExtractor.generateFileInfo(config, \"blameTest.java\");","isFullCredit":true},{"lineNumber":228,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(CommitHash.convertStringsToCommits(","isFullCredit":true},{"lineNumber":229,"author":{"gitId":"-"},"content":"                Arrays.asList(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING.substring(0, 8),","isFullCredit":true},{"lineNumber":230,"author":{"gitId":"-"},"content":"                        MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018_STRING.substring(0, 8))));","isFullCredit":true},{"lineNumber":231,"author":{"gitId":"-"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfoShort);","isFullCredit":true},{"lineNumber":232,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":233,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(fileInfoFull, fileInfoShort);","isFullCredit":true},{"lineNumber":234,"author":{"gitId":"yamidark"},"content":"        fileInfoFull.getLines().forEach(lineInfo -\u003e","isFullCredit":true},{"lineNumber":235,"author":{"gitId":"-"},"content":"                Assertions.assertEquals(Author.UNKNOWN_AUTHOR, lineInfo.getAuthor()));","isFullCredit":true},{"lineNumber":236,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":237,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":238,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":239,"author":{"gitId":"-"},"content":"    public void analyzeFile_blameWithPreviousAuthorTestFileIgnoreAllCommit_success() {","isFullCredit":true},{"lineNumber":240,"author":{"gitId":"-"},"content":"        Assumptions.assumeTrue(GitVersion.isGitVersionSufficientForFindingPreviousAuthors());","isFullCredit":true},{"lineNumber":241,"author":{"gitId":"-"},"content":"        config.setSinceDate(PREVIOUS_AUTHOR_BLAME_TEST_SINCE_DATE);","isFullCredit":true},{"lineNumber":242,"author":{"gitId":"-"},"content":"        config.setUntilDate(PREVIOUS_AUTHOR_BLAME_TEST_UNTIL_DATE);","isFullCredit":true},{"lineNumber":243,"author":{"gitId":"-"},"content":"        config.setIsFindingPreviousAuthorsPerformed(true);","isFullCredit":true},{"lineNumber":244,"author":{"gitId":"-"},"content":"        config.setBranch(TEST_REPO_BLAME_WITH_PREVIOUS_AUTHORS_BRANCH);","isFullCredit":true},{"lineNumber":245,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), TEST_REPO_BLAME_WITH_PREVIOUS_AUTHORS_BRANCH);","isFullCredit":true},{"lineNumber":246,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":247,"author":{"gitId":"-"},"content":"        FileInfo fileInfoFull \u003d fileInfoExtractor.generateFileInfo(config, \"blameTest.java\");","isFullCredit":true},{"lineNumber":248,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(Arrays.asList(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018,","isFullCredit":true},{"lineNumber":249,"author":{"gitId":"-"},"content":"                MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018, AUTHOR_TO_IGNORE_BLAME_TEST_FILE_COMMIT_07082021));","isFullCredit":true},{"lineNumber":250,"author":{"gitId":"-"},"content":"        createTestIgnoreRevsFile(config.getIgnoreCommitList());","isFullCredit":true},{"lineNumber":251,"author":{"gitId":"-"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfoFull);","isFullCredit":true},{"lineNumber":252,"author":{"gitId":"-"},"content":"        removeTestIgnoreRevsFile();","isFullCredit":true},{"lineNumber":253,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":254,"author":{"gitId":"-"},"content":"        FileInfo fileInfoShort \u003d fileInfoExtractor.generateFileInfo(config, \"blameTest.java\");","isFullCredit":true},{"lineNumber":255,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(CommitHash.convertStringsToCommits(","isFullCredit":true},{"lineNumber":256,"author":{"gitId":"-"},"content":"                Arrays.asList(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING.substring(0, 8),","isFullCredit":true},{"lineNumber":257,"author":{"gitId":"-"},"content":"                        MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018_STRING.substring(0, 8),","isFullCredit":true},{"lineNumber":258,"author":{"gitId":"-"},"content":"                        AUTHOR_TO_IGNORE_BLAME_TEST_FILE_COMMIT_07082021_STRING.substring(0, 8))));","isFullCredit":true},{"lineNumber":259,"author":{"gitId":"-"},"content":"        createTestIgnoreRevsFile(config.getIgnoreCommitList());","isFullCredit":true},{"lineNumber":260,"author":{"gitId":"-"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfoShort);","isFullCredit":true},{"lineNumber":261,"author":{"gitId":"-"},"content":"        removeTestIgnoreRevsFile();","isFullCredit":true},{"lineNumber":262,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":263,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(fileInfoFull, fileInfoShort);","isFullCredit":true},{"lineNumber":264,"author":{"gitId":"-"},"content":"        fileInfoFull.getLines().forEach(lineInfo -\u003e","isFullCredit":true},{"lineNumber":265,"author":{"gitId":"-"},"content":"                Assertions.assertEquals(Author.UNKNOWN_AUTHOR, lineInfo.getAuthor()));","isFullCredit":true},{"lineNumber":266,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":267,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":268,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":269,"author":{"gitId":"-"},"content":"    public void analyzeTextFile_blameTestFileIgnoreRangedCommit_success() {","isFullCredit":true},{"lineNumber":270,"author":{"gitId":"-"},"content":"        config.setSinceDate(BLAME_TEST_SINCE_DATE);","isFullCredit":true},{"lineNumber":271,"author":{"gitId":"-"},"content":"        config.setUntilDate(BLAME_TEST_UNTIL_DATE);","isFullCredit":true},{"lineNumber":272,"author":{"gitId":"-"},"content":"        FileInfo fileInfoFull \u003d fileInfoExtractor.generateFileInfo(config, \"blameTest.java\");","isFullCredit":true},{"lineNumber":273,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(FAKE_AUTHOR_BLAME_RANGED_COMMIT_LIST_09022018);","isFullCredit":true},{"lineNumber":274,"author":{"gitId":"-"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfoFull);","isFullCredit":true},{"lineNumber":275,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":276,"author":{"gitId":"-"},"content":"        FileInfo fileInfoRanged \u003d fileInfoExtractor.generateFileInfo(config, \"blameTest.java\");","isFullCredit":true},{"lineNumber":277,"author":{"gitId":"-"},"content":"        String rangedCommit \u003d FAKE_AUTHOR_BLAME_RANGED_COMMIT_ONE_06022018_STRING + \"..\"","isFullCredit":true},{"lineNumber":278,"author":{"gitId":"-"},"content":"                + FAKE_AUTHOR_BLAME_RANGED_COMMIT_FOUR_08022018_STRING;","isFullCredit":true},{"lineNumber":279,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(CommitHash.getHashes(config.getRepoRoot(), config.getBranch(),","isFullCredit":true},{"lineNumber":280,"author":{"gitId":"-"},"content":"                new CommitHash(rangedCommit)).collect(Collectors.toList()));","isFullCredit":true},{"lineNumber":281,"author":{"gitId":"-"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfoRanged);","isFullCredit":true},{"lineNumber":282,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":283,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(fileInfoFull, fileInfoRanged);","isFullCredit":true},{"lineNumber":284,"author":{"gitId":"-"},"content":"        fileInfoFull.getLines().forEach(lineInfo -\u003e","isFullCredit":true},{"lineNumber":285,"author":{"gitId":"-"},"content":"                Assertions.assertEquals(Author.UNKNOWN_AUTHOR, lineInfo.getAuthor()));","isFullCredit":true},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":287,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":288,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":289,"author":{"gitId":"-"},"content":"    public void analyzeTextFile_blameTestFileIgnoreRangedCommitShort_success() {","isFullCredit":true},{"lineNumber":290,"author":{"gitId":"-"},"content":"        config.setSinceDate(BLAME_TEST_SINCE_DATE);","isFullCredit":true},{"lineNumber":291,"author":{"gitId":"-"},"content":"        config.setUntilDate(BLAME_TEST_UNTIL_DATE);","isFullCredit":true},{"lineNumber":292,"author":{"gitId":"-"},"content":"        FileInfo fileInfoFull \u003d fileInfoExtractor.generateFileInfo(config, \"blameTest.java\");","isFullCredit":true},{"lineNumber":293,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(FAKE_AUTHOR_BLAME_RANGED_COMMIT_LIST_09022018);","isFullCredit":true},{"lineNumber":294,"author":{"gitId":"-"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfoFull);","isFullCredit":true},{"lineNumber":295,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":296,"author":{"gitId":"-"},"content":"        FileInfo fileInfoRangedShort \u003d fileInfoExtractor.generateFileInfo(config, \"blameTest.java\");","isFullCredit":true},{"lineNumber":297,"author":{"gitId":"-"},"content":"        String rangedCommitShort \u003d FAKE_AUTHOR_BLAME_RANGED_COMMIT_ONE_06022018_STRING.substring(0, 8) + \"..\"","isFullCredit":true},{"lineNumber":298,"author":{"gitId":"-"},"content":"                + FAKE_AUTHOR_BLAME_RANGED_COMMIT_FOUR_08022018_STRING.substring(0, 8);","isFullCredit":true},{"lineNumber":299,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(CommitHash.getHashes(config.getRepoRoot(), config.getBranch(),","isFullCredit":true},{"lineNumber":300,"author":{"gitId":"-"},"content":"                new CommitHash(rangedCommitShort)).collect(Collectors.toList()));","isFullCredit":true},{"lineNumber":301,"author":{"gitId":"-"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfoRangedShort);","isFullCredit":true},{"lineNumber":302,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":303,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(fileInfoFull, fileInfoRangedShort);","isFullCredit":true},{"lineNumber":304,"author":{"gitId":"-"},"content":"        fileInfoFull.getLines().forEach(lineInfo -\u003e","isFullCredit":true},{"lineNumber":305,"author":{"gitId":"-"},"content":"                Assertions.assertEquals(Author.UNKNOWN_AUTHOR, lineInfo.getAuthor()));","isFullCredit":true},{"lineNumber":306,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":307,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":308,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":309,"author":{"gitId":"-"},"content":"    public void analyzeTextFile_emailWithAdditionOperator_success() {","isFullCredit":true},{"lineNumber":310,"author":{"gitId":"jamessspanggg"},"content":"        config.setSinceDate(EMAIL_WITH_ADDITION_TEST_SINCE_DATE);","isFullCredit":true},{"lineNumber":311,"author":{"gitId":"jamessspanggg"},"content":"        config.setUntilDate(EMAIL_WITH_ADDITION_TEST_UNTIL_DATE);","isFullCredit":true},{"lineNumber":312,"author":{"gitId":"-"},"content":"        config.setBranch(\"617-FileAnalyzerTest-analyzeFile_emailWithAdditionOperator_success\");","isFullCredit":true},{"lineNumber":313,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), config.getBranch());","isFullCredit":true},{"lineNumber":314,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(MINGYI_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":315,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));","isFullCredit":true},{"lineNumber":316,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":317,"author":{"gitId":"-"},"content":"        FileInfo fileInfo \u003d fileInfoExtractor.generateFileInfo(config, \"pr_617.java\");","isFullCredit":true},{"lineNumber":318,"author":{"gitId":"-"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfo);","isFullCredit":true},{"lineNumber":319,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":320,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, fileInfo.getLines().size());","isFullCredit":true},{"lineNumber":321,"author":{"gitId":"-"},"content":"        fileInfo.getLines().forEach(lineInfo -\u003e Assertions.assertEquals(author, lineInfo.getAuthor()));","isFullCredit":true},{"lineNumber":322,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":323,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":324,"author":{"gitId":"jamessspanggg"},"content":"    @Test","isFullCredit":true},{"lineNumber":325,"author":{"gitId":"-"},"content":"    public void analyzeTextFile_shouldIncludeLastModifiedDateInLines_success() {","isFullCredit":true},{"lineNumber":326,"author":{"gitId":"jamessspanggg"},"content":"        config.setSinceDate(SHOULD_INCLUDE_LAST_MODIFIED_IN_LINES_SINCE_DATE);","isFullCredit":true},{"lineNumber":327,"author":{"gitId":"jamessspanggg"},"content":"        config.setUntilDate(SHOULD_INCLUDE_LAST_MODIFIED_IN_LINES_UNTIL_DATE);","isFullCredit":true},{"lineNumber":328,"author":{"gitId":"jamessspanggg"},"content":"        config.setIsLastModifiedDateIncluded(true);","isFullCredit":true},{"lineNumber":329,"author":{"gitId":"jamessspanggg"},"content":"        config.setBranch(\"1345-FileAnalyzerTest-analyzeFile_shouldIncludeLastModifiedDateInLines_success\");","isFullCredit":true},{"lineNumber":330,"author":{"gitId":"jamessspanggg"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), config.getBranch());","isFullCredit":true},{"lineNumber":331,"author":{"gitId":"jamessspanggg"},"content":"        Author author \u003d new Author(JAMES_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":332,"author":{"gitId":"jamessspanggg"},"content":"        config.setAuthorList(Collections.singletonList(author));","isFullCredit":true},{"lineNumber":333,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":334,"author":{"gitId":"-"},"content":"        FileInfo fileInfo \u003d fileInfoExtractor.generateFileInfo(config, \"includeLastModifiedDateInLinesTest.java\");","isFullCredit":true},{"lineNumber":335,"author":{"gitId":"-"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfo);","isFullCredit":true},{"lineNumber":336,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":337,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(4, fileInfo.getLines().size());","isFullCredit":true},{"lineNumber":338,"author":{"gitId":"jamessspanggg"},"content":"        fileInfo.getLines().forEach(lineInfo -\u003e","isFullCredit":true},{"lineNumber":339,"author":{"gitId":"-"},"content":"                Assertions.assertEquals(LAST_MODIFIED_DATE, lineInfo.getLastModifiedDate()));","isFullCredit":true},{"lineNumber":340,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":341,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":342,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":343,"author":{"gitId":"-"},"content":"    public void analyzeTextFile_fileExceedingFileSizeLimit_success() {","isFullCredit":true},{"lineNumber":344,"author":{"gitId":"-"},"content":"        config.setSinceDate(ANALYZE_LARGE_FILES_SINCE_DATE);","isFullCredit":true},{"lineNumber":345,"author":{"gitId":"-"},"content":"        config.setUntilDate(ANALYZE_LARGE_FILES_UNTIL_DATE);","isFullCredit":true},{"lineNumber":346,"author":{"gitId":"-"},"content":"        config.setBranch(\"1647-FileAnalyzerTest-analyzeTextFile_fileExceedingFileSizeLimit_success\");","isFullCredit":true},{"lineNumber":347,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), config.getBranch());","isFullCredit":true},{"lineNumber":348,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":349,"author":{"gitId":"-"},"content":"        FileInfo fileInfo \u003d fileInfoExtractor.generateFileInfo(config, \"largeFile.json\");","isFullCredit":true},{"lineNumber":350,"author":{"gitId":"-"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfo);","isFullCredit":true},{"lineNumber":351,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":352,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(46902, fileInfo.getLines().size());","isFullCredit":true},{"lineNumber":353,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(fileInfo.getFileSize() \u003e config.getFileSizeLimit(), fileInfo.exceedsFileLimit());","isFullCredit":true},{"lineNumber":354,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":355,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":356,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":357,"author":{"gitId":"-"},"content":"    public void analyzeBinaryFile_shouldSetLinesToBeEmpty_success() {","isFullCredit":true},{"lineNumber":358,"author":{"gitId":"-"},"content":"        config.setSinceDate(ANALYZE_BINARY_FILES_SINCE_DATE);","isFullCredit":true},{"lineNumber":359,"author":{"gitId":"-"},"content":"        config.setUntilDate(ANALYZE_BINARY_FILES_UNTIL_DATE);","isFullCredit":true},{"lineNumber":360,"author":{"gitId":"-"},"content":"        config.setBranch(\"728-FileInfoExtractorTest-getNonBinaryFilesList_directoryWithBinaryFiles_success\");","isFullCredit":true},{"lineNumber":361,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), config.getBranch());","isFullCredit":true},{"lineNumber":362,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e binaryFileInfos \u003d fileInfoExtractor.extractBinaryFileInfos(config);","isFullCredit":true},{"lineNumber":363,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":364,"author":{"gitId":"-"},"content":"        for (FileInfo binaryFileInfo: binaryFileInfos) {","isFullCredit":true},{"lineNumber":365,"author":{"gitId":"-"},"content":"            fileInfoAnalyzer.analyzeBinaryFile(config, binaryFileInfo);","isFullCredit":true},{"lineNumber":366,"author":{"gitId":"-"},"content":"            Assertions.assertEquals(0, binaryFileInfo.getLines().size());","isFullCredit":true},{"lineNumber":367,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":368,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":369,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":370,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":371,"author":{"gitId":"-"},"content":"    public void analyzeBinaryFile_nonExistingFilePath_success() {","isFullCredit":true},{"lineNumber":372,"author":{"gitId":"-"},"content":"        config.setSinceDate(ANALYZE_BINARY_FILES_SINCE_DATE);","isFullCredit":true},{"lineNumber":373,"author":{"gitId":"-"},"content":"        config.setUntilDate(ANALYZE_BINARY_FILES_UNTIL_DATE);","isFullCredit":true},{"lineNumber":374,"author":{"gitId":"-"},"content":"        config.setBranch(\"728-FileInfoExtractorTest-getNonBinaryFilesList_directoryWithBinaryFiles_success\");","isFullCredit":true},{"lineNumber":375,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), config.getBranch());","isFullCredit":true},{"lineNumber":376,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":377,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e binaryFileInfos \u003d Arrays.asList(new FileInfo(\"/nonExistingJpgPicture.jpg\"),","isFullCredit":true},{"lineNumber":378,"author":{"gitId":"-"},"content":"                new FileInfo(\"/nonExistingPngPicture.png\"));","isFullCredit":true},{"lineNumber":379,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":380,"author":{"gitId":"-"},"content":"        for (FileInfo binaryFileInfo: binaryFileInfos) {","isFullCredit":true},{"lineNumber":381,"author":{"gitId":"-"},"content":"            Assertions.assertNull(fileInfoAnalyzer.analyzeBinaryFile(config, binaryFileInfo));","isFullCredit":true},{"lineNumber":382,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":383,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":384,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":385,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":386,"author":{"gitId":"-"},"content":"    public void analyzeFile_filesWithEmptyEmailCommit_success() {","isFullCredit":true},{"lineNumber":387,"author":{"gitId":"-"},"content":"        config.setSinceDate(ANALYZE_FILES_EMPTY_EMAIL_COMMIT_SINCE_DATE);","isFullCredit":true},{"lineNumber":388,"author":{"gitId":"-"},"content":"        config.setUntilDate(ANALYZE_FILES_EMPTY_EMAIL_COMMIT_UNTIL_DATE);","isFullCredit":true},{"lineNumber":389,"author":{"gitId":"-"},"content":"        config.setBranch(\"1636-FileAnalyzerTest-analyzeFile_filesWithEmptyEmailCommit_success\");","isFullCredit":true},{"lineNumber":390,"author":{"gitId":"-"},"content":"        config.setAuthorList(Arrays.asList(new Author(\"chan-j-d\")));","isFullCredit":true},{"lineNumber":391,"author":{"gitId":"-"},"content":"        List\u003cString\u003e relevantFileFormats \u003d Arrays.asList(\"txt\", \"png\");","isFullCredit":true},{"lineNumber":392,"author":{"gitId":"-"},"content":"        config.setFormats(FileType.convertFormatStringsToFileTypes(relevantFileFormats));","isFullCredit":true},{"lineNumber":393,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), config.getBranch());","isFullCredit":true},{"lineNumber":394,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":395,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e fileInfos \u003d fileInfoExtractor.extractTextFileInfos(config);","isFullCredit":true},{"lineNumber":396,"author":{"gitId":"-"},"content":"        FileInfo textFileInfo \u003d fileInfos.get(0);","isFullCredit":true},{"lineNumber":397,"author":{"gitId":"-"},"content":"        FileInfo binaryFileInfo \u003d new FileInfo(\"empty-email-commit-binary-file.png\");","isFullCredit":true},{"lineNumber":398,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":399,"author":{"gitId":"-"},"content":"        Assertions.assertNotNull(fileInfoAnalyzer.analyzeTextFile(config, textFileInfo));","isFullCredit":true},{"lineNumber":400,"author":{"gitId":"-"},"content":"        Assertions.assertNotNull(fileInfoAnalyzer.analyzeBinaryFile(config, binaryFileInfo));","isFullCredit":true},{"lineNumber":401,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":402,"author":{"gitId":"-"},"content":"}","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":27,"yamidark":31,"eugenepeh":3,"-":341}},{"path":"src/test/java/reposense/authorship/FileInfoExtractorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yamidark"},"content":"package reposense.authorship;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static reposense.model.RepoConfiguration.DEFAULT_FILE_SIZE_LIMIT;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"yamidark"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yamidark"},"content":"import java.nio.file.Paths;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.Month;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"eugenepeh"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"yamidark"},"content":"import reposense.authorship.model.FileInfo;","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"eugenepeh"},"content":"import reposense.git.GitCheckout;","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"yamidark"},"content":"import reposense.model.Author;","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.model.FileTypeTest;","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"eugenepeh"},"content":"import reposense.template.GitTestTemplate;","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"yamidark"},"content":"import reposense.util.TestUtil;","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"yamidark"},"content":"public class FileInfoExtractorTest extends GitTestTemplate {","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"yamidark"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"resources\", \"FileInfoExtractorTest\");","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"yamidark"},"content":"    private static final Path FILE_WITH_SPECIAL_CHARACTER \u003d TEST_DATA_FOLDER.resolve(\"fileWithSpecialCharacters.txt\");","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"yamidark"},"content":"    private static final Path FILE_WITHOUT_SPECIAL_CHARACTER \u003d TEST_DATA_FOLDER","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"yamidark"},"content":"            .resolve(\"fileWithoutSpecialCharacters.txt\");","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"yamidark"},"content":"    private static final String EDITED_FILE_INFO_BRANCH \u003d \"getEditedFileInfos-test\";","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DIRECTORY_WITH_VALID_WHITELISTED_NAME_BRANCH \u003d \"directory-with-valid-whitelisted-name\";","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String BRANCH_WITH_VALID_WHITELISTED_FILE_NAME_BRANCH \u003d","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \"535-FileInfoExtractorTest-branchWithValidWhitelistedFileName.txt\";","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String BRANCH_WITH_BINARY_FILES \u003d","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \"728-FileInfoExtractorTest-getNonBinaryFilesList_directoryWithBinaryFiles_success\";","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String BRANCH_WITH_RARE_FILE_FORMATS \u003d","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \"708-FileInfoExtractorTest-extractFileInfos_withoutSpecifiedFormats_success\";","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String BRANCH_WITH_LARGE_FILE \u003d","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \"1647-FileAnalyzerTest-analyzeTextFile_fileExceedingFileSizeLimit_success\";","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String FILE_WITH_LARGE_SIZE \u003d \"largeFile.json\";","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"yamidark"},"content":"    private static final String FEBRUARY_EIGHT_COMMIT_HASH \u003d \"768015345e70f06add2a8b7d1f901dc07bf70582\";","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private RepoConfiguration config;","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private FileInfoExtractor fileInfoExtractor \u003d new FileInfoExtractor();","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void before() throws Exception {","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super.before();","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"        config \u003d configs.get();","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"yamidark"},"content":"    public void extractFileInfosTest() {","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(MAIN_AUTHOR_NAME), MAIN_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(FAKE_AUTHOR_NAME), FAKE_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"eugenepeh"},"content":"        GitCheckout.checkout(config.getRepoRoot(), TEST_COMMIT_HASH);","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e files \u003d fileInfoExtractor.extractTextFileInfos(config);","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(6, files.size());","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"README.md\"), files));","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"annotationTest.java\"), files));","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"blameTest.java\"), files));","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"newPos/movedFile.java\"), files));","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"inMasterBranch.java\"), files));","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"newFile.java\"), files));","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void extractFileInfos_skipGlobs_success() {","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(MAIN_AUTHOR_NAME), MAIN_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(FAKE_AUTHOR_NAME), FAKE_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"        config.setIgnoreGlobList(Arrays.asList(\"newPos/**.java\", \"**.md\"));","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), TEST_COMMIT_HASH);","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e files \u003d fileInfoExtractor.extractTextFileInfos(config);","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(4, files.size());","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(isFileExistence(Paths.get(\"README.md\"), files));","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"annotationTest.java\"), files));","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"blameTest.java\"), files));","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(isFileExistence(Paths.get(\"newPos/movedFile.java\"), files));","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"inMasterBranch.java\"), files));","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"newFile.java\"), files));","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"yamidark"},"content":"    @Test","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"yamidark"},"content":"    public void extractFileInfos_sinceDateFebrauaryNineToLatestCommit_success() {","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"-"},"content":"        LocalDateTime date \u003d TestUtil.getSinceDate(2018, Month.FEBRUARY.getValue(), 9);","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"yamidark"},"content":"        config.setSinceDate(date);","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e files \u003d fileInfoExtractor.extractTextFileInfos(config);","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(5, files.size());","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"yamidark"},"content":"        // files edited within commit range","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"README.md\"), files));","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"newPos/movedFile.java\"), files));","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"annotationTest.java\"), files));","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"yamidark"},"content":"        // files not edited within commit range","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(isFileExistence(Paths.get(\"inMasterBranch.java\"), files));","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(isFileExistence(Paths.get(\"blameTest.java\"), files));","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(isFileExistence(Paths.get(\"newFile.java\"), files));","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"yamidark"},"content":"    @Test","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void extractFileInfos_directoryWithValidWhitelistedName_success() {","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), DIRECTORY_WITH_VALID_WHITELISTED_NAME_BRANCH);","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e files \u003d fileInfoExtractor.extractTextFileInfos(config);","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(7, files.size());","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\".gradle/anything.txt\"), files));","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void extractFileInfos_branchWithValidWhitelistedFileName_success() {","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), BRANCH_WITH_VALID_WHITELISTED_FILE_NAME_BRANCH);","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e files \u003d fileInfoExtractor.extractTextFileInfos(config);","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"whitelisted-format.txt\"), files));","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"yamidark"},"content":"    public void extractFileInfos_sinceDateAfterLatestCommit_emptyResult() {","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"-"},"content":"        LocalDateTime date \u003d TestUtil.getSinceDate(2050, Month.DECEMBER.getValue(), 31);","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"yamidark"},"content":"        config.setSinceDate(date);","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e files \u003d fileInfoExtractor.extractTextFileInfos(config);","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(files.isEmpty());","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"eugenepeh"},"content":"    public void extractFileInfos_untilDateBeforeFirstCommit_emptyResult() {","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"-"},"content":"        LocalDateTime date \u003d TestUtil.getUntilDate(2015, Month.DECEMBER.getValue(), 31);","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"eugenepeh"},"content":"        config.setUntilDate(date);","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e files \u003d fileInfoExtractor.extractTextFileInfos(config);","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(files.isEmpty());","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"yamidark"},"content":"    @Test","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"yamidark"},"content":"    public void getEditedFileInfos_editFileInfoBranchSinceFebrauryEight_success() {","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"eugenepeh"},"content":"        GitCheckout.checkout(config.getRepoRoot(), EDITED_FILE_INFO_BRANCH);","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e files \u003d fileInfoExtractor.getEditedFileInfos(config, FEBRUARY_EIGHT_COMMIT_HASH);","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(3, files.size());","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"README.md\"), files));","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"annotationTest.java\"), files));","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"newPos/movedFile.java\"), files));","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // file renamed without changing content, not included","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(isFileExistence(Paths.get(\"renamedFile.java\"), files));","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void getEditedFileInfos_editFileInfoBranchSinceFebrauryEightSkipGlobs_success() {","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), EDITED_FILE_INFO_BRANCH);","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"-"},"content":"        config.setIgnoreGlobList(Arrays.asList(\"**.md\"));","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e files \u003d fileInfoExtractor.getEditedFileInfos(config, FEBRUARY_EIGHT_COMMIT_HASH);","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(2, files.size());","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(isFileExistence(Paths.get(\"README.md\"), files));","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"annotationTest.java\"), files));","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"newPos/movedFile.java\"), files));","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"yamidark"},"content":"        // file renamed without changing content, not included","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(isFileExistence(Paths.get(\"renamedFile.java\"), files));","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"yamidark"},"content":"    @Test","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"yamidark"},"content":"    public void getEditedFileInfos_editFileInfoBranchSinceFirstCommit_success() {","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"eugenepeh"},"content":"        GitCheckout.checkout(config.getRepoRoot(), EDITED_FILE_INFO_BRANCH);","isFullCredit":true},{"lineNumber":179,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e files \u003d fileInfoExtractor.getEditedFileInfos(config, FIRST_COMMIT_HASH);","isFullCredit":true},{"lineNumber":180,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(5, files.size());","isFullCredit":true},{"lineNumber":182,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":183,"author":{"gitId":"yamidark"},"content":"        // empty file created, not included","isFullCredit":true},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(isFileExistence(Paths.get(\"inMasterBranch.java\"), files));","isFullCredit":true},{"lineNumber":185,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":186,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":187,"author":{"gitId":"yamidark"},"content":"    @Test","isFullCredit":true},{"lineNumber":188,"author":{"gitId":"yamidark"},"content":"    public void generateFileInfo_fileWithSpecialCharacters_correctFileInfoGenerated() {","isFullCredit":true},{"lineNumber":189,"author":{"gitId":"-"},"content":"        FileInfo fileInfo \u003d fileInfoExtractor.generateFileInfo(\".\", FILE_WITH_SPECIAL_CHARACTER.toString(),","isFullCredit":true},{"lineNumber":190,"author":{"gitId":"-"},"content":"                DEFAULT_FILE_SIZE_LIMIT, false, false);","isFullCredit":true},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(5, fileInfo.getLines().size());","isFullCredit":true},{"lineNumber":192,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":193,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":194,"author":{"gitId":"yamidark"},"content":"    @Test","isFullCredit":true},{"lineNumber":195,"author":{"gitId":"yamidark"},"content":"    public void generateFileInfo_fileWithoutSpecialCharacters_correctFileInfoGenerated() {","isFullCredit":true},{"lineNumber":196,"author":{"gitId":"-"},"content":"        FileInfo fileInfo \u003d fileInfoExtractor.generateFileInfo(\".\", FILE_WITHOUT_SPECIAL_CHARACTER.toString(),","isFullCredit":true},{"lineNumber":197,"author":{"gitId":"-"},"content":"                DEFAULT_FILE_SIZE_LIMIT, false, false);","isFullCredit":true},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(5, fileInfo.getLines().size());","isFullCredit":true},{"lineNumber":199,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":200,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void generateFileInfo_fileExceedingSizeLimit_correctFileInfoGenerated() {","isFullCredit":true},{"lineNumber":203,"author":{"gitId":"-"},"content":"        config.setBranch(BRANCH_WITH_LARGE_FILE);","isFullCredit":true},{"lineNumber":204,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), config.getBranch());","isFullCredit":true},{"lineNumber":205,"author":{"gitId":"-"},"content":"        FileInfo fileInfo \u003d fileInfoExtractor.generateFileInfo(config.getRepoRoot(), FILE_WITH_LARGE_SIZE,","isFullCredit":true},{"lineNumber":206,"author":{"gitId":"-"},"content":"                DEFAULT_FILE_SIZE_LIMIT, false, false);","isFullCredit":true},{"lineNumber":207,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":208,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(fileInfo.isFileAnalyzed());","isFullCredit":true},{"lineNumber":209,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(46902, fileInfo.getLines().size());","isFullCredit":true},{"lineNumber":210,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(fileInfo.getFileSize() \u003e DEFAULT_FILE_SIZE_LIMIT, fileInfo.exceedsFileLimit());","isFullCredit":true},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":212,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void generateFileInfo_fileExceedingSizeLimitAndSkipped_correctFileInfoGenerated() {","isFullCredit":true},{"lineNumber":215,"author":{"gitId":"-"},"content":"        config.setBranch(BRANCH_WITH_LARGE_FILE);","isFullCredit":true},{"lineNumber":216,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), config.getBranch());","isFullCredit":true},{"lineNumber":217,"author":{"gitId":"-"},"content":"        FileInfo fileInfo \u003d fileInfoExtractor.generateFileInfo(config.getRepoRoot(), FILE_WITH_LARGE_SIZE,","isFullCredit":true},{"lineNumber":218,"author":{"gitId":"-"},"content":"                DEFAULT_FILE_SIZE_LIMIT, false, true);","isFullCredit":true},{"lineNumber":219,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":220,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(fileInfo.isFileAnalyzed());","isFullCredit":true},{"lineNumber":221,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(0, fileInfo.getLines().size());","isFullCredit":true},{"lineNumber":222,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(fileInfo.getFileSize() \u003e DEFAULT_FILE_SIZE_LIMIT, fileInfo.exceedsFileLimit());","isFullCredit":true},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":224,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public void generateFileInfo_fileExceedingSizeLimitAndLimitIgnored_correctFileInfoGenerated() {","isFullCredit":true},{"lineNumber":227,"author":{"gitId":"-"},"content":"        config.setBranch(BRANCH_WITH_LARGE_FILE);","isFullCredit":true},{"lineNumber":228,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), config.getBranch());","isFullCredit":true},{"lineNumber":229,"author":{"gitId":"-"},"content":"        FileInfo fileInfo \u003d fileInfoExtractor.generateFileInfo(config.getRepoRoot(), FILE_WITH_LARGE_SIZE,","isFullCredit":true},{"lineNumber":230,"author":{"gitId":"-"},"content":"                DEFAULT_FILE_SIZE_LIMIT, true, false);","isFullCredit":true},{"lineNumber":231,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":232,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(fileInfo.isFileAnalyzed());","isFullCredit":true},{"lineNumber":233,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(46902, fileInfo.getLines().size());","isFullCredit":true},{"lineNumber":234,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(fileInfo.exceedsFileLimit());","isFullCredit":true},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":236,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":237,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":238,"author":{"gitId":"-"},"content":"    public void getFilesList_getTextFilesFromRepoWithBinaryFiles_success() {","isFullCredit":true},{"lineNumber":239,"author":{"gitId":"-"},"content":"        List\u003cString\u003e textFilesList \u003d Arrays.asList(","isFullCredit":true},{"lineNumber":240,"author":{"gitId":"-"},"content":"                \"binaryFileTest/nonBinaryFile.txt\", \"My Documents/wordToHtml.htm\", \"My Pictures/notPngPicture.png\",","isFullCredit":true},{"lineNumber":241,"author":{"gitId":"-"},"content":"                \"My Documents/wordToHtml_files/colorschememapping.xml\", \"My Documents/wordToHtml_files/filelist.xml\",","isFullCredit":true},{"lineNumber":242,"author":{"gitId":"-"},"content":"                \"My Documents/notPdfDocument.pdf\");","isFullCredit":true},{"lineNumber":243,"author":{"gitId":"-"},"content":"        List\u003cString\u003e binaryFilesList \u003d Arrays.asList(","isFullCredit":true},{"lineNumber":244,"author":{"gitId":"-"},"content":"                \"binaryFileTest/binaryFile.txt\", \"My Documents/word.docx\", \"My Documents/pdfDocument.pdf\",","isFullCredit":true},{"lineNumber":245,"author":{"gitId":"-"},"content":"                \"My Documents/wordToHtml_files/themedata.thmx\", \"My Pictures/pngPicture.png\");","isFullCredit":true},{"lineNumber":246,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), BRANCH_WITH_BINARY_FILES);","isFullCredit":true},{"lineNumber":247,"author":{"gitId":"-"},"content":"        Set\u003cPath\u003e textFiles \u003d fileInfoExtractor.getFiles(config, false);","isFullCredit":true},{"lineNumber":248,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":249,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(6, textFiles.size());","isFullCredit":true},{"lineNumber":250,"author":{"gitId":"-"},"content":"        // Non binary files should be captured","isFullCredit":true},{"lineNumber":251,"author":{"gitId":"-"},"content":"        textFilesList.forEach(textFile -\u003e Assertions.assertTrue(textFiles.contains(Paths.get(textFile))));","isFullCredit":true},{"lineNumber":252,"author":{"gitId":"-"},"content":"        // Binary files should be ignored","isFullCredit":true},{"lineNumber":253,"author":{"gitId":"-"},"content":"        binaryFilesList.forEach(binFile -\u003e Assertions.assertFalse(textFiles.contains(Paths.get(binFile))));","isFullCredit":true},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":255,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":256,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":257,"author":{"gitId":"-"},"content":"    public void getFilesList_getBinaryFilesFromRepoWithTextFiles_success() {","isFullCredit":true},{"lineNumber":258,"author":{"gitId":"-"},"content":"        List\u003cString\u003e textFilesList \u003d Arrays.asList(","isFullCredit":true},{"lineNumber":259,"author":{"gitId":"-"},"content":"                \"binaryFileTest/nonBinaryFile.txt\", \"My Documents/wordToHtml.htm\", \"My Pictures/notPngPicture.png\",","isFullCredit":true},{"lineNumber":260,"author":{"gitId":"-"},"content":"                \"My Documents/wordToHtml_files/colorschememapping.xml\", \"My Documents/wordToHtml_files/filelist.xml\",","isFullCredit":true},{"lineNumber":261,"author":{"gitId":"-"},"content":"                \"My Documents/notPdfDocument.pdf\");","isFullCredit":true},{"lineNumber":262,"author":{"gitId":"-"},"content":"        List\u003cString\u003e binaryFilesList \u003d Arrays.asList(","isFullCredit":true},{"lineNumber":263,"author":{"gitId":"-"},"content":"                \"binaryFileTest/binaryFile.txt\", \"My Documents/word.docx\", \"My Documents/pdfDocument.pdf\",","isFullCredit":true},{"lineNumber":264,"author":{"gitId":"-"},"content":"                \"My Documents/wordToHtml_files/themedata.thmx\", \"My Pictures/pngPicture.png\");","isFullCredit":true},{"lineNumber":265,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), BRANCH_WITH_BINARY_FILES);","isFullCredit":true},{"lineNumber":266,"author":{"gitId":"-"},"content":"        Set\u003cPath\u003e binaryFiles \u003d fileInfoExtractor.getFiles(config, true);","isFullCredit":true},{"lineNumber":267,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":268,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(5, binaryFiles.size());","isFullCredit":true},{"lineNumber":269,"author":{"gitId":"-"},"content":"        // Binary files should be captured","isFullCredit":true},{"lineNumber":270,"author":{"gitId":"-"},"content":"        binaryFilesList.forEach(binFile -\u003e Assertions.assertTrue(binaryFiles.contains(Paths.get(binFile))));","isFullCredit":true},{"lineNumber":271,"author":{"gitId":"-"},"content":"        // Non binary files should be ignored","isFullCredit":true},{"lineNumber":272,"author":{"gitId":"-"},"content":"        textFilesList.forEach(textFile -\u003e Assertions.assertFalse(binaryFiles.contains(Paths.get(textFile))));","isFullCredit":true},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":274,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":275,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":276,"author":{"gitId":"-"},"content":"    public void extractFileInfos_withoutSpecifiedFormats_success() {","isFullCredit":true},{"lineNumber":277,"author":{"gitId":"-"},"content":"        List\u003cString\u003e textFilesList \u003d Arrays.asList(","isFullCredit":true},{"lineNumber":278,"author":{"gitId":"-"},"content":"                \"binaryFileTest/nonBinaryFile.ARBIFORMAT\", \"My Documents/wordToHtml.htm\",","isFullCredit":true},{"lineNumber":279,"author":{"gitId":"-"},"content":"                \"My Pictures/notPngPicture.png\", \"My Documents/wordToHtml_files/colorschememapping.xml\",","isFullCredit":true},{"lineNumber":280,"author":{"gitId":"-"},"content":"                \"My Documents/wordToHtml_files/filelist.xml\", \"My Documents/notPdfDocument.fdp\");","isFullCredit":true},{"lineNumber":281,"author":{"gitId":"-"},"content":"        List\u003cString\u003e binaryFilesList \u003d Arrays.asList(","isFullCredit":true},{"lineNumber":282,"author":{"gitId":"-"},"content":"                \"binaryFileTest/binaryFile.ARBIFORMAT\", \"My Documents/word.docx\", \"My Documents/pdfDocument.fdp\",","isFullCredit":true},{"lineNumber":283,"author":{"gitId":"-"},"content":"                \"My Documents/wordToHtml_files/themedata.thmx\", \"My Pictures/pngPicture.png\");","isFullCredit":true},{"lineNumber":284,"author":{"gitId":"-"},"content":"        config.setFormats(FileTypeTest.NO_SPECIFIED_FORMATS);","isFullCredit":true},{"lineNumber":285,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), BRANCH_WITH_RARE_FILE_FORMATS);","isFullCredit":true},{"lineNumber":286,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":287,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e files \u003d fileInfoExtractor.extractTextFileInfos(config);","isFullCredit":true},{"lineNumber":288,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":289,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(textFilesList.size(), files.size());","isFullCredit":true},{"lineNumber":290,"author":{"gitId":"-"},"content":"        // Non binary files should be captured","isFullCredit":true},{"lineNumber":291,"author":{"gitId":"-"},"content":"        textFilesList.forEach(textFile -\u003e Assertions.assertTrue(isFileExistence(Paths.get(textFile), files)));","isFullCredit":true},{"lineNumber":292,"author":{"gitId":"-"},"content":"        // Binary files should be ignored","isFullCredit":true},{"lineNumber":293,"author":{"gitId":"-"},"content":"        binaryFilesList.forEach(binFile -\u003e Assertions.assertFalse(isFileExistence(Paths.get(binFile), files)));","isFullCredit":true},{"lineNumber":294,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":295,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":296,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":297,"author":{"gitId":"-"},"content":"    public void getEditedFileInfos_repoWithFilesWithSpaces_success() {","isFullCredit":true},{"lineNumber":298,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e fileInfos \u003d fileInfoExtractor.getEditedFileInfos(config, FEBRUARY_EIGHT_COMMIT_HASH);","isFullCredit":true},{"lineNumber":299,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":300,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"space test.txt\"), fileInfos));","isFullCredit":true},{"lineNumber":301,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":302,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":303,"author":{"gitId":"yamidark"},"content":"    private boolean isFileExistence(Path filePath, List\u003cFileInfo\u003e files) {","isFullCredit":true},{"lineNumber":304,"author":{"gitId":"yamidark"},"content":"        return files.stream().anyMatch(file -\u003e Paths.get(file.getPath()).equals(filePath));","isFullCredit":true},{"lineNumber":305,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yamidark":56,"eugenepeh":14,"-":236}},{"path":"src/test/java/reposense/commits/CommitInfoAnalyzerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yamidark"},"content":"package reposense.commits;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.Month;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.ZoneId;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.ZonedDateTime;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"yamidark"},"content":"import java.util.Arrays;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"yamidark"},"content":"import java.util.Collections;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"jamessspanggg"},"content":"import java.util.HashMap;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"yamidark"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"jamessspanggg"},"content":"import java.util.Map;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assumptions;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"yamidark"},"content":"import reposense.commits.model.CommitInfo;","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"yamidark"},"content":"import reposense.commits.model.CommitResult;","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"jamessspanggg"},"content":"import reposense.commits.model.ContributionPair;","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"yamidark"},"content":"import reposense.model.Author;","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"jamessspanggg"},"content":"import reposense.model.FileType;","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"jamessspanggg"},"content":"import reposense.model.FileTypeTest;","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"yamidark"},"content":"import reposense.template.GitTestTemplate;","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"jamessspanggg"},"content":"import reposense.util.SystemUtil;","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"yamidark"},"content":"public class CommitInfoAnalyzerTest extends GitTestTemplate {","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"yamidark"},"content":"    private static final int NUMBER_EUGENE_COMMIT \u003d 1;","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final int NUMBER_MINGYI_COMMIT \u003d 1;","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final int NUMBER_EMPTY_MESSAGE_COMMIT \u003d 1;","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"jamessspanggg"},"content":"    private static final FileType FILETYPE_JAVA \u003d new FileType(\"java\", Collections.singletonList(\"**java\"));","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"jamessspanggg"},"content":"    private static final FileType FILETYPE_MD \u003d new FileType(\"md\", Collections.singletonList(\"**md\"));","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"jamessspanggg"},"content":"    private static final FileType FILETYPE_TXT \u003d new FileType(\"txt\", Collections.singletonList(\"**txt\"));","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String DUPLICATE_AUTHORS_DUPLICATE_COMMITS_HASH \u003d \"f34c20ec2c3be63e0764d4079a575dd75269ffeb\";","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private RepoConfiguration config;","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private CommitInfoExtractor commitInfoExtractor \u003d new CommitInfoExtractor();","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private CommitInfoAnalyzer commitInfoAnalyzer \u003d new CommitInfoAnalyzer();","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @BeforeEach","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void before() throws Exception {","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"        super.before();","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"        config \u003d configs.get();","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"        config.clearAuthorDetailsToAuthorMap();","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"yamidark"},"content":"    @Test","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"yamidark"},"content":"    public void analyzeCommits_allAuthorNoIgnoredCommitsNoDateRange_success() {","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(MAIN_AUTHOR_NAME), MAIN_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(FAKE_AUTHOR_NAME), FAKE_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(EUGENE_AUTHOR_NAME), EUGENE_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d commitInfoExtractor.extractCommitInfos(config);","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e commitResults \u003d commitInfoAnalyzer.analyzeCommits(commitInfos, config);","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(commitInfos.size(), commitResults.size());","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"yamidark"},"content":"    @Test","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"yamidark"},"content":"    public void analyzeCommits_fakeMainAuthorNoIgnoredCommitsNoDateRange_success() {","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(MAIN_AUTHOR_NAME), MAIN_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(FAKE_AUTHOR_NAME), FAKE_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d commitInfoExtractor.extractCommitInfos(config);","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e commitResults \u003d commitInfoAnalyzer.analyzeCommits(commitInfos, config);","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(commitInfos.size() - NUMBER_EUGENE_COMMIT, commitResults.size());","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"yamidark"},"content":"    @Test","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"yamidark"},"content":"    public void analyzeCommits_eugeneAuthorNoIgnoredCommitsNoDateRange_success() {","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(EUGENE_AUTHOR_NAME), EUGENE_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d commitInfoExtractor.extractCommitInfos(config);","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e commitResults \u003d commitInfoAnalyzer.analyzeCommits(commitInfos, config);","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(NUMBER_EUGENE_COMMIT, commitResults.size());","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"yamidark"},"content":"    @Test","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"yamidark"},"content":"    public void analyzeCommits_allAuthorSingleCommitIgnoredNoDateRange_success() {","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(MAIN_AUTHOR_NAME), MAIN_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(FAKE_AUTHOR_NAME), FAKE_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(EUGENE_AUTHOR_NAME), EUGENE_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d commitInfoExtractor.extractCommitInfos(config);","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"yamidark"},"content":"        config.setIgnoreCommitList(Collections.singletonList(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018));","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e commitResultsFull \u003d commitInfoAnalyzer.analyzeCommits(commitInfos, config);","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(Collections.singletonList(","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"-"},"content":"                new CommitHash(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING.substring(0, 8))","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"        ));","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e commitResultsShort \u003d commitInfoAnalyzer.analyzeCommits(commitInfos, config);","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(commitResultsShort, commitResultsFull);","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(commitInfos.size() - 1, commitResultsFull.size());","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"yamidark"},"content":"    @Test","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"yamidark"},"content":"    public void analyzeCommits_allAuthorMultipleCommitIgnoredNoDateRange_success() {","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(MAIN_AUTHOR_NAME), MAIN_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(FAKE_AUTHOR_NAME), FAKE_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(EUGENE_AUTHOR_NAME), EUGENE_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d commitInfoExtractor.extractCommitInfos(config);","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"yamidark"},"content":"        config.setIgnoreCommitList(","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"yamidark"},"content":"                Arrays.asList(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018, EUGENE_AUTHOR_README_FILE_COMMIT_07052018));","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e commitResultsFull \u003d commitInfoAnalyzer.analyzeCommits(commitInfos, config);","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(CommitHash.convertStringsToCommits(Arrays.asList(","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"                FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING.substring(0, 8),","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"                EUGENE_AUTHOR_README_FILE_COMMIT_07052018_STRING.substring(0, 8))));","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e commitResultsShort \u003d commitInfoAnalyzer.analyzeCommits(commitInfos, config);","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(commitResultsShort, commitResultsFull);","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(commitInfos.size() - 2, commitResultsFull.size());","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void analyzeCommits_noCommitMessage_success() {","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"-"},"content":"        config.setBranch(\"empty-commit-message\");","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"-"},"content":"        config.clearAuthorDetailsToAuthorMap();","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(YONG_AUTHOR_NAME), YONG_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d commitInfoExtractor.extractCommitInfos(config);","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e commitResults \u003d commitInfoAnalyzer.analyzeCommits(commitInfos, config);","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"-"},"content":"        commitResults.removeIf(s -\u003e !s.getMessageTitle().isEmpty());","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(NUMBER_EMPTY_MESSAGE_COMMIT, commitResults.size());","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void analyzeCommits_emailWithAdditionOperator_success() {","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"-"},"content":"        config.setBranch(\"617-FileAnalyzerTest-analyzeFile_emailWithAdditionOperator_success\");","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(MINGYI_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d commitInfoExtractor.extractCommitInfos(config);","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e commitResults \u003d commitInfoAnalyzer.analyzeCommits(commitInfos, config);","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(NUMBER_MINGYI_COMMIT, commitResults.size());","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void analyzeCommits_duplicateAuthorsDuplicateCommits_success() throws Exception {","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(FAKE_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"jamessspanggg"},"content":"        Map\u003cFileType, ContributionPair\u003e fileTypeAndContributionMap \u003d new HashMap\u003c\u003e();","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"-"},"content":"        fileTypeAndContributionMap.put(FILETYPE_JAVA, new ContributionPair(3, 3));","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, DUPLICATE_AUTHORS_DUPLICATE_COMMITS_HASH, false,","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2021-08-03T12:53:39+08:00\"),","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"-"},"content":"                \"Update annotationTest.java\",","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"jamessspanggg"},"content":"                \"\", null, fileTypeAndContributionMap));","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"-"},"content":"        config.setAuthorList(Arrays.asList(author, author));","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"-"},"content":"        config.setSinceDate(LocalDateTime.of(2021, Month.AUGUST, 3, 0, 0));","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"-"},"content":"        config.setUntilDate(LocalDateTime.of(2021, Month.AUGUST, 4, 0, 0));","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d commitInfoExtractor.extractCommitInfos(config);","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d commitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(actualCommitInfos.size(), 2);","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedCommitResults, actualCommitResults);","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void analyzeCommits_commitsWithEmptyCommitMessageTitleOrBody_success() throws Exception {","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(JINYAO_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Map\u003cFileType, ContributionPair\u003e firstFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"-"},"content":"        firstFileTypeAndContributionMap.put(FILETYPE_JAVA, new ContributionPair(1, 0));","isFullCredit":true},{"lineNumber":179,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Map\u003cFileType, ContributionPair\u003e secondFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();","isFullCredit":true},{"lineNumber":181,"author":{"gitId":"-"},"content":"        secondFileTypeAndContributionMap.put(FILETYPE_JAVA, new ContributionPair(0, 1));","isFullCredit":true},{"lineNumber":182,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // 1st test: Contains commit message title but no commit message body.","isFullCredit":true},{"lineNumber":184,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"e54ae8fdb77c6c7d2c39131b816bfc03e6a6dd44\", false,","isFullCredit":true},{"lineNumber":185,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2019-07-02T12:35:46+08:00\"), \"Test 1: With message title but no body\",","isFullCredit":true},{"lineNumber":186,"author":{"gitId":"-"},"content":"                \"\", null, firstFileTypeAndContributionMap));","isFullCredit":true},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // 2nd test: Contains no commit message title and no commit message body.","isFullCredit":true},{"lineNumber":188,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"57fa22fc2550210203c2941692f69ccb0cf18252\", false,","isFullCredit":true},{"lineNumber":189,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2019-07-02T12:36:14+08:00\"), \"\", \"\", null,","isFullCredit":true},{"lineNumber":190,"author":{"gitId":"-"},"content":"                secondFileTypeAndContributionMap));","isFullCredit":true},{"lineNumber":191,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":192,"author":{"gitId":"-"},"content":"        config.setBranch(\"751-CommitInfoAnalyzerTest-analyzeCommits_commitsWithEmptyCommitMessageTitleOrBody_success\");","isFullCredit":true},{"lineNumber":193,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));","isFullCredit":true},{"lineNumber":194,"author":{"gitId":"-"},"content":"        config.setSinceDate(LocalDateTime.of(2019, Month.JULY, 2, 0, 0));","isFullCredit":true},{"lineNumber":195,"author":{"gitId":"-"},"content":"        config.setUntilDate(LocalDateTime.of(2019, Month.JULY, 3, 0, 0));","isFullCredit":true},{"lineNumber":196,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":197,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d commitInfoExtractor.extractCommitInfos(config);","isFullCredit":true},{"lineNumber":198,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d commitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);","isFullCredit":true},{"lineNumber":199,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedCommitResults, actualCommitResults);","isFullCredit":true},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":202,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void analyzeCommits_multipleCommitsWithCommitMessageBody_success() throws Exception {","isFullCredit":true},{"lineNumber":205,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(JINYAO_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":206,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":207,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":208,"author":{"gitId":"jamessspanggg"},"content":"        Map\u003cFileType, ContributionPair\u003e firstFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();","isFullCredit":true},{"lineNumber":209,"author":{"gitId":"jamessspanggg"},"content":"        firstFileTypeAndContributionMap.put(FILETYPE_JAVA, new ContributionPair(1, 0));","isFullCredit":true},{"lineNumber":210,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":211,"author":{"gitId":"jamessspanggg"},"content":"        Map\u003cFileType, ContributionPair\u003e secondFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();","isFullCredit":true},{"lineNumber":212,"author":{"gitId":"jamessspanggg"},"content":"        secondFileTypeAndContributionMap.put(FILETYPE_JAVA, new ContributionPair(0, 1));","isFullCredit":true},{"lineNumber":213,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":214,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"2eccc111e813e8b2977719b5959e32b674c56afe\", false,","isFullCredit":true},{"lineNumber":215,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2019-06-19T13:02:01+08:00\"), \"\u003e\u003e\u003eCOMMIT INFO\u003c\u003c\u003c\",","isFullCredit":true},{"lineNumber":216,"author":{"gitId":"jamessspanggg"},"content":"                \"Hi there!\\n\\n\u003e\u003e\u003eCOMMIT INFO\u003c\u003c\u003c\\n\", null,","isFullCredit":true},{"lineNumber":217,"author":{"gitId":"jamessspanggg"},"content":"                firstFileTypeAndContributionMap));","isFullCredit":true},{"lineNumber":218,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"8f8359649361f6736c31b87d499a4264f6cf7ed7\", false,","isFullCredit":true},{"lineNumber":219,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2019-06-19T13:03:39+08:00\"), \"[#123] Reverted 1st commit\",","isFullCredit":true},{"lineNumber":220,"author":{"gitId":"-"},"content":"                \"This is a test to see if the commit message body works. \"","isFullCredit":true},{"lineNumber":221,"author":{"gitId":"jamessspanggg"},"content":"                        + \"All should be same same.\\n\u003e\u003e\u003eCOMMIT INFO\u003c\u003c\u003c\\n|The end.\", null,","isFullCredit":true},{"lineNumber":222,"author":{"gitId":"jamessspanggg"},"content":"                secondFileTypeAndContributionMap));","isFullCredit":true},{"lineNumber":223,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":224,"author":{"gitId":"-"},"content":"        config.setBranch(\"751-CommitInfoAnalyzerTest-analyzeCommits_multipleCommitsWithCommitMessageBody_success\");","isFullCredit":true},{"lineNumber":225,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));","isFullCredit":true},{"lineNumber":226,"author":{"gitId":"-"},"content":"        config.setSinceDate(LocalDateTime.of(2019, Month.JUNE, 19, 0, 0));","isFullCredit":true},{"lineNumber":227,"author":{"gitId":"-"},"content":"        config.setUntilDate(LocalDateTime.of(2019, Month.JUNE, 20, 0, 0));","isFullCredit":true},{"lineNumber":228,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":229,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d commitInfoExtractor.extractCommitInfos(config);","isFullCredit":true},{"lineNumber":230,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d commitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);","isFullCredit":true},{"lineNumber":231,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":232,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedCommitResults, actualCommitResults);","isFullCredit":true},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":234,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":235,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public void analyzeCommits_multipleCommitsWithCommitMessageBodyAndDifferentTimeZone_success() throws Exception {","isFullCredit":true},{"lineNumber":237,"author":{"gitId":"-"},"content":"        // Re-uses analyzeCommits_multipleCommitsWithCommitMessageBody_success() test.","isFullCredit":true},{"lineNumber":238,"author":{"gitId":"-"},"content":"        // But for this test, changes config timezone such that the commit date is one day behind","isFullCredit":true},{"lineNumber":239,"author":{"gitId":"-"},"content":"        // in the config timezone compared to commit timezone.","isFullCredit":true},{"lineNumber":240,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(JINYAO_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":241,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":242,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":243,"author":{"gitId":"jamessspanggg"},"content":"        Map\u003cFileType, ContributionPair\u003e firstFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();","isFullCredit":true},{"lineNumber":244,"author":{"gitId":"jamessspanggg"},"content":"        firstFileTypeAndContributionMap.put(FILETYPE_JAVA, new ContributionPair(1, 0));","isFullCredit":true},{"lineNumber":245,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":246,"author":{"gitId":"jamessspanggg"},"content":"        Map\u003cFileType, ContributionPair\u003e secondFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();","isFullCredit":true},{"lineNumber":247,"author":{"gitId":"jamessspanggg"},"content":"        secondFileTypeAndContributionMap.put(FILETYPE_JAVA, new ContributionPair(0, 1));","isFullCredit":true},{"lineNumber":248,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":249,"author":{"gitId":"-"},"content":"        ZoneId originalZoneId \u003d config.getZoneId();","isFullCredit":true},{"lineNumber":250,"author":{"gitId":"-"},"content":"        config.setZoneId(ZoneId.of(\"UTC-0530\"));","isFullCredit":true},{"lineNumber":251,"author":{"gitId":"-"},"content":"        config.setSinceDate(LocalDateTime.of(2019, Month.JUNE, 18, 0, 0));","isFullCredit":true},{"lineNumber":252,"author":{"gitId":"-"},"content":"        config.setUntilDate(LocalDateTime.of(2019, Month.JUNE, 19, 0, 0));","isFullCredit":true},{"lineNumber":253,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":254,"author":{"gitId":"-"},"content":"        // Equivalent to 2019-06-18 23:32:01 in UTC-0530 time.","isFullCredit":true},{"lineNumber":255,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"2eccc111e813e8b2977719b5959e32b674c56afe\", false,","isFullCredit":true},{"lineNumber":256,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2019-06-19T13:02:01+08:00\"), \"\u003e\u003e\u003eCOMMIT INFO\u003c\u003c\u003c\",","isFullCredit":true},{"lineNumber":257,"author":{"gitId":"-"},"content":"                \"Hi there!\\n\\n\u003e\u003e\u003eCOMMIT INFO\u003c\u003c\u003c\\n\", null,","isFullCredit":true},{"lineNumber":258,"author":{"gitId":"-"},"content":"                firstFileTypeAndContributionMap));","isFullCredit":true},{"lineNumber":259,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":260,"author":{"gitId":"-"},"content":"        // Equivalent to 2019-06-18 23:33:39 in UTC-0530 time.","isFullCredit":true},{"lineNumber":261,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"8f8359649361f6736c31b87d499a4264f6cf7ed7\", false,","isFullCredit":true},{"lineNumber":262,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2019-06-19T13:03:39+08:00\"), \"[#123] Reverted 1st commit\",","isFullCredit":true},{"lineNumber":263,"author":{"gitId":"-"},"content":"                \"This is a test to see if the commit message body works. \"","isFullCredit":true},{"lineNumber":264,"author":{"gitId":"-"},"content":"                        + \"All should be same same.\\n\u003e\u003e\u003eCOMMIT INFO\u003c\u003c\u003c\\n|The end.\", null,","isFullCredit":true},{"lineNumber":265,"author":{"gitId":"jamessspanggg"},"content":"                secondFileTypeAndContributionMap));","isFullCredit":true},{"lineNumber":266,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":267,"author":{"gitId":"-"},"content":"        config.setBranch(\"751-CommitInfoAnalyzerTest-analyzeCommits_multipleCommitsWithCommitMessageBody_success\");","isFullCredit":true},{"lineNumber":268,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));","isFullCredit":true},{"lineNumber":269,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":270,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d commitInfoExtractor.extractCommitInfos(config);","isFullCredit":true},{"lineNumber":271,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d commitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);","isFullCredit":true},{"lineNumber":272,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":273,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedCommitResults, actualCommitResults);","isFullCredit":true},{"lineNumber":274,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":275,"author":{"gitId":"-"},"content":"        config.setZoneId(originalZoneId);","isFullCredit":true},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":277,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":278,"author":{"gitId":"jamessspanggg"},"content":"    @Test","isFullCredit":true},{"lineNumber":279,"author":{"gitId":"-"},"content":"    public void analyzeCommits_commitsWithMultipleTags_success() throws Exception {","isFullCredit":true},{"lineNumber":280,"author":{"gitId":"jamessspanggg"},"content":"        Author author \u003d new Author(JAMES_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":281,"author":{"gitId":"jamessspanggg"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":282,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":283,"author":{"gitId":"jamessspanggg"},"content":"        Map\u003cFileType, ContributionPair\u003e firstFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();","isFullCredit":true},{"lineNumber":284,"author":{"gitId":"jamessspanggg"},"content":"        firstFileTypeAndContributionMap.put(FILETYPE_MD, new ContributionPair(2, 1));","isFullCredit":true},{"lineNumber":285,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":286,"author":{"gitId":"jamessspanggg"},"content":"        Map\u003cFileType, ContributionPair\u003e secondFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();","isFullCredit":true},{"lineNumber":287,"author":{"gitId":"jamessspanggg"},"content":"        secondFileTypeAndContributionMap.put(FILETYPE_MD, new ContributionPair(1, 0));","isFullCredit":true},{"lineNumber":288,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":289,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"62c3a50ef9b3580b2070deac1eed2b3e2d701e04\", false,","isFullCredit":true},{"lineNumber":290,"author":{"gitId":"jamessspanggg"},"content":"                parseGitStrictIsoDate(\"2019-12-20T22:45:18+08:00\"), \"Single Tag Commit\",","isFullCredit":true},{"lineNumber":291,"author":{"gitId":"jamessspanggg"},"content":"                \"\", new String[] {\"1st\"}, firstFileTypeAndContributionMap));","isFullCredit":true},{"lineNumber":292,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"c5e36ec059390233ac036db61a84fa6b55952506\", false,","isFullCredit":true},{"lineNumber":293,"author":{"gitId":"jamessspanggg"},"content":"                parseGitStrictIsoDate(\"2019-12-20T22:47:21+08:00\"), \"Double Tag Commit\",","isFullCredit":true},{"lineNumber":294,"author":{"gitId":"jamessspanggg"},"content":"                \"\", new String[] {\"2nd-tag\", \"1st-tag\"}, secondFileTypeAndContributionMap));","isFullCredit":true},{"lineNumber":295,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":296,"author":{"gitId":"jamessspanggg"},"content":"        config.setBranch(\"879-CommitInfoAnalyzerTest-analyzeCommits_commitsWithMultipleTags_success\");","isFullCredit":true},{"lineNumber":297,"author":{"gitId":"jamessspanggg"},"content":"        config.setAuthorList(Collections.singletonList(author));","isFullCredit":true},{"lineNumber":298,"author":{"gitId":"-"},"content":"        config.setSinceDate(LocalDateTime.of(2019, Month.DECEMBER, 20, 0, 0));","isFullCredit":true},{"lineNumber":299,"author":{"gitId":"-"},"content":"        config.setUntilDate(LocalDateTime.of(2019, Month.DECEMBER, 21, 0, 0));","isFullCredit":true},{"lineNumber":300,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":301,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d commitInfoExtractor.extractCommitInfos(config);","isFullCredit":true},{"lineNumber":302,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d commitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);","isFullCredit":true},{"lineNumber":303,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":304,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedCommitResults, actualCommitResults);","isFullCredit":true},{"lineNumber":305,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":306,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":307,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":308,"author":{"gitId":"-"},"content":"    public void analyzeCommits_commitsWithMultipleTagsAndDifferentTimeZone_success() throws Exception {","isFullCredit":true},{"lineNumber":309,"author":{"gitId":"-"},"content":"        // Re-uses analyzeCommits_commitsWithMultipleTags_success() test.","isFullCredit":true},{"lineNumber":310,"author":{"gitId":"-"},"content":"        // But for this test, changes config timezone such that the commit date is one day ahead","isFullCredit":true},{"lineNumber":311,"author":{"gitId":"-"},"content":"        // in the config timezone compared to the commit timezone.","isFullCredit":true},{"lineNumber":312,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(JAMES_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":313,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":314,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":315,"author":{"gitId":"-"},"content":"        Map\u003cFileType, ContributionPair\u003e firstFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();","isFullCredit":true},{"lineNumber":316,"author":{"gitId":"-"},"content":"        firstFileTypeAndContributionMap.put(FILETYPE_MD, new ContributionPair(2, 1));","isFullCredit":true},{"lineNumber":317,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":318,"author":{"gitId":"-"},"content":"        Map\u003cFileType, ContributionPair\u003e secondFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();","isFullCredit":true},{"lineNumber":319,"author":{"gitId":"-"},"content":"        secondFileTypeAndContributionMap.put(FILETYPE_MD, new ContributionPair(1, 0));","isFullCredit":true},{"lineNumber":320,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":321,"author":{"gitId":"-"},"content":"        ZoneId originalZoneId \u003d config.getZoneId();","isFullCredit":true},{"lineNumber":322,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":323,"author":{"gitId":"-"},"content":"        config.setBranch(\"879-CommitInfoAnalyzerTest-analyzeCommits_commitsWithMultipleTags_success\");","isFullCredit":true},{"lineNumber":324,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));","isFullCredit":true},{"lineNumber":325,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":326,"author":{"gitId":"-"},"content":"        config.setZoneId(ZoneId.of(\"UTC+10\"));","isFullCredit":true},{"lineNumber":327,"author":{"gitId":"-"},"content":"        config.setSinceDate(LocalDateTime.of(2019, Month.DECEMBER, 21, 0, 0));","isFullCredit":true},{"lineNumber":328,"author":{"gitId":"-"},"content":"        config.setUntilDate(LocalDateTime.of(2019, Month.DECEMBER, 22, 0, 0));","isFullCredit":true},{"lineNumber":329,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":330,"author":{"gitId":"-"},"content":"        // Date-time equivalent to 2019-12-21 00:45:18 in UTC+10 time","isFullCredit":true},{"lineNumber":331,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"62c3a50ef9b3580b2070deac1eed2b3e2d701e04\", false,","isFullCredit":true},{"lineNumber":332,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2019-12-20T22:45:18+08:00\"), \"Single Tag Commit\",","isFullCredit":true},{"lineNumber":333,"author":{"gitId":"-"},"content":"                \"\", new String[] {\"1st\"}, firstFileTypeAndContributionMap));","isFullCredit":true},{"lineNumber":334,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":335,"author":{"gitId":"-"},"content":"        // Date-time equivalent to 2019-12-21 00:47:21 in UTC+10 time","isFullCredit":true},{"lineNumber":336,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"c5e36ec059390233ac036db61a84fa6b55952506\", false,","isFullCredit":true},{"lineNumber":337,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2019-12-20T22:47:21+08:00\"), \"Double Tag Commit\",","isFullCredit":true},{"lineNumber":338,"author":{"gitId":"-"},"content":"                \"\", new String[] {\"2nd-tag\", \"1st-tag\"}, secondFileTypeAndContributionMap));","isFullCredit":true},{"lineNumber":339,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d commitInfoExtractor.extractCommitInfos(config);","isFullCredit":true},{"lineNumber":341,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d commitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);","isFullCredit":true},{"lineNumber":342,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":343,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedCommitResults, actualCommitResults);","isFullCredit":true},{"lineNumber":344,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":345,"author":{"gitId":"-"},"content":"        config.setZoneId(originalZoneId);","isFullCredit":true},{"lineNumber":346,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":347,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":348,"author":{"gitId":"jamessspanggg"},"content":"    @Test","isFullCredit":true},{"lineNumber":349,"author":{"gitId":"-"},"content":"    public void analyzeCommits_emptyCommits_success() throws Exception {","isFullCredit":true},{"lineNumber":350,"author":{"gitId":"jamessspanggg"},"content":"        Author author \u003d new Author(JAMES_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":351,"author":{"gitId":"jamessspanggg"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":352,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":353,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"016ab87c4afe89a98225b96c98ff28dd4774410f\", false,","isFullCredit":true},{"lineNumber":354,"author":{"gitId":"jamessspanggg"},"content":"                parseGitStrictIsoDate(\"2020-01-27T22:20:51+08:00\"), \"empty commit\", \"\", null));","isFullCredit":true},{"lineNumber":355,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":356,"author":{"gitId":"jamessspanggg"},"content":"        config.setBranch(\"1019-CommitInfoAnalyzerTest-emptyCommits\");","isFullCredit":true},{"lineNumber":357,"author":{"gitId":"jamessspanggg"},"content":"        config.setAuthorList(Collections.singletonList(author));","isFullCredit":true},{"lineNumber":358,"author":{"gitId":"jamessspanggg"},"content":"        config.setFormats(FileTypeTest.NO_SPECIFIED_FORMATS);","isFullCredit":true},{"lineNumber":359,"author":{"gitId":"-"},"content":"        config.setSinceDate(LocalDateTime.of(2020, Month.JANUARY, 27, 0, 0));","isFullCredit":true},{"lineNumber":360,"author":{"gitId":"-"},"content":"        config.setUntilDate(LocalDateTime.of(2020, Month.JANUARY, 28, 0, 0));","isFullCredit":true},{"lineNumber":361,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":362,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d commitInfoExtractor.extractCommitInfos(config);","isFullCredit":true},{"lineNumber":363,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d commitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);","isFullCredit":true},{"lineNumber":364,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":365,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedCommitResults, actualCommitResults);","isFullCredit":true},{"lineNumber":366,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":367,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":368,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":369,"author":{"gitId":"-"},"content":"    public void analyzeCommits_emptyCommitsWithDifferentTimeZone_success() throws Exception {","isFullCredit":true},{"lineNumber":370,"author":{"gitId":"-"},"content":"        // Re-uses analyzeCommits_emptyCommits_success() test.","isFullCredit":true},{"lineNumber":371,"author":{"gitId":"-"},"content":"        // But for this test, changes config timezone to be different from what would be given in CommitInfo.","isFullCredit":true},{"lineNumber":372,"author":{"gitId":"-"},"content":"        // However, the date should still be the same.","isFullCredit":true},{"lineNumber":373,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(JAMES_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":374,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":375,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":376,"author":{"gitId":"-"},"content":"        // Equivalent to 2020-01-27 23:20:51 in UTC+9 time.","isFullCredit":true},{"lineNumber":377,"author":{"gitId":"-"},"content":"        ZoneId originalZoneId \u003d config.getZoneId();","isFullCredit":true},{"lineNumber":378,"author":{"gitId":"-"},"content":"        config.setZoneId(ZoneId.of(\"UTC+9\"));","isFullCredit":true},{"lineNumber":379,"author":{"gitId":"-"},"content":"        config.setSinceDate(LocalDateTime.of(2020, Month.JANUARY, 27, 0, 0));","isFullCredit":true},{"lineNumber":380,"author":{"gitId":"-"},"content":"        config.setUntilDate(LocalDateTime.of(2020, Month.JANUARY, 28, 0, 0));","isFullCredit":true},{"lineNumber":381,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":382,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"016ab87c4afe89a98225b96c98ff28dd4774410f\", false,","isFullCredit":true},{"lineNumber":383,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2020-01-27T22:20:51+08:00\"), \"empty commit\", \"\", null));","isFullCredit":true},{"lineNumber":384,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":385,"author":{"gitId":"-"},"content":"        config.setBranch(\"1019-CommitInfoAnalyzerTest-emptyCommits\");","isFullCredit":true},{"lineNumber":386,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));","isFullCredit":true},{"lineNumber":387,"author":{"gitId":"-"},"content":"        config.setFormats(FileTypeTest.NO_SPECIFIED_FORMATS);","isFullCredit":true},{"lineNumber":388,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":389,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d commitInfoExtractor.extractCommitInfos(config);","isFullCredit":true},{"lineNumber":390,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d commitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);","isFullCredit":true},{"lineNumber":391,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":392,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedCommitResults, actualCommitResults);","isFullCredit":true},{"lineNumber":393,"author":{"gitId":"-"},"content":"        config.setZoneId(originalZoneId);","isFullCredit":true},{"lineNumber":394,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":395,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":396,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":397,"author":{"gitId":"-"},"content":"    public void analyzeCommits_mergeCommits_success() throws Exception {","isFullCredit":true},{"lineNumber":398,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(CHENGYU_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":399,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":400,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":401,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"188e6afc49cafe0cf4c2a88d55e97679fa0b798b\", true,","isFullCredit":true},{"lineNumber":402,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2023-01-31T15:08:54+08:00\"),","isFullCredit":true},{"lineNumber":403,"author":{"gitId":"-"},"content":"                \"Merge pull request #15 from sikai00/update-authorship-tags\",","isFullCredit":true},{"lineNumber":404,"author":{"gitId":"-"},"content":"                \"Update authorship tags\", null));","isFullCredit":true},{"lineNumber":405,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":406,"author":{"gitId":"-"},"content":"        config.setBranch(\"1882-CommitInfoAnalyzerTest-analyzeCommits_mergeCommits_success\");","isFullCredit":true},{"lineNumber":407,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));","isFullCredit":true},{"lineNumber":408,"author":{"gitId":"-"},"content":"        config.setFormats(FileTypeTest.NO_SPECIFIED_FORMATS);","isFullCredit":true},{"lineNumber":409,"author":{"gitId":"-"},"content":"        config.setSinceDate(LocalDateTime.of(2023, Month.JANUARY, 31, 0, 0));","isFullCredit":true},{"lineNumber":410,"author":{"gitId":"-"},"content":"        config.setUntilDate(LocalDateTime.of(2023, Month.FEBRUARY, 1, 0, 0));","isFullCredit":true},{"lineNumber":411,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":412,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d commitInfoExtractor.extractCommitInfos(config);","isFullCredit":true},{"lineNumber":413,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d commitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);","isFullCredit":true},{"lineNumber":414,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":415,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedCommitResults, actualCommitResults);","isFullCredit":true},{"lineNumber":416,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":417,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":418,"author":{"gitId":"jamessspanggg"},"content":"    @Test","isFullCredit":true},{"lineNumber":419,"author":{"gitId":"-"},"content":"    public void analyzeCommits_commitsWithBinaryFileContribution_success() throws Exception {","isFullCredit":true},{"lineNumber":420,"author":{"gitId":"jamessspanggg"},"content":"        Author author \u003d new Author(JAMES_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":421,"author":{"gitId":"jamessspanggg"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":422,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":423,"author":{"gitId":"jamessspanggg"},"content":"        // binary file contribution will have 0 contribution and won\u0027t be added to fileTypesAndContributionMap","isFullCredit":true},{"lineNumber":424,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"a00c51138cbf5ab7d14f52b52abb182c8a369169\", false,","isFullCredit":true},{"lineNumber":425,"author":{"gitId":"jamessspanggg"},"content":"                parseGitStrictIsoDate(\"2020-04-06T16:41:10+08:00\"), \"Add binary file\", \"\", null));","isFullCredit":true},{"lineNumber":426,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":427,"author":{"gitId":"jamessspanggg"},"content":"        config.setBranch(\"1192-CommitInfoAnalyzerTest-analyzeCommits_commitsWithBinaryContribution_success\");","isFullCredit":true},{"lineNumber":428,"author":{"gitId":"jamessspanggg"},"content":"        config.setAuthorList(Collections.singletonList(author));","isFullCredit":true},{"lineNumber":429,"author":{"gitId":"jamessspanggg"},"content":"        config.setFormats(FileTypeTest.NO_SPECIFIED_FORMATS);","isFullCredit":true},{"lineNumber":430,"author":{"gitId":"-"},"content":"        config.setSinceDate(LocalDateTime.of(2020, Month.APRIL, 6, 0, 0));","isFullCredit":true},{"lineNumber":431,"author":{"gitId":"-"},"content":"        config.setUntilDate(LocalDateTime.of(2020, Month.APRIL, 7, 0, 0));","isFullCredit":true},{"lineNumber":432,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":433,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d commitInfoExtractor.extractCommitInfos(config);","isFullCredit":true},{"lineNumber":434,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d commitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);","isFullCredit":true},{"lineNumber":435,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":436,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedCommitResults, actualCommitResults);","isFullCredit":true},{"lineNumber":437,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":438,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":439,"author":{"gitId":"jamessspanggg"},"content":"    @Test","isFullCredit":true},{"lineNumber":440,"author":{"gitId":"jamessspanggg"},"content":"    public void analyzeCommits_fileNameWithSpecialChars_success() throws Exception {","isFullCredit":true},{"lineNumber":441,"author":{"gitId":"jamessspanggg"},"content":"        // Runs test only on non Windows (Unix) operating systems as the file names are invalid in windows","isFullCredit":true},{"lineNumber":442,"author":{"gitId":"-"},"content":"        Assumptions.assumeTrue(!SystemUtil.isWindows());","isFullCredit":true},{"lineNumber":443,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":444,"author":{"gitId":"jamessspanggg"},"content":"        Author author \u003d new Author(JAMES_ALTERNATIVE_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":445,"author":{"gitId":"jamessspanggg"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":446,"author":{"gitId":"jamessspanggg"},"content":"        Map\u003cFileType, ContributionPair\u003e firstFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();","isFullCredit":true},{"lineNumber":447,"author":{"gitId":"jamessspanggg"},"content":"        firstFileTypeAndContributionMap.put(FILETYPE_TXT, new ContributionPair(1, 0));","isFullCredit":true},{"lineNumber":448,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"cfb3c8dc477cb0af19fce8bead4d278f35afa396\", false,","isFullCredit":true},{"lineNumber":449,"author":{"gitId":"jamessspanggg"},"content":"                parseGitStrictIsoDate(\"2020-04-20T12:09:39+08:00\"),","isFullCredit":true},{"lineNumber":450,"author":{"gitId":"jamessspanggg"},"content":"                \"Create file name without special chars\",","isFullCredit":true},{"lineNumber":451,"author":{"gitId":"jamessspanggg"},"content":"                \"\", null, firstFileTypeAndContributionMap));","isFullCredit":true},{"lineNumber":452,"author":{"gitId":"jamessspanggg"},"content":"        Map\u003cFileType, ContributionPair\u003e secondFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();","isFullCredit":true},{"lineNumber":453,"author":{"gitId":"jamessspanggg"},"content":"        secondFileTypeAndContributionMap.put(FILETYPE_TXT, new ContributionPair(0, 0));","isFullCredit":true},{"lineNumber":454,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"17bde492e9a80d8699ad193cf87e677341f936cc\", false,","isFullCredit":true},{"lineNumber":455,"author":{"gitId":"jamessspanggg"},"content":"                parseGitStrictIsoDate(\"2020-04-20T12:17:40+08:00\"),","isFullCredit":true},{"lineNumber":456,"author":{"gitId":"jamessspanggg"},"content":"                \"Rename to file name with special chars\",","isFullCredit":true},{"lineNumber":457,"author":{"gitId":"jamessspanggg"},"content":"                \"\", null, secondFileTypeAndContributionMap));","isFullCredit":true},{"lineNumber":458,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":459,"author":{"gitId":"jamessspanggg"},"content":"        config.setBranch(\"1244-CommitInfoAnalyzerTest-analyzeCommits_fileNameWithSpecialChars_success\");","isFullCredit":true},{"lineNumber":460,"author":{"gitId":"jamessspanggg"},"content":"        config.setAuthorList(Collections.singletonList(author));","isFullCredit":true},{"lineNumber":461,"author":{"gitId":"-"},"content":"        config.setSinceDate(LocalDateTime.of(2020, Month.APRIL, 20, 0, 0));","isFullCredit":true},{"lineNumber":462,"author":{"gitId":"-"},"content":"        config.setUntilDate(LocalDateTime.of(2020, Month.APRIL, 21, 0, 0));","isFullCredit":true},{"lineNumber":463,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":464,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d commitInfoExtractor.extractCommitInfos(config);","isFullCredit":true},{"lineNumber":465,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d commitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);","isFullCredit":true},{"lineNumber":466,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":467,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(2, actualCommitInfos.size());","isFullCredit":true},{"lineNumber":468,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedCommitResults, actualCommitResults);","isFullCredit":true},{"lineNumber":469,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":470,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":471,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":472,"author":{"gitId":"-"},"content":"     * Returns a {@link LocalDateTime} from a string {@code gitStrictIsoDate}.","isFullCredit":true},{"lineNumber":473,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":474,"author":{"gitId":"-"},"content":"    private LocalDateTime parseGitStrictIsoDate(String gitStrictIsoDate) {","isFullCredit":true},{"lineNumber":475,"author":{"gitId":"-"},"content":"        return ZonedDateTime.parse(gitStrictIsoDate, CommitInfoAnalyzer.GIT_STRICT_ISO_DATE_FORMAT)","isFullCredit":true},{"lineNumber":476,"author":{"gitId":"-"},"content":"                .withZoneSameInstant(config.getZoneId()).toLocalDateTime();","isFullCredit":true},{"lineNumber":477,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":478,"author":{"gitId":"yamidark"},"content":"}","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":101,"yamidark":46,"-":331}},{"path":"src/test/java/reposense/commits/CommitInfoExtractorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yamidark"},"content":"package reposense.commits;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.Month;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"yamidark"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"yamidark"},"content":"import reposense.commits.model.CommitInfo;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"yamidark"},"content":"import reposense.template.GitTestTemplate;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"yamidark"},"content":"import reposense.util.TestUtil;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"yamidark"},"content":"public class CommitInfoExtractorTest extends GitTestTemplate {","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private RepoConfiguration config;","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private CommitInfoExtractor commitInfoExtractor \u003d new CommitInfoExtractor();","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @BeforeEach","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void before() throws Exception {","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"        super.before();","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"        config \u003d configs.get();","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"yamidark"},"content":"    @Test","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"yamidark"},"content":"    public void withContentTest() {","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e commits \u003d commitInfoExtractor.extractCommitInfos(config);","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(commits.isEmpty());","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"yamidark"},"content":"    @Test","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"yamidark"},"content":"    public void withoutContentTest() {","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"        LocalDateTime sinceDate \u003d TestUtil.getSinceDate(2050, Month.JANUARY.getValue(), 1);","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"yamidark"},"content":"        config.setSinceDate(sinceDate);","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e commits \u003d commitInfoExtractor.extractCommitInfos(config);","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(commits.isEmpty());","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"yamidark"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yamidark":21,"-":19}},{"path":"src/test/java/reposense/git/GitBlameTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenepeh"},"content":"package reposense.git;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assumptions;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"eugenepeh"},"content":"import reposense.template.GitTestTemplate;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"eugenepeh"},"content":"public class GitBlameTest extends GitTestTemplate {","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"    protected static final Pattern IGNORED_AUTHOR_PATTERN \u003d Pattern.compile(\"(FH-30)\");","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private RepoConfiguration config;","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @BeforeEach","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void before() throws Exception {","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"        super.before();","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"        config \u003d configs.get();","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"eugenepeh"},"content":"    public void blameRaw_validFile_success() {","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"eugenepeh"},"content":"        String content \u003d GitBlame.blame(config.getRepoRoot(), \"blameTest.java\");","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(content.isEmpty());","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"eugenepeh"},"content":"    public void blameRaw_nonExistentFile_throwsRunTimeException() {","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(RuntimeException.class, () -\u003e GitBlame.blame(config.getRepoRoot(), \"nonExistentFile\"));","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void blameWithPreviousAuthorsRaw_validFile_success() {","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Assumptions.assumeTrue(GitVersion.isGitVersionSufficientForFindingPreviousAuthors());","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"        config.setBranch(TEST_REPO_BLAME_WITH_PREVIOUS_AUTHORS_BRANCH);","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), TEST_REPO_BLAME_WITH_PREVIOUS_AUTHORS_BRANCH);","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"        createTestIgnoreRevsFile(AUTHOR_TO_IGNORE_BLAME_COMMIT_LIST_07082021);","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String content \u003d GitBlame.blameWithPreviousAuthors(config.getRepoRoot(),","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \"blameTest.java\");","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"        removeTestIgnoreRevsFile();","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Matcher ignoredAuthorMatcher \u003d IGNORED_AUTHOR_PATTERN.matcher(content);","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(ignoredAuthorMatcher.find());","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void blameWithPreviousAuthorsRaw_nonExistentFile_throwsRunTimeException() {","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(RuntimeException.class, () -\u003e","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"                GitBlame.blameWithPreviousAuthors(config.getRepoRoot(), \"nonExistentFile\"));","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true}],"authorContributionMap":{"eugenepeh":14,"-":41}},{"path":"src/test/java/reposense/git/GitBranchTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenepeh"},"content":"package reposense.git;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import reposense.model.FileTypeTest;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"eugenepeh"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"eugenepeh"},"content":"import reposense.template.GitTestTemplate;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.util.TestRepoCloner;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"eugenepeh"},"content":"public class GitBranchTest extends GitTestTemplate {","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"eugenepeh"},"content":"    protected static final String TEST_REPO_UNCOMMON_DEFAULT_GIT_LOCATION \u003d","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"eugenepeh"},"content":"            \"https://github.com/reposense/testrepo-UncommonDefaultBranch.git\";","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private RepoConfiguration config;","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @BeforeEach","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void before() throws Exception {","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"        super.before();","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"        config \u003d configs.get();","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void getCurrentBranch_masterBranch_success() throws Exception {","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"eugenepeh"},"content":"        String currentBranch \u003d GitBranch.getCurrentBranch(config.getRepoRoot());","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"master\", currentBranch);","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void getCurrentBranch_uncommonDefaultBranch_success() throws Exception {","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"        RepoConfiguration uncommonDefaultConfig \u003d new RepoConfiguration(","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new RepoLocation(TEST_REPO_UNCOMMON_DEFAULT_GIT_LOCATION), RepoConfiguration.DEFAULT_BRANCH);","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"        uncommonDefaultConfig.setFormats(FileTypeTest.DEFAULT_TEST_FORMATS);","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(uncommonDefaultConfig);","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"eugenepeh"},"content":"        String currentBranch \u003d GitBranch.getCurrentBranch(uncommonDefaultConfig.getRepoRoot());","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"uncommon\", currentBranch);","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true}],"authorContributionMap":{"eugenepeh":19,"-":22}},{"path":"src/test/java/reposense/git/GitCheckoutTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenepeh"},"content":"package reposense.git;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"yamidark"},"content":"import java.nio.file.Files;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"yamidark"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"yamidark"},"content":"import java.nio.file.Paths;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.Month;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.git.exception.CommitNotFoundException;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"eugenepeh"},"content":"import reposense.template.GitTestTemplate;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.util.TestUtil;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"eugenepeh"},"content":"public class GitCheckoutTest extends GitTestTemplate {","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private RepoConfiguration config;","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @BeforeEach","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void before() throws Exception {","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"        super.before();","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"        config \u003d configs.get();","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"eugenepeh"},"content":"    public void checkout_validBranch_success() {","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"eugenepeh"},"content":"        GitCheckout.checkout(config.getRepoRoot(), \"test\");","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"eugenepeh"},"content":"        Path branchFile \u003d Paths.get(config.getRepoRoot(), \"inTestBranch.java\");","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.exists(branchFile));","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void checkoutBranchTest() {","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"yong24s"},"content":"        Path branchFile \u003d Paths.get(config.getRepoRoot(), \"inTestBranch.java\");","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(Files.exists(branchFile));","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"eugenepeh"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), \"test\");","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.exists(branchFile));","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void checkoutHashTest() {","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"yong24s"},"content":"        Path newFile \u003d Paths.get(config.getRepoRoot(), \"newFile.java\");","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.exists(newFile));","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"eugenepeh"},"content":"        GitCheckout.checkout(config.getRepoRoot(), FIRST_COMMIT_HASH);","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(Files.exists(newFile));","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void checkoutToDate_validDate_success() throws Exception {","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"yong24s"},"content":"        Path newFile \u003d Paths.get(config.getRepoRoot(), \"newFile.java\");","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.exists(newFile));","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"        LocalDateTime untilDate \u003d TestUtil.getUntilDate(2018, Month.FEBRUARY.getValue(), 6);","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutDate(config.getRepoRoot(), config.getBranch(), untilDate, config.getZoneId());","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(Files.exists(newFile));","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void checkoutToDate_invalidDate_throwsEmptyCommitException() {","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"        LocalDateTime untilDate \u003d TestUtil.getUntilDate(2015, Month.FEBRUARY.getValue(), 6);","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(CommitNotFoundException.class, () -\u003e GitCheckout.checkoutDate(config.getRepoRoot(),","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"                config.getBranch(), untilDate, config.getZoneId()));","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yamidark":3,"yong24s":3,"eugenepeh":16,"-":46}},{"path":"src/test/java/reposense/git/GitCloneTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenepeh"},"content":"package reposense.git;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"eugenepeh"},"content":"import java.nio.file.Files;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"eugenepeh"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"eugenepeh"},"content":"import java.nio.file.Paths;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"eugenepeh"},"content":"import reposense.template.GitTestTemplate;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"eugenepeh"},"content":"public class GitCloneTest extends GitTestTemplate {","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private RepoConfiguration config;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @BeforeEach","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void before() throws Exception {","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super.before();","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"        config \u003d configs.get();","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void cloneTest_validRepo_success() {","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"eugenepeh"},"content":"        // As the clone has been performed in the {@code GitTestTemplate},","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"eugenepeh"},"content":"        // this checks whether the clone has been executed successfully by performing a file system check.","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"eugenepeh"},"content":"        Path dir \u003d Paths.get(config.getRepoRoot());","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.exists(dir));","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true}],"authorContributionMap":{"eugenepeh":17,"-":13}},{"path":"src/test/java/reposense/git/GitDiffTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenepeh"},"content":"package reposense.git;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"eugenepeh"},"content":"import reposense.template.GitTestTemplate;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"eugenepeh"},"content":"public class GitDiffTest extends GitTestTemplate {","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private RepoConfiguration config;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @BeforeEach","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void before() throws Exception {","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"        super.before();","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"        config \u003d configs.get();","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"eugenepeh"},"content":"    public void diffCommit_validCommitHash_success() {","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String diffResult \u003d GitDiff.diffCommit(config.getRepoRoot(),","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"                FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018.toString());","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(diffResult.isEmpty());","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"eugenepeh"},"content":"    public void diffCommit_emptyCommitHash_emptyResult() {","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"eugenepeh"},"content":"        String diffResult \u003d GitDiff.diffCommit(config.getRepoRoot(), LATEST_COMMIT_HASH);","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(diffResult.isEmpty());","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"eugenepeh"},"content":"    public void diffCommit_latestCommitHash_emptyResult() {","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"eugenepeh"},"content":"        String diffResult \u003d GitDiff.diffCommit(config.getRepoRoot(), \"\");","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(diffResult.isEmpty());","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"eugenepeh"},"content":"    public void diffCommit_nonexistentCommitHash_throwsRunTimeException() {","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(RuntimeException.class, () -\u003e GitDiff.diffCommit(config.getRepoRoot(),","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"                NONEXISTENT_COMMIT_HASH));","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void diffCommit_commitContainingSubmodule_ignoresSubmodule() {","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(),","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"                \"850-GitDiffTest-diffCommit_commitContainingSubmodule_ignoresSubmodule\");","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String diffResult \u003d GitDiff.diffCommit(config.getRepoRoot(), EMPTY_TREE_HASH);","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(diffResult.contains(\"Subproject commit\"));","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true}],"authorContributionMap":{"eugenepeh":25,"-":27}},{"path":"src/test/java/reposense/git/GitLogTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenepeh"},"content":"package reposense.git;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.Month;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"eugenepeh"},"content":"import java.util.Collections;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"eugenepeh"},"content":"import reposense.model.Author;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.model.FileType;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"eugenepeh"},"content":"import reposense.template.GitTestTemplate;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"eugenepeh"},"content":"import reposense.util.TestUtil;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.util.TimeUtil;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"eugenepeh"},"content":"public class GitLogTest extends GitTestTemplate {","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private RepoConfiguration config;","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @BeforeEach","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void before() throws Exception {","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"        super.before();","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"        config \u003d configs.get();","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"eugenepeh"},"content":"    public void gitLog_existingFormats_hasContent() {","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"eugenepeh"},"content":"        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(content.isEmpty());","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"eugenepeh"},"content":"    public void gitLog_nonExistingFormats_noContent() {","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"        config.setFormats(FileType.convertFormatStringsToFileTypes(Collections.singletonList(\"py\")));","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"eugenepeh"},"content":"        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(content.isEmpty());","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"eugenepeh"},"content":"    public void gitLog_includeAllJavaFiles_success() {","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"        config.setFormats(FileType.convertFormatStringsToFileTypes(Collections.singletonList(\"java\")));","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"eugenepeh"},"content":"        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberExpectedCommitsToGitLogLines(12, content));","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"eugenepeh"},"content":"    public void gitLog_fakeAuthorNameOnly_success() {","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"eugenepeh"},"content":"        Author fakeAuthorName \u003d new Author(FAKE_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"eugenepeh"},"content":"        String content \u003d GitLog.get(config, fakeAuthorName);","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberExpectedCommitsToGitLogLines(8, content));","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"eugenepeh"},"content":"    public void gitLog_authorNameIncorrectCase_success() {","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"eugenepeh"},"content":"        Author fakeAuthorName \u003d new Author(FAKE_AUTHOR_NAME.toUpperCase());","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"eugenepeh"},"content":"        String content \u003d GitLog.get(config, fakeAuthorName);","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberExpectedCommitsToGitLogLines(8, content));","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"eugenepeh"},"content":"    public void gitLog_fakeAuthorNameWithSpecialCharacter_success() {","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"eugenepeh"},"content":"        Author fakeAuthorWithSpecialCharacter \u003d new Author(FAKE_AUTHOR_NAME.replace(\"fake\", \"#()!\"));","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"eugenepeh"},"content":"        String content \u003d GitLog.get(config, fakeAuthorWithSpecialCharacter);","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberExpectedCommitsToGitLogLines(8, content));","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"eugenepeh"},"content":"    public void gitLog_includeAllJavaFilesAuthorIgnoreMovedFile_success() {","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"        config.setFormats(FileType.convertFormatStringsToFileTypes(Collections.singletonList(\"java\")));","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"eugenepeh"},"content":"        Author ignoreMovedFileAuthor \u003d getAlphaAllAliasAuthor();","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"eugenepeh"},"content":"        ignoreMovedFileAuthor.setIgnoreGlobList(Collections.singletonList(\"**movedFile.java\"));","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.getWithFiles(config, ignoreMovedFileAuthor);","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(4, content));","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"eugenepeh"},"content":"    public void gitLog_authorIgnoreAllJavaFiles_success() {","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"        config.setFormats(FileType.convertFormatStringsToFileTypes(Collections.singletonList(\"java\")));","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"eugenepeh"},"content":"        Author ignoreAllJavaFilesAuthor \u003d getAlphaAllAliasAuthor();","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"eugenepeh"},"content":"        ignoreAllJavaFilesAuthor.setIgnoreGlobList(Collections.singletonList(\"*.java\"));","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.getWithFiles(config, ignoreAllJavaFilesAuthor);","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(0, content));","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void gitLog_validIgnoreGlobs_success() {","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Author author \u003d getAlphaAllAliasAuthor();","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"annotationTest.java\"));","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.getWithFiles(config, author);","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(6, content));","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"**Test**\"));","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"        content \u003d GitLog.getWithFiles(config, author);","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(5, content));","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"README.md\"));","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"        content \u003d GitLog.getWithFiles(config, author);","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(6, content));","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"**.java\"));","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"        content \u003d GitLog.getWithFiles(config, author);","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(1, content));","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"./newPos\"));","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"-"},"content":"        content \u003d GitLog.getWithFiles(config, author);","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(6, content));","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void gitLog_invalidIgnoreGlobs_filtered() {","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Author author \u003d getAlphaAllAliasAuthor();","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"../testrepo-Alpha\"));","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.getWithFiles(config, author);","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(7, content));","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"../*.java\"));","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"-"},"content":"        content \u003d GitLog.getWithFiles(config, author);","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(7, content));","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"/newPos\"));","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"-"},"content":"        content \u003d GitLog.getWithFiles(config, author);","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(7, content));","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"..\"));","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"-"},"content":"        content \u003d GitLog.getWithFiles(config, author);","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(7, content));","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"eugenepeh"},"content":"    public void gitLog_authorWithAllCharactersRegexAlias_emptyResult() {","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"eugenepeh"},"content":"        Author authorWithAllCharactersRegexAlias \u003d new Author(\"none\");","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"eugenepeh"},"content":"        authorWithAllCharactersRegexAlias.setAuthorAliases(Collections.singletonList(\".*\"));","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"eugenepeh"},"content":"        String content \u003d GitLog.get(config, authorWithAllCharactersRegexAlias);","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(content.isEmpty());","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"eugenepeh"},"content":"    public void gitLog_sinceDateInFuture_noContent() {","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"-"},"content":"        LocalDateTime date \u003d TimeUtil.getSinceDate(","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"-"},"content":"                LocalDateTime.of(2050, Month.JANUARY, 1, 0, 0));","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"-"},"content":"        config.setSinceDate(date);","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(content.isEmpty());","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void gitLog_invalidSinceDateInFuture_noContent() {","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"-"},"content":"        LocalDateTime date \u003d TimeUtil.getSinceDate(","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"-"},"content":"                LocalDateTime.of(2100, Month.JANUARY, 1, 0, 0));","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"eugenepeh"},"content":"        config.setSinceDate(date);","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"eugenepeh"},"content":"        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(content.isEmpty());","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void gitLog_untilDateBeforeAnyCommit_noContent() {","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"-"},"content":"        LocalDateTime date \u003d TimeUtil.getUntilDate(","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"-"},"content":"                LocalDateTime.of(2010, Month.JANUARY, 1, 0, 0));","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"-"},"content":"        config.setUntilDate(date);","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"-"},"content":"        config.setSinceDate(null);","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(content.isEmpty());","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void gitLog_invalidUntilDateBeforeAnyCommit_noContent() {","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"-"},"content":"        LocalDateTime date \u003d TimeUtil.getUntilDate(","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"-"},"content":"                LocalDateTime.of(1969, Month.JANUARY, 1, 0, 0));","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"eugenepeh"},"content":"        config.setUntilDate(date);","isFullCredit":true},{"lineNumber":179,"author":{"gitId":"eugenepeh"},"content":"        config.setSinceDate(null);","isFullCredit":true},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());","isFullCredit":true},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(content.isEmpty());","isFullCredit":true},{"lineNumber":182,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":183,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void gitLog_emailWithAdditionOperator_success() {","isFullCredit":true},{"lineNumber":186,"author":{"gitId":"-"},"content":"        config.setBranch(\"617-FileAnalyzerTest-analyzeFile_emailWithAdditionOperator_success\");","isFullCredit":true},{"lineNumber":187,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), config.getBranch());","isFullCredit":true},{"lineNumber":188,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(MINGYI_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":189,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));","isFullCredit":true},{"lineNumber":190,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":191,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, author);","isFullCredit":true},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberExpectedCommitsToGitLogLines(1, content));","isFullCredit":true},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":194,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true}],"authorContributionMap":{"eugenepeh":78,"-":116}},{"path":"src/test/java/reposense/git/GitRevListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenepeh"},"content":"package reposense.git;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.Month;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"eugenepeh"},"content":"import reposense.template.GitTestTemplate;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"eugenepeh"},"content":"import reposense.util.TestUtil;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"eugenepeh"},"content":"public class GitRevListTest extends GitTestTemplate {","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private RepoConfiguration config;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @BeforeEach","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void before() throws Exception {","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super.before();","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"        config \u003d configs.get();","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void getCommitHashUntilDate_beforeInitialCommitDate_emptyResult() {","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"        LocalDateTime date \u003d TestUtil.getUntilDate(2018, Month.FEBRUARY.getValue(), 4);","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String commitHash \u003d GitRevList.getCommitHashUntilDate(config.getRepoRoot(), config.getBranch(), date,","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"                config.getZoneId());","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(commitHash.isEmpty());","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void getCommitHashUntilDate_afterLatestCommitDate_success() {","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"        LocalDateTime date \u003d TestUtil.getUntilDate(2018, Month.MAY.getValue(), 10);","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String commitHash \u003d GitRevList.getCommitHashUntilDate(config.getRepoRoot(), config.getBranch(), date,","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"                config.getZoneId());","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"eugenepeh"},"content":"        // result from git has a newline at the end","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(EUGENE_AUTHOR_README_FILE_COMMIT_07052018 + \"\\n\", commitHash);","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void getCommitHashUntilDate_februaryNineDate_success() {","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"        LocalDateTime date \u003d TestUtil.getUntilDate(2018, Month.FEBRUARY.getValue(), 8);","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String commitHash \u003d GitRevList.getCommitHashUntilDate(config.getRepoRoot(), config.getBranch(), date,","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"                config.getZoneId());","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"eugenepeh"},"content":"        // result from git has a newline at the end","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018 + \"\\n\", commitHash);","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void getCommitHashBeforeDate_nullDate_emptyResult() {","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String commitHash \u003d GitRevList.getCommitHashUntilDate(config.getRepoRoot(), config.getBranch(), null, null);","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(commitHash.isEmpty());","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void getCommitHashBeforeDate_invalidBranch_throwsRunTimeException() {","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"        LocalDateTime date \u003d TestUtil.getUntilDate(2018, Month.FEBRUARY.getValue(), 9);","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(RuntimeException.class, () -\u003e GitRevList.getCommitHashUntilDate(config.getRepoRoot(),","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \"invalidBranch\", date, config.getZoneId()));","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void getCommitHashInRange_nullStartAndEndHash_emptyResult() {","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String commitHash \u003d GitRevList.getCommitHashInRange(config.getRepoRoot(), config.getBranch(), null, null);","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(commitHash.isEmpty());","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void getCommitHashInRange_nullStartHash_success() {","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String commitHash \u003d GitRevList.getCommitHashInRange(config.getRepoRoot(), config.getBranch(), null,","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"                LATEST_COMMIT_HASH);","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(LATEST_COMMIT_HASH, commitHash);","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void getCommitHashInRange_nullEndHash_success() {","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String commitHash \u003d GitRevList.getCommitHashInRange(config.getRepoRoot(), config.getBranch(),","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"                LATEST_COMMIT_HASH, null);","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(LATEST_COMMIT_HASH, commitHash);","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void getCommitHashInRange_sameStartAndEndHash_success() {","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String commitHash \u003d GitRevList.getCommitHashInRange(config.getRepoRoot(), config.getBranch(),","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"                LATEST_COMMIT_HASH, LATEST_COMMIT_HASH);","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(LATEST_COMMIT_HASH, commitHash);","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getCommitHashInRange_invalidStartAndEndHash_emptyResult() {","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String commitHash \u003d GitRevList.getCommitHashInRange(config.getRepoRoot(), config.getBranch(),","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"-"},"content":"                NONEXISTENT_COMMIT_HASH, NONEXISTENT_COMMIT_HASH);","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(commitHash.isEmpty());","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void getCommitHashInRange_invalidStartHash_success() {","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String commitHash \u003d GitRevList.getCommitHashInRange(config.getRepoRoot(), config.getBranch(),","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"                NONEXISTENT_COMMIT_HASH, LATEST_COMMIT_HASH);","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(LATEST_COMMIT_HASH, commitHash);","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void getCommitHashInRange_invalidEndHash_success() {","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String commitHash \u003d GitRevList.getCommitHashInRange(config.getRepoRoot(), config.getBranch(),","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"                LATEST_COMMIT_HASH, NONEXISTENT_COMMIT_HASH);","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(LATEST_COMMIT_HASH, commitHash);","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void getRootCommits_success() {","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"-"},"content":"        List\u003cString\u003e rootCommits \u003d GitRevList.getRootCommits(config.getRepoRoot());","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, rootCommits.size());","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(ROOT_COMMIT_HASH, rootCommits.get(0));","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void getIsEmptyRepo_success() {","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"-"},"content":"        boolean isEmpty \u003d GitRevList.checkIsEmptyRepo(config.getRepoRoot());","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(false, isEmpty);","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true}],"authorContributionMap":{"eugenepeh":27,"-":98}},{"path":"src/test/java/reposense/git/GitShortlogTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenepeh"},"content":"package reposense.git;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Month;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"eugenepeh"},"content":"import java.util.ArrayList;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"eugenepeh"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"eugenepeh"},"content":"import reposense.model.Author;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"eugenepeh"},"content":"import reposense.template.GitTestTemplate;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"yamidark"},"content":"import reposense.util.TestUtil;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"eugenepeh"},"content":"public class GitShortlogTest extends GitTestTemplate {","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private RepoConfiguration config;","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @BeforeEach","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void before() throws Exception {","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"        super.before();","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"        config \u003d configs.get();","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"eugenepeh"},"content":"    public void getAuthors_validRepoNoDateRange_success() {","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"yamidark"},"content":"        List\u003cAuthor\u003e expectedAuthorList \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"yamidark"},"content":"        expectedAuthorList.add(new Author(\"Eugene Peh\"));","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"        expectedAuthorList.add(new Author(\"FH-30\"));","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"        expectedAuthorList.add(new Author(\"HCY123902\"));","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"        expectedAuthorList.add(new Author(\"WANG CHAO\"));","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"        expectedAuthorList.add(new Author(\"chan-j-d\"));","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"eugenepeh"},"content":"        expectedAuthorList.add(new Author(\"eugenepeh\"));","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"eugenepeh"},"content":"        expectedAuthorList.add(new Author(\"fakeAuthor\"));","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"eugenepeh"},"content":"        expectedAuthorList.add(new Author(\"harryggg\"));","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expectedAuthorList.add(new Author(\"sikai00\"));","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"eugenepeh"},"content":"        List\u003cAuthor\u003e actualAuthorList \u003d GitShortlog.getAuthors(config);","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedAuthorList.size(), actualAuthorList.size());","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedAuthorList, actualAuthorList);","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"yamidark"},"content":"    @Test","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"eugenepeh"},"content":"    public void getAuthors_validRepoDateRange_success() {","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"yamidark"},"content":"        List\u003cAuthor\u003e expectedAuthorList \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"yamidark"},"content":"        expectedAuthorList.add(new Author(\"eugenepeh\"));","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"        config.setSinceDate(TestUtil.getSinceDate(2018, Month.MAY.getValue(), 5));","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"        config.setUntilDate(TestUtil.getUntilDate(2018, Month.MAY.getValue(), 10));","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"eugenepeh"},"content":"        List\u003cAuthor\u003e actualAuthorList \u003d GitShortlog.getAuthors(config);","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedAuthorList.size(), actualAuthorList.size());","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedAuthorList, actualAuthorList);","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"yamidark"},"content":"    @Test","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"eugenepeh"},"content":"    public void getAuthors_validRepoDateOutOfRange_success() {","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"        config.setSinceDate(TestUtil.getSinceDate(2018, Month.JUNE.getValue(), 1));","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"        config.setUntilDate(TestUtil.getUntilDate(2018, Month.JUNE.getValue(), 20));","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"eugenepeh"},"content":"        List\u003cAuthor\u003e actualAuthorList \u003d GitShortlog.getAuthors(config);","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(actualAuthorList.isEmpty());","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yamidark":16,"eugenepeh":25,"-":26}},{"path":"src/test/java/reposense/model/AuthorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenepeh"},"content":"package reposense.model;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"eugenepeh"},"content":"import java.nio.file.Paths;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"eugenepeh"},"content":"import java.util.ArrayList;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"eugenepeh"},"content":"import java.util.Arrays;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"eugenepeh"},"content":"import java.util.Collections;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"eugenepeh"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"eugenepeh"},"content":"import reposense.util.AssertUtil;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"eugenepeh"},"content":"public class AuthorTest {","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"eugenepeh"},"content":"    public void setEmail_validEmails_success() {","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"eugenepeh"},"content":"        Author author \u003d new Author(\"Tester\");","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"eugenepeh"},"content":"        String[] emails \u003d new String[] {\"tester@test.net\", \"developer@example.com\"};","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"eugenepeh"},"content":"        author.setEmails(Arrays.asList(emails));","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"eugenepeh"},"content":"        // The additional 1 email comes from the Standard GitHub Email.","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(emails.length + 1, author.getEmails().size());","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(author.getEmails().containsAll(Arrays.asList(emails)));","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"eugenepeh"},"content":"    public void setEmail_invalidEmails_throwIllegalArgumentException() {","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"eugenepeh"},"content":"        Author author \u003d new Author(\"Tester\");","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"eugenepeh"},"content":"        String[] emails \u003d new String[] {\"this.”is\\\\ invalid”@example.com\", \"developer@example.com\"};","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"eugenepeh"},"content":"        AssertUtil.assertThrows(IllegalArgumentException.class, () -\u003e author.setEmails(Arrays.asList(emails)));","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"eugenepeh"},"content":"        AssertUtil.assertThrows(IllegalArgumentException.class, () -\u003e author.setEmails(Collections.singletonList(\"\")));","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"eugenepeh"},"content":"    public void setIgnoreGlobList_validGlobRegex_success() {","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"eugenepeh"},"content":"        Author author \u003d new Author(\"Tester\");","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"eugenepeh"},"content":"        String[] ignoreGlobs \u003d new String[] {\"**.adoc\", \"collated/**\"};","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"eugenepeh"},"content":"        String[] testPaths \u003d new String[] {\"docs/UserGuide.adoc\", \"collated/codeeong.md\"};","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"eugenepeh"},"content":"        author.setIgnoreGlobList(Arrays.asList(ignoreGlobs));","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(2, author.getIgnoreGlobList().size());","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(author.getIgnoreGlobList().containsAll(Arrays.asList(ignoreGlobs)));","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"eugenepeh"},"content":"        Arrays.stream(testPaths).forEach(value -\u003e","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"                Assertions.assertTrue(author.isIgnoringFile(Paths.get(value))));","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"eugenepeh"},"content":"    public void setIgnoreGlobList_quoteInGlobPattern_throwIllegalArgumentException() {","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"eugenepeh"},"content":"        Author author \u003d new Author(\"Tester\");","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"eugenepeh"},"content":"        String[] ignoreGlobs \u003d new String[] {\"**.adoc\", \"collated/**\\\"\"};","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(IllegalArgumentException.class, () -\u003e author.setIgnoreGlobList(","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"                Arrays.asList(ignoreGlobs)));","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"eugenepeh"},"content":"    public void setIgnoreGlobList_semicolonInGlobPattern_throwIllegalArgumentException() {","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"eugenepeh"},"content":"        Author author \u003d new Author(\"Tester\");","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"eugenepeh"},"content":"        String[] ignoreGlobs \u003d new String[] {\"**.adoc; echo hi\", \"collated/**\"};","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(IllegalArgumentException.class, () -\u003e author.setIgnoreGlobList(","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Arrays.asList(ignoreGlobs)));","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"eugenepeh"},"content":"    public void appendIgnoreGlobList_validGlobRegex_success() {","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"eugenepeh"},"content":"        Author author \u003d new Author(\"Tester\");","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"eugenepeh"},"content":"        String[] ignoreGlobs \u003d new String[] {\"**.adoc\", \"collated/**\"};","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"eugenepeh"},"content":"        String[] moreIgnoreGlobs \u003d new String[] {\"**[!(.md)]\", \"C:\\\\\\\\Program Files\\\\\\\\**\"};","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"eugenepeh"},"content":"        String[] testPaths \u003d new String[] {","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"eugenepeh"},"content":"            \"docs/UserGuide.adoc\",","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"eugenepeh"},"content":"            \"collated/codeeong.md\",","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"eugenepeh"},"content":"            \"C:\\\\Program Files\\\\RepoSense\\\\README.md\",","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"eugenepeh"},"content":"            \"/this/is/not/a/md/file.txt\"","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"eugenepeh"},"content":"        };","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"eugenepeh"},"content":"        List\u003cString\u003e ignoreGlobList \u003d new ArrayList\u003c\u003e(Arrays.asList(ignoreGlobs));","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"eugenepeh"},"content":"        ignoreGlobList.addAll(Arrays.asList(moreIgnoreGlobs));","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"eugenepeh"},"content":"        author.setIgnoreGlobList(Arrays.asList(ignoreGlobs));","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"        author.importIgnoreGlobList(Arrays.asList(moreIgnoreGlobs));","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(4, author.getIgnoreGlobList().size());","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(author.getIgnoreGlobList().containsAll(ignoreGlobList));","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"eugenepeh"},"content":"        Arrays.stream(testPaths).forEach(value -\u003e","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"                Assertions.assertTrue(author.isIgnoringFile(Paths.get(value))));","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"eugenepeh"},"content":"    public void appendIgnoreGlobList_appendOrOperator_throwIllegalArgumentException() {","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"eugenepeh"},"content":"        Author author \u003d new Author(\"Tester\");","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"eugenepeh"},"content":"        String[] ignoreGlobs \u003d new String[] {\"**[!(.md)] | rm -rf /\", \"C:\\\\Program Files\\\\**\"};","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(IllegalArgumentException.class, () -\u003e author.importIgnoreGlobList(","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"                Arrays.asList(ignoreGlobs)));","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true}],"authorContributionMap":{"eugenepeh":80,"-":20}},{"path":"src/test/java/reposense/model/RepoConfigurationTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.model;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"yong24s"},"content":"import static org.apache.tools.ant.types.Commandline.translateCommandline;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static reposense.util.TestUtil.loadResource;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.lang.reflect.Method;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yong24s"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"yong24s"},"content":"import java.util.Arrays;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"eugenepeh"},"content":"import java.util.Collections;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeAll;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.parser.ArgsParser;","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.parser.AuthorConfigCsvParser;","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.parser.GroupConfigCsvParser;","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.parser.RepoConfigCsvParser;","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.report.ReportGenerator;","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.util.InputBuilder;","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.util.TestRepoCloner;","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"yong24s"},"content":"import reposense.util.TestUtil;","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class RepoConfigurationTest {","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Path IGNORE_STANDALONE_TEST_CONFIG_FILES \u003d","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"            loadResource(RepoConfigurationTest.class, \"RepoConfigurationTest/repoconfig_ignoreStandAlone_test\");","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"yong24s"},"content":"    private static final Path IGNORE_STANDALONE_KEYWORD_TEST_CONFIG_FILES \u003d","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"            loadResource(RepoConfigurationTest.class, \"RepoConfigurationTest/repoconfig_ignoreStandAloneKeyword_test\");","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Path FORMATS_TEST_CONFIG_FILES \u003d loadResource(RepoConfigurationTest.class,","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \"RepoConfigurationTest/repoconfig_formats_test\");","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Path WITHOUT_FORMATS_TEST_CONFIG_FILES \u003d loadResource(RepoConfigurationTest.class,","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \"RepoConfigurationTest/repoconfig_withoutformats_test\");","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Path GROUPS_TEST_CONFIG_FILES \u003d loadResource(RepoConfigurationTest.class,","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \"RepoConfigurationTest/repoconfig_groups_test\");","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Path OVERRIDE_STANDALONE_TEST_CONFIG_FILE \u003d loadResource(RepoConfigurationTest.class,","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \"RepoConfigurationTest/repoconfig_overrideStandAlone_test\");","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Path IGNORE_AUTHORS_TEST_CONFIG_FILE \u003d loadResource(RepoConfigurationTest.class,","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \"RepoConfigurationTest/repoconfig_ignoreAuthors_test\");","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Path IGNORE_STANDALONE_FLAG_OVERRIDE_CSV_TEST \u003d loadResource(RepoConfigurationTest.class,","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \"RepoConfigurationTest/repoconfig_ignoreStandaloneOverrideCsv_test\");","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Path IGNORE_FILESIZE_LIMIT_TEST_CONFIG_FILES \u003d loadResource(RepoConfigurationTest.class,","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \"RepoConfigurationTest/repoconfig_ignoreFileSizeLimit_test\");","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Path IGNORE_FILESIZE_LIMIT_OVERRIDE_CSV_TEST_CONFIG_FILES \u003d","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"            loadResource(RepoConfigurationTest.class,","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \"RepoConfigurationTest/repoconfig_ignoreFileSizeLimitOverrideCsv_test\");","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final Path SHALLOW_CLONING_TEST_CONFIG_FILES \u003d","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"            loadResource(RepoConfigurationTest.class, \"RepoConfigurationTest/repoconfig_shallowCloning_test\");","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final Path SHALLOW_CLONING_FLAG_OVERRIDE_TEST_CONFIG_FILES \u003d","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"            loadResource(RepoConfigurationTest.class,","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \"RepoConfigurationTest/repoconfig_shallowCloningOverrideCsv_test\");","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final Path FIND_PREVIOUS_AUTHORS_TEST_CONFIG_FILES \u003d","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"            loadResource(RepoConfigurationTest.class,","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \"RepoConfigurationTest/repoconfig_findPreviousAuthors_test\");","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final Path FIND_PREVIOUS_AUTHORS_FLAG_OVERRIDE_TEST_CONFIG_FILES \u003d","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"            loadResource(RepoConfigurationTest.class,","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"            \"RepoConfigurationTest/repoconfig_findPreviousAuthorsOverrideCsv_test\");","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_BETA \u003d \"https://github.com/reposense/testrepo-Beta.git\";","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_DELTA \u003d \"https://github.com/reposense/testrepo-Delta.git\";","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_MINIMAL_STANDALONE_CONFIG \u003d","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"            \"https://github.com/reposense/testrepo-minimalstandaloneconfig.git\";","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static final Author FIRST_AUTHOR \u003d new Author(\"lithiumlkid\");","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static final Author SECOND_AUTHOR \u003d new Author(\"codeeong\");","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private static final Author THIRD_AUTHOR \u003d new Author(\"jordancjq\");","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static final Author FOURTH_AUTHOR \u003d new Author(\"lohtianwei\");","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"eugenepeh"},"content":"    private static final List\u003cString\u003e FIRST_AUTHOR_ALIASES \u003d Collections.singletonList(\"Ahmad Syafiq\");","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"eugenepeh"},"content":"    private static final List\u003cString\u003e SECOND_AUTHOR_ALIASES \u003d Collections.emptyList();","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"eugenepeh"},"content":"    private static final List\u003cString\u003e THIRD_AUTHOR_ALIASES \u003d Collections.singletonList(\"Jordan Chong\");","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"eugenepeh"},"content":"    private static final List\u003cString\u003e FOURTH_AUTHOR_ALIASES \u003d Collections.singletonList(\"Tianwei\");","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"eugenepeh"},"content":"    private static final List\u003cString\u003e REPO_LEVEL_GLOB_LIST \u003d Collections.singletonList(\"collated**\");","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"yong24s"},"content":"    private static final List\u003cString\u003e FIRST_AUTHOR_GLOB_LIST \u003d","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"yong24s"},"content":"            Arrays.asList(\"*.aa1\", \"**.aa2\", \"**.java\", \"collated**\");","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"eugenepeh"},"content":"    private static final List\u003cString\u003e SECOND_AUTHOR_GLOB_LIST \u003d Arrays.asList(\"\", \"collated**\");","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"eugenepeh"},"content":"    private static final List\u003cString\u003e THIRD_AUTHOR_GLOB_LIST \u003d Arrays.asList(\"**[!(.md)]\", \"collated**\");","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"eugenepeh"},"content":"    private static final List\u003cString\u003e FOURTH_AUTHOR_GLOB_LIST \u003d Collections.singletonList(\"collated**\");","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private static final List\u003cFileType\u003e CONFIG_FORMATS \u003d FileType.convertFormatStringsToFileTypes(Arrays.asList(","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"            \"java\", \"adoc\", \"md\"));","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private static final List\u003cFileType\u003e FIRST_CONFIG_GROUPS \u003d Arrays.asList(","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"            new FileType(\"test\", Collections.singletonList(\"src/test**\")),","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"            new FileType(\"code\", Collections.singletonList(\"**.java\")),","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"            new FileType(\"docs\", Collections.singletonList(\"docs**\")));","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static final List\u003cFileType\u003e SECOND_CONFIG_GROUPS \u003d Arrays.asList(","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"            new FileType(\"docs\", Collections.singletonList(\"docs**\")));","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"yong24s"},"content":"    private static final List\u003cString\u003e CLI_FORMATS \u003d Arrays.asList(\"css\", \"html\");","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private static RepoConfiguration repoDeltaStandaloneConfig;","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private ReportGenerator reportGenerator \u003d new ReportGenerator();","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @BeforeAll","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static void setUp() throws Exception {","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"yong24s"},"content":"        FIRST_AUTHOR.setAuthorAliases(FIRST_AUTHOR_ALIASES);","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"yong24s"},"content":"        SECOND_AUTHOR.setAuthorAliases(SECOND_AUTHOR_ALIASES);","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"yong24s"},"content":"        THIRD_AUTHOR.setAuthorAliases(THIRD_AUTHOR_ALIASES);","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"yong24s"},"content":"        FOURTH_AUTHOR.setAuthorAliases(FOURTH_AUTHOR_ALIASES);","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"yong24s"},"content":"        FIRST_AUTHOR.setIgnoreGlobList(FIRST_AUTHOR_GLOB_LIST);","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"yong24s"},"content":"        SECOND_AUTHOR.setIgnoreGlobList(SECOND_AUTHOR_GLOB_LIST);","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"yong24s"},"content":"        THIRD_AUTHOR.setIgnoreGlobList(THIRD_AUTHOR_GLOB_LIST);","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"eugenepeh"},"content":"        FOURTH_AUTHOR.setIgnoreGlobList(FOURTH_AUTHOR_GLOB_LIST);","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"yong24s"},"content":"        List\u003cAuthor\u003e expectedAuthors \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"yong24s"},"content":"        expectedAuthors.add(FIRST_AUTHOR);","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"yong24s"},"content":"        expectedAuthors.add(SECOND_AUTHOR);","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"yong24s"},"content":"        expectedAuthors.add(THIRD_AUTHOR);","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"yong24s"},"content":"        expectedAuthors.add(FOURTH_AUTHOR);","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_DELTA), \"master\");","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig.setAuthorList(expectedAuthors);","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig.addAuthorNamesToAuthorMapEntry(FIRST_AUTHOR, FIRST_AUTHOR_ALIASES);","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig.addAuthorNamesToAuthorMapEntry(FOURTH_AUTHOR, FOURTH_AUTHOR_ALIASES);","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig.setAuthorDisplayName(FIRST_AUTHOR, \"Ahm\");","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig.setAuthorDisplayName(SECOND_AUTHOR, \"Cod\");","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig.setAuthorDisplayName(THIRD_AUTHOR, \"Jor\");","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig.setAuthorDisplayName(FOURTH_AUTHOR, \"Loh\");","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"eugenepeh"},"content":"        SECOND_AUTHOR.setEmails(Arrays.asList(\"codeeong@gmail.com\", \"33129797+codeeong@users.noreply.github.com\"));","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"eugenepeh"},"content":"        for (Author author : expectedAuthors) {","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"            repoDeltaStandaloneConfig.addAuthorEmailsToAuthorMapEntry(author, author.getEmails());","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"eugenepeh"},"content":"        }","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig.setFormats(CONFIG_FORMATS);","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"yong24s"},"content":"    @Test","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void repoConfig_usesStandaloneConfig_success() throws Exception {","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_DELTA), \"master\");","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(actualConfig);","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"-"},"content":"        reportGenerator.updateRepoConfig(actualConfig);","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoDeltaStandaloneConfig, actualConfig);","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"yong24s"},"content":"    @Test","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void repoConfig_ignoresStandaloneConfig_success() throws Exception {","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"yong24s"},"content":"        List\u003cAuthor\u003e expectedAuthors \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"yong24s"},"content":"        Author author \u003d new Author(FIRST_AUTHOR);","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"yong24s"},"content":"        author.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"yong24s"},"content":"        expectedAuthors.add(author);","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedConfig \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_DELTA), \"master\");","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"yong24s"},"content":"        expectedConfig.setAuthorList(expectedAuthors);","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"-"},"content":"        expectedConfig.addAuthorNamesToAuthorMapEntry(author, FIRST_AUTHOR_ALIASES);","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"yong24s"},"content":"        expectedConfig.setAuthorDisplayName(author, \"Ahm\");","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"yong24s"},"content":"        expectedConfig.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"yong24s"},"content":"        expectedConfig.setFormats(CONFIG_FORMATS);","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"-"},"content":"        expectedConfig.setStandaloneConfigIgnored(true);","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"yong24s"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(IGNORE_STANDALONE_TEST_CONFIG_FILES)","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"-"},"content":"                .addFormats(formats)","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"yong24s"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"yong24s"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e authorConfigs \u003d","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"-"},"content":"                new AuthorConfigCsvParser(cliArguments.getAuthorConfigFilePath()).parse();","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"yong24s"},"content":"        RepoConfiguration.merge(actualConfigs, authorConfigs);","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"yong24s"},"content":"        RepoConfiguration actualConfig \u003d actualConfigs.get(0);","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(actualConfig);","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"-"},"content":"        reportGenerator.updateRepoConfig(actualConfig);","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfig, actualConfig);","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void repoConfig_ignoresStandaloneConfigInCli_success() throws Exception {","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedConfig \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_DELTA), \"master\");","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"-"},"content":"        expectedConfig.setFormats(FileType.convertFormatStringsToFileTypes(CLI_FORMATS));","isFullCredit":true},{"lineNumber":179,"author":{"gitId":"-"},"content":"        expectedConfig.setStandaloneConfigIgnored(true);","isFullCredit":true},{"lineNumber":180,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":181,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);","isFullCredit":true},{"lineNumber":182,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_DELTA)","isFullCredit":true},{"lineNumber":183,"author":{"gitId":"-"},"content":"                .addFormats(formats)","isFullCredit":true},{"lineNumber":184,"author":{"gitId":"-"},"content":"                .addIgnoreStandaloneConfig()","isFullCredit":true},{"lineNumber":185,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":186,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":187,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":188,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d RunConfigurationDecider","isFullCredit":true},{"lineNumber":189,"author":{"gitId":"-"},"content":"                .getRunConfiguration(cliArguments)","isFullCredit":true},{"lineNumber":190,"author":{"gitId":"-"},"content":"                .getRepoConfigurations();","isFullCredit":true},{"lineNumber":191,"author":{"gitId":"-"},"content":"        RepoConfiguration.setFormatsToRepoConfigs(actualConfigs, cliArguments.getFormats());","isFullCredit":true},{"lineNumber":192,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs,","isFullCredit":true},{"lineNumber":193,"author":{"gitId":"-"},"content":"                cliArguments.isStandaloneConfigIgnored());","isFullCredit":true},{"lineNumber":194,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d actualConfigs.get(0);","isFullCredit":true},{"lineNumber":195,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(actualConfig);","isFullCredit":true},{"lineNumber":196,"author":{"gitId":"-"},"content":"        reportGenerator.updateRepoConfig(actualConfig);","isFullCredit":true},{"lineNumber":197,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":198,"author":{"gitId":"yong24s"},"content":"        TestUtil.compareRepoConfig(expectedConfig, actualConfig);","isFullCredit":true},{"lineNumber":199,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":200,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void repoConfig_ignoreStandaloneConfigInCli_overrideCsv() throws Exception {","isFullCredit":true},{"lineNumber":203,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":204,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaExpectedConfig \u003d new RepoConfiguration(","isFullCredit":true},{"lineNumber":205,"author":{"gitId":"-"},"content":"                new RepoLocation(TEST_REPO_BETA), \"master\");","isFullCredit":true},{"lineNumber":206,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setFormats(FileType.convertFormatStringsToFileTypes(CLI_FORMATS));","isFullCredit":true},{"lineNumber":207,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setStandaloneConfigIgnored(true);","isFullCredit":true},{"lineNumber":208,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaExpectedConfig \u003d new RepoConfiguration(","isFullCredit":true},{"lineNumber":209,"author":{"gitId":"-"},"content":"                new RepoLocation(TEST_REPO_DELTA), \"master\");","isFullCredit":true},{"lineNumber":210,"author":{"gitId":"-"},"content":"        repoDeltaExpectedConfig.setStandaloneConfigIgnored(true);","isFullCredit":true},{"lineNumber":211,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":212,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(IGNORE_STANDALONE_FLAG_OVERRIDE_CSV_TEST)","isFullCredit":true},{"lineNumber":213,"author":{"gitId":"-"},"content":"                .addIgnoreStandaloneConfig()","isFullCredit":true},{"lineNumber":214,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":215,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":216,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d","isFullCredit":true},{"lineNumber":217,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();","isFullCredit":true},{"lineNumber":218,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs,","isFullCredit":true},{"lineNumber":219,"author":{"gitId":"-"},"content":"                cliArguments.isStandaloneConfigIgnored());","isFullCredit":true},{"lineNumber":220,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":221,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaActualConfig \u003d actualConfigs.get(0);","isFullCredit":true},{"lineNumber":222,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaActualConfig \u003d actualConfigs.get(1);","isFullCredit":true},{"lineNumber":223,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoBetaActualConfig);","isFullCredit":true},{"lineNumber":224,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoDeltaActualConfig);","isFullCredit":true},{"lineNumber":225,"author":{"gitId":"-"},"content":"        reportGenerator.updateRepoConfig(repoBetaActualConfig);","isFullCredit":true},{"lineNumber":226,"author":{"gitId":"-"},"content":"        reportGenerator.updateRepoConfig(repoDeltaActualConfig);","isFullCredit":true},{"lineNumber":227,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoBetaExpectedConfig, repoBetaActualConfig);","isFullCredit":true},{"lineNumber":228,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoDeltaExpectedConfig, repoDeltaActualConfig);","isFullCredit":true},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":230,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":231,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public void repoConfig_ignoreFileSizeLimit_success() throws Exception {","isFullCredit":true},{"lineNumber":233,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedConfig \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_DELTA), \"master\");","isFullCredit":true},{"lineNumber":234,"author":{"gitId":"-"},"content":"        expectedConfig.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);","isFullCredit":true},{"lineNumber":235,"author":{"gitId":"-"},"content":"        expectedConfig.setFormats(CONFIG_FORMATS);","isFullCredit":true},{"lineNumber":236,"author":{"gitId":"-"},"content":"        expectedConfig.setStandaloneConfigIgnored(true);","isFullCredit":true},{"lineNumber":237,"author":{"gitId":"-"},"content":"        expectedConfig.setFileSizeLimitIgnored(true);","isFullCredit":true},{"lineNumber":238,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":239,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);","isFullCredit":true},{"lineNumber":240,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(IGNORE_FILESIZE_LIMIT_TEST_CONFIG_FILES)","isFullCredit":true},{"lineNumber":241,"author":{"gitId":"-"},"content":"                .addFormats(formats)","isFullCredit":true},{"lineNumber":242,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":243,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":244,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":245,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d","isFullCredit":true},{"lineNumber":246,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();","isFullCredit":true},{"lineNumber":247,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs, true);","isFullCredit":true},{"lineNumber":248,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":249,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d actualConfigs.get(0);","isFullCredit":true},{"lineNumber":250,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(actualConfig);","isFullCredit":true},{"lineNumber":251,"author":{"gitId":"-"},"content":"        reportGenerator.updateRepoConfig(actualConfig);","isFullCredit":true},{"lineNumber":252,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":253,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfig, actualConfig);","isFullCredit":true},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":255,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":256,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":257,"author":{"gitId":"-"},"content":"    public void repoConfig_ignoreFileSizeLimitInCli_overrideCsv() throws Exception {","isFullCredit":true},{"lineNumber":258,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaExpectedConfig \u003d new RepoConfiguration(","isFullCredit":true},{"lineNumber":259,"author":{"gitId":"-"},"content":"                new RepoLocation(TEST_REPO_BETA), \"master\");","isFullCredit":true},{"lineNumber":260,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setFormats(FileType.convertFormatStringsToFileTypes(CLI_FORMATS));","isFullCredit":true},{"lineNumber":261,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setStandaloneConfigIgnored(true);","isFullCredit":true},{"lineNumber":262,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setFileSizeLimitIgnored(true);","isFullCredit":true},{"lineNumber":263,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaExpectedConfig \u003d new RepoConfiguration(","isFullCredit":true},{"lineNumber":264,"author":{"gitId":"-"},"content":"                new RepoLocation(TEST_REPO_DELTA), \"master\");","isFullCredit":true},{"lineNumber":265,"author":{"gitId":"-"},"content":"        repoDeltaExpectedConfig.setStandaloneConfigIgnored(true);","isFullCredit":true},{"lineNumber":266,"author":{"gitId":"-"},"content":"        repoDeltaExpectedConfig.setFileSizeLimitIgnored(true);","isFullCredit":true},{"lineNumber":267,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":268,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(IGNORE_FILESIZE_LIMIT_OVERRIDE_CSV_TEST_CONFIG_FILES)","isFullCredit":true},{"lineNumber":269,"author":{"gitId":"-"},"content":"                .addIgnoreFilesizeLimit()","isFullCredit":true},{"lineNumber":270,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":271,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":272,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d","isFullCredit":true},{"lineNumber":273,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();","isFullCredit":true},{"lineNumber":274,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs, true);","isFullCredit":true},{"lineNumber":275,"author":{"gitId":"-"},"content":"        RepoConfiguration.setFileSizeLimitIgnoredToRepoConfigs(actualConfigs,","isFullCredit":true},{"lineNumber":276,"author":{"gitId":"-"},"content":"                cliArguments.isFileSizeLimitIgnored());","isFullCredit":true},{"lineNumber":277,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":278,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaActualConfig \u003d actualConfigs.get(0);","isFullCredit":true},{"lineNumber":279,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaActualConfig \u003d actualConfigs.get(1);","isFullCredit":true},{"lineNumber":280,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoBetaActualConfig);","isFullCredit":true},{"lineNumber":281,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoDeltaActualConfig);","isFullCredit":true},{"lineNumber":282,"author":{"gitId":"-"},"content":"        reportGenerator.updateRepoConfig(repoBetaActualConfig);","isFullCredit":true},{"lineNumber":283,"author":{"gitId":"-"},"content":"        reportGenerator.updateRepoConfig(repoDeltaActualConfig);","isFullCredit":true},{"lineNumber":284,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoBetaExpectedConfig, repoBetaActualConfig);","isFullCredit":true},{"lineNumber":285,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoDeltaExpectedConfig, repoDeltaActualConfig);","isFullCredit":true},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":287,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":288,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":289,"author":{"gitId":"-"},"content":"    public void repoConfig_withoutIgnoreStandaloneConfigInCli_useCsv() throws Exception {","isFullCredit":true},{"lineNumber":290,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaExpectedConfig \u003d new RepoConfiguration(","isFullCredit":true},{"lineNumber":291,"author":{"gitId":"-"},"content":"                new RepoLocation(TEST_REPO_BETA), \"master\");","isFullCredit":true},{"lineNumber":292,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setFormats(FileType.convertFormatStringsToFileTypes(CLI_FORMATS));","isFullCredit":true},{"lineNumber":293,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setStandaloneConfigIgnored(true);","isFullCredit":true},{"lineNumber":294,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":295,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(IGNORE_STANDALONE_FLAG_OVERRIDE_CSV_TEST).build();","isFullCredit":true},{"lineNumber":296,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":297,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d","isFullCredit":true},{"lineNumber":298,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();","isFullCredit":true},{"lineNumber":299,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs,","isFullCredit":true},{"lineNumber":300,"author":{"gitId":"-"},"content":"                cliArguments.isStandaloneConfigIgnored());","isFullCredit":true},{"lineNumber":301,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":302,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaActualConfig \u003d actualConfigs.get(0);","isFullCredit":true},{"lineNumber":303,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaActualConfig \u003d actualConfigs.get(1);","isFullCredit":true},{"lineNumber":304,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoBetaActualConfig);","isFullCredit":true},{"lineNumber":305,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoDeltaActualConfig);","isFullCredit":true},{"lineNumber":306,"author":{"gitId":"-"},"content":"        reportGenerator.updateRepoConfig(repoBetaActualConfig);","isFullCredit":true},{"lineNumber":307,"author":{"gitId":"-"},"content":"        reportGenerator.updateRepoConfig(repoDeltaActualConfig);","isFullCredit":true},{"lineNumber":308,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoBetaExpectedConfig, repoBetaActualConfig);","isFullCredit":true},{"lineNumber":309,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoDeltaStandaloneConfig, repoDeltaActualConfig);","isFullCredit":true},{"lineNumber":310,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":311,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":312,"author":{"gitId":"yong24s"},"content":"    @Test","isFullCredit":true},{"lineNumber":313,"author":{"gitId":"-"},"content":"    public void repoConfig_wrongKeywordUseStandaloneConfig_success() throws Exception {","isFullCredit":true},{"lineNumber":314,"author":{"gitId":"yong24s"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);","isFullCredit":true},{"lineNumber":315,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(IGNORE_STANDALONE_KEYWORD_TEST_CONFIG_FILES)","isFullCredit":true},{"lineNumber":316,"author":{"gitId":"-"},"content":"                .addFormats(formats)","isFullCredit":true},{"lineNumber":317,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":318,"author":{"gitId":"yong24s"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":319,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":320,"author":{"gitId":"yong24s"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d","isFullCredit":true},{"lineNumber":321,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();","isFullCredit":true},{"lineNumber":322,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":323,"author":{"gitId":"yong24s"},"content":"        RepoConfiguration actualConfig \u003d actualConfigs.get(0);","isFullCredit":true},{"lineNumber":324,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(actualConfig);","isFullCredit":true},{"lineNumber":325,"author":{"gitId":"-"},"content":"        reportGenerator.updateRepoConfig(actualConfig);","isFullCredit":true},{"lineNumber":326,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":327,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoDeltaStandaloneConfig, actualConfig);","isFullCredit":true},{"lineNumber":328,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":329,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":330,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":331,"author":{"gitId":"-"},"content":"    public void repoConfig_shallowCloning_success() throws Exception {","isFullCredit":true},{"lineNumber":332,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedConfig \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_DELTA), \"master\");","isFullCredit":true},{"lineNumber":333,"author":{"gitId":"-"},"content":"        expectedConfig.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);","isFullCredit":true},{"lineNumber":334,"author":{"gitId":"-"},"content":"        expectedConfig.setFormats(CONFIG_FORMATS);","isFullCredit":true},{"lineNumber":335,"author":{"gitId":"-"},"content":"        expectedConfig.setStandaloneConfigIgnored(true);","isFullCredit":true},{"lineNumber":336,"author":{"gitId":"-"},"content":"        expectedConfig.setIsShallowCloningPerformed(true);","isFullCredit":true},{"lineNumber":337,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":338,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);","isFullCredit":true},{"lineNumber":339,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(SHALLOW_CLONING_TEST_CONFIG_FILES)","isFullCredit":true},{"lineNumber":340,"author":{"gitId":"-"},"content":"                .addFormats(formats)","isFullCredit":true},{"lineNumber":341,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":342,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":343,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":344,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d","isFullCredit":true},{"lineNumber":345,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();","isFullCredit":true},{"lineNumber":346,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs, true);","isFullCredit":true},{"lineNumber":347,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":348,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d actualConfigs.get(0);","isFullCredit":true},{"lineNumber":349,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(actualConfig);","isFullCredit":true},{"lineNumber":350,"author":{"gitId":"-"},"content":"        reportGenerator.updateRepoConfig(actualConfig);","isFullCredit":true},{"lineNumber":351,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":352,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfig, actualConfig);","isFullCredit":true},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":354,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":355,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":356,"author":{"gitId":"-"},"content":"    public void repoConfig_shallowCloningInCli_success() throws Exception {","isFullCredit":true},{"lineNumber":357,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedConfig \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_DELTA), \"master\");","isFullCredit":true},{"lineNumber":358,"author":{"gitId":"-"},"content":"        expectedConfig.setFormats(FileType.convertFormatStringsToFileTypes(CLI_FORMATS));","isFullCredit":true},{"lineNumber":359,"author":{"gitId":"-"},"content":"        expectedConfig.setStandaloneConfigIgnored(true);","isFullCredit":true},{"lineNumber":360,"author":{"gitId":"-"},"content":"        expectedConfig.setIsShallowCloningPerformed(true);","isFullCredit":true},{"lineNumber":361,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":362,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);","isFullCredit":true},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_DELTA)","isFullCredit":true},{"lineNumber":364,"author":{"gitId":"-"},"content":"                .addFormats(formats)","isFullCredit":true},{"lineNumber":365,"author":{"gitId":"-"},"content":"                .addShallowCloning()","isFullCredit":true},{"lineNumber":366,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":367,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":368,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d RunConfigurationDecider","isFullCredit":true},{"lineNumber":369,"author":{"gitId":"-"},"content":"                .getRunConfiguration(cliArguments)","isFullCredit":true},{"lineNumber":370,"author":{"gitId":"-"},"content":"                .getRepoConfigurations();","isFullCredit":true},{"lineNumber":371,"author":{"gitId":"-"},"content":"        RepoConfiguration.setFormatsToRepoConfigs(actualConfigs, cliArguments.getFormats());","isFullCredit":true},{"lineNumber":372,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs, true);","isFullCredit":true},{"lineNumber":373,"author":{"gitId":"-"},"content":"        RepoConfiguration.setIsShallowCloningPerformedToRepoConfigs(actualConfigs,","isFullCredit":true},{"lineNumber":374,"author":{"gitId":"-"},"content":"                cliArguments.isShallowCloningPerformed());","isFullCredit":true},{"lineNumber":375,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":376,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d actualConfigs.get(0);","isFullCredit":true},{"lineNumber":377,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(actualConfig);","isFullCredit":true},{"lineNumber":378,"author":{"gitId":"-"},"content":"        reportGenerator.updateRepoConfig(actualConfig);","isFullCredit":true},{"lineNumber":379,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":380,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfig, actualConfig);","isFullCredit":true},{"lineNumber":381,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":382,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":383,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":384,"author":{"gitId":"-"},"content":"    public void repoConfig_shallowCloningInCli_overrideCsv() throws Exception {","isFullCredit":true},{"lineNumber":385,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaExpectedConfig \u003d new RepoConfiguration(","isFullCredit":true},{"lineNumber":386,"author":{"gitId":"-"},"content":"                new RepoLocation(TEST_REPO_BETA), \"master\");","isFullCredit":true},{"lineNumber":387,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setFormats(FileType.convertFormatStringsToFileTypes(CLI_FORMATS));","isFullCredit":true},{"lineNumber":388,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setStandaloneConfigIgnored(true);","isFullCredit":true},{"lineNumber":389,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setIsShallowCloningPerformed(true);","isFullCredit":true},{"lineNumber":390,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaExpectedConfig \u003d new RepoConfiguration(","isFullCredit":true},{"lineNumber":391,"author":{"gitId":"-"},"content":"                new RepoLocation(TEST_REPO_DELTA), \"master\");","isFullCredit":true},{"lineNumber":392,"author":{"gitId":"-"},"content":"        repoDeltaExpectedConfig.setStandaloneConfigIgnored(true);","isFullCredit":true},{"lineNumber":393,"author":{"gitId":"-"},"content":"        repoDeltaExpectedConfig.setIsShallowCloningPerformed(true);","isFullCredit":true},{"lineNumber":394,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":395,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(SHALLOW_CLONING_FLAG_OVERRIDE_TEST_CONFIG_FILES)","isFullCredit":true},{"lineNumber":396,"author":{"gitId":"-"},"content":"                .addShallowCloning()","isFullCredit":true},{"lineNumber":397,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":398,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":399,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d","isFullCredit":true},{"lineNumber":400,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();","isFullCredit":true},{"lineNumber":401,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs, true);","isFullCredit":true},{"lineNumber":402,"author":{"gitId":"-"},"content":"        RepoConfiguration.setIsShallowCloningPerformedToRepoConfigs(actualConfigs,","isFullCredit":true},{"lineNumber":403,"author":{"gitId":"-"},"content":"                cliArguments.isShallowCloningPerformed());","isFullCredit":true},{"lineNumber":404,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":405,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaActualConfig \u003d actualConfigs.get(0);","isFullCredit":true},{"lineNumber":406,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaActualConfig \u003d actualConfigs.get(1);","isFullCredit":true},{"lineNumber":407,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoBetaActualConfig);","isFullCredit":true},{"lineNumber":408,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoDeltaActualConfig);","isFullCredit":true},{"lineNumber":409,"author":{"gitId":"-"},"content":"        reportGenerator.updateRepoConfig(repoBetaActualConfig);","isFullCredit":true},{"lineNumber":410,"author":{"gitId":"-"},"content":"        reportGenerator.updateRepoConfig(repoDeltaActualConfig);","isFullCredit":true},{"lineNumber":411,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoBetaExpectedConfig, repoBetaActualConfig);","isFullCredit":true},{"lineNumber":412,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoDeltaExpectedConfig, repoDeltaActualConfig);","isFullCredit":true},{"lineNumber":413,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":414,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":415,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":416,"author":{"gitId":"-"},"content":"    public void repoConfig_withoutShallowCloningInInCli_useCsv() throws Exception {","isFullCredit":true},{"lineNumber":417,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaExpectedConfig \u003d new RepoConfiguration(","isFullCredit":true},{"lineNumber":418,"author":{"gitId":"-"},"content":"                new RepoLocation(TEST_REPO_BETA), \"master\");","isFullCredit":true},{"lineNumber":419,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setFormats(FileType.convertFormatStringsToFileTypes(CLI_FORMATS));","isFullCredit":true},{"lineNumber":420,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setStandaloneConfigIgnored(true);","isFullCredit":true},{"lineNumber":421,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setIsShallowCloningPerformed(true);","isFullCredit":true},{"lineNumber":422,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaExpectedConfig \u003d new RepoConfiguration(","isFullCredit":true},{"lineNumber":423,"author":{"gitId":"-"},"content":"                new RepoLocation(TEST_REPO_DELTA), \"master\");","isFullCredit":true},{"lineNumber":424,"author":{"gitId":"-"},"content":"        repoDeltaExpectedConfig.setStandaloneConfigIgnored(true);","isFullCredit":true},{"lineNumber":425,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":426,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(SHALLOW_CLONING_FLAG_OVERRIDE_TEST_CONFIG_FILES).build();","isFullCredit":true},{"lineNumber":427,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":428,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d","isFullCredit":true},{"lineNumber":429,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();","isFullCredit":true},{"lineNumber":430,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs, true);","isFullCredit":true},{"lineNumber":431,"author":{"gitId":"-"},"content":"        RepoConfiguration.setIsShallowCloningPerformedToRepoConfigs(actualConfigs,","isFullCredit":true},{"lineNumber":432,"author":{"gitId":"-"},"content":"                cliArguments.isShallowCloningPerformed());","isFullCredit":true},{"lineNumber":433,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":434,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaActualConfig \u003d actualConfigs.get(0);","isFullCredit":true},{"lineNumber":435,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaActualConfig \u003d actualConfigs.get(1);","isFullCredit":true},{"lineNumber":436,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoBetaActualConfig);","isFullCredit":true},{"lineNumber":437,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoDeltaActualConfig);","isFullCredit":true},{"lineNumber":438,"author":{"gitId":"-"},"content":"        reportGenerator.updateRepoConfig(repoBetaActualConfig);","isFullCredit":true},{"lineNumber":439,"author":{"gitId":"-"},"content":"        reportGenerator.updateRepoConfig(repoDeltaActualConfig);","isFullCredit":true},{"lineNumber":440,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoBetaExpectedConfig, repoBetaActualConfig);","isFullCredit":true},{"lineNumber":441,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoDeltaExpectedConfig, repoDeltaActualConfig);","isFullCredit":true},{"lineNumber":442,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":443,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":444,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":445,"author":{"gitId":"-"},"content":"    public void repoConfig_findPreviousAuthors_success() throws Exception {","isFullCredit":true},{"lineNumber":446,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedConfig \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_DELTA), \"master\");","isFullCredit":true},{"lineNumber":447,"author":{"gitId":"-"},"content":"        expectedConfig.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);","isFullCredit":true},{"lineNumber":448,"author":{"gitId":"-"},"content":"        expectedConfig.setFormats(CONFIG_FORMATS);","isFullCredit":true},{"lineNumber":449,"author":{"gitId":"-"},"content":"        expectedConfig.setStandaloneConfigIgnored(true);","isFullCredit":true},{"lineNumber":450,"author":{"gitId":"-"},"content":"        expectedConfig.setIsFindingPreviousAuthorsPerformed(true);","isFullCredit":true},{"lineNumber":451,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":452,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);","isFullCredit":true},{"lineNumber":453,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(FIND_PREVIOUS_AUTHORS_TEST_CONFIG_FILES)","isFullCredit":true},{"lineNumber":454,"author":{"gitId":"-"},"content":"                .addFormats(formats)","isFullCredit":true},{"lineNumber":455,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":456,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":457,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":458,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d","isFullCredit":true},{"lineNumber":459,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();","isFullCredit":true},{"lineNumber":460,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs, true);","isFullCredit":true},{"lineNumber":461,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":462,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d actualConfigs.get(0);","isFullCredit":true},{"lineNumber":463,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(actualConfig);","isFullCredit":true},{"lineNumber":464,"author":{"gitId":"-"},"content":"        reportGenerator.updateRepoConfig(actualConfig);","isFullCredit":true},{"lineNumber":465,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":466,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfig, actualConfig);","isFullCredit":true},{"lineNumber":467,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":468,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":469,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":470,"author":{"gitId":"-"},"content":"    public void repoConfig_findPreviousAuthorsInCli_success() throws Exception {","isFullCredit":true},{"lineNumber":471,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedConfig \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_DELTA), \"master\");","isFullCredit":true},{"lineNumber":472,"author":{"gitId":"-"},"content":"        expectedConfig.setFormats(FileType.convertFormatStringsToFileTypes(CLI_FORMATS));","isFullCredit":true},{"lineNumber":473,"author":{"gitId":"-"},"content":"        expectedConfig.setStandaloneConfigIgnored(true);","isFullCredit":true},{"lineNumber":474,"author":{"gitId":"-"},"content":"        expectedConfig.setIsFindingPreviousAuthorsPerformed(true);","isFullCredit":true},{"lineNumber":475,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":476,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);","isFullCredit":true},{"lineNumber":477,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_DELTA)","isFullCredit":true},{"lineNumber":478,"author":{"gitId":"-"},"content":"                .addFormats(formats)","isFullCredit":true},{"lineNumber":479,"author":{"gitId":"-"},"content":"                .addFindPreviousAuthors()","isFullCredit":true},{"lineNumber":480,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":481,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":482,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d RunConfigurationDecider","isFullCredit":true},{"lineNumber":483,"author":{"gitId":"-"},"content":"                .getRunConfiguration(cliArguments)","isFullCredit":true},{"lineNumber":484,"author":{"gitId":"-"},"content":"                .getRepoConfigurations();","isFullCredit":true},{"lineNumber":485,"author":{"gitId":"-"},"content":"        RepoConfiguration.setFormatsToRepoConfigs(actualConfigs, cliArguments.getFormats());","isFullCredit":true},{"lineNumber":486,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs, true);","isFullCredit":true},{"lineNumber":487,"author":{"gitId":"-"},"content":"        RepoConfiguration.setIsFindingPreviousAuthorsPerformedToRepoConfigs(actualConfigs,","isFullCredit":true},{"lineNumber":488,"author":{"gitId":"-"},"content":"                cliArguments.isFindingPreviousAuthorsPerformed());","isFullCredit":true},{"lineNumber":489,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":490,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d actualConfigs.get(0);","isFullCredit":true},{"lineNumber":491,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(actualConfig);","isFullCredit":true},{"lineNumber":492,"author":{"gitId":"-"},"content":"        reportGenerator.updateRepoConfig(actualConfig);","isFullCredit":true},{"lineNumber":493,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":494,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfig, actualConfig);","isFullCredit":true},{"lineNumber":495,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":496,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":497,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":498,"author":{"gitId":"-"},"content":"    public void repoConfig_findPreviousAuthorsInCli_overrideCsv() throws Exception {","isFullCredit":true},{"lineNumber":499,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaExpectedConfig \u003d new RepoConfiguration(","isFullCredit":true},{"lineNumber":500,"author":{"gitId":"-"},"content":"                new RepoLocation(TEST_REPO_BETA), \"master\");","isFullCredit":true},{"lineNumber":501,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setFormats(FileType.convertFormatStringsToFileTypes(CLI_FORMATS));","isFullCredit":true},{"lineNumber":502,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setStandaloneConfigIgnored(true);","isFullCredit":true},{"lineNumber":503,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setIsFindingPreviousAuthorsPerformed(true);","isFullCredit":true},{"lineNumber":504,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaExpectedConfig \u003d new RepoConfiguration(","isFullCredit":true},{"lineNumber":505,"author":{"gitId":"-"},"content":"                new RepoLocation(TEST_REPO_DELTA), \"master\");","isFullCredit":true},{"lineNumber":506,"author":{"gitId":"-"},"content":"        repoDeltaExpectedConfig.setStandaloneConfigIgnored(true);","isFullCredit":true},{"lineNumber":507,"author":{"gitId":"-"},"content":"        repoDeltaExpectedConfig.setIsFindingPreviousAuthorsPerformed(true);","isFullCredit":true},{"lineNumber":508,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":509,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(FIND_PREVIOUS_AUTHORS_FLAG_OVERRIDE_TEST_CONFIG_FILES)","isFullCredit":true},{"lineNumber":510,"author":{"gitId":"-"},"content":"                .addShallowCloning()","isFullCredit":true},{"lineNumber":511,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":512,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":513,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d","isFullCredit":true},{"lineNumber":514,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();","isFullCredit":true},{"lineNumber":515,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs, true);","isFullCredit":true},{"lineNumber":516,"author":{"gitId":"-"},"content":"        RepoConfiguration.setIsFindingPreviousAuthorsPerformedToRepoConfigs(actualConfigs,","isFullCredit":true},{"lineNumber":517,"author":{"gitId":"-"},"content":"                cliArguments.isFindingPreviousAuthorsPerformed());","isFullCredit":true},{"lineNumber":518,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":519,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaActualConfig \u003d actualConfigs.get(0);","isFullCredit":true},{"lineNumber":520,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaActualConfig \u003d actualConfigs.get(1);","isFullCredit":true},{"lineNumber":521,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoBetaActualConfig);","isFullCredit":true},{"lineNumber":522,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoDeltaActualConfig);","isFullCredit":true},{"lineNumber":523,"author":{"gitId":"-"},"content":"        reportGenerator.updateRepoConfig(repoBetaActualConfig);","isFullCredit":true},{"lineNumber":524,"author":{"gitId":"-"},"content":"        reportGenerator.updateRepoConfig(repoDeltaActualConfig);","isFullCredit":true},{"lineNumber":525,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoBetaExpectedConfig, repoBetaActualConfig);","isFullCredit":true},{"lineNumber":526,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoDeltaExpectedConfig, repoDeltaActualConfig);","isFullCredit":true},{"lineNumber":527,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":528,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":529,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":530,"author":{"gitId":"-"},"content":"    public void repoConfig_withoutFindPreviousAuthorsInCli_useCsv() throws Exception {","isFullCredit":true},{"lineNumber":531,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaExpectedConfig \u003d new RepoConfiguration(","isFullCredit":true},{"lineNumber":532,"author":{"gitId":"-"},"content":"                new RepoLocation(TEST_REPO_BETA), \"master\");","isFullCredit":true},{"lineNumber":533,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setFormats(FileType.convertFormatStringsToFileTypes(CLI_FORMATS));","isFullCredit":true},{"lineNumber":534,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setStandaloneConfigIgnored(true);","isFullCredit":true},{"lineNumber":535,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setIsFindingPreviousAuthorsPerformed(true);","isFullCredit":true},{"lineNumber":536,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaExpectedConfig \u003d new RepoConfiguration(","isFullCredit":true},{"lineNumber":537,"author":{"gitId":"-"},"content":"                new RepoLocation(TEST_REPO_DELTA), \"master\");","isFullCredit":true},{"lineNumber":538,"author":{"gitId":"-"},"content":"        repoDeltaExpectedConfig.setStandaloneConfigIgnored(true);","isFullCredit":true},{"lineNumber":539,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":540,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(FIND_PREVIOUS_AUTHORS_FLAG_OVERRIDE_TEST_CONFIG_FILES).build();","isFullCredit":true},{"lineNumber":541,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":542,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d","isFullCredit":true},{"lineNumber":543,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();","isFullCredit":true},{"lineNumber":544,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs, true);","isFullCredit":true},{"lineNumber":545,"author":{"gitId":"-"},"content":"        RepoConfiguration.setIsFindingPreviousAuthorsPerformedToRepoConfigs(actualConfigs,","isFullCredit":true},{"lineNumber":546,"author":{"gitId":"-"},"content":"                cliArguments.isFindingPreviousAuthorsPerformed());","isFullCredit":true},{"lineNumber":547,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":548,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaActualConfig \u003d actualConfigs.get(0);","isFullCredit":true},{"lineNumber":549,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaActualConfig \u003d actualConfigs.get(1);","isFullCredit":true},{"lineNumber":550,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoBetaActualConfig);","isFullCredit":true},{"lineNumber":551,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoDeltaActualConfig);","isFullCredit":true},{"lineNumber":552,"author":{"gitId":"-"},"content":"        reportGenerator.updateRepoConfig(repoBetaActualConfig);","isFullCredit":true},{"lineNumber":553,"author":{"gitId":"-"},"content":"        reportGenerator.updateRepoConfig(repoDeltaActualConfig);","isFullCredit":true},{"lineNumber":554,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoBetaExpectedConfig, repoBetaActualConfig);","isFullCredit":true},{"lineNumber":555,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoDeltaExpectedConfig, repoDeltaActualConfig);","isFullCredit":true},{"lineNumber":556,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":557,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":558,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":559,"author":{"gitId":"-"},"content":"    public void repoConfig_userEnvironmentCannotRunFindPreviousAuthors_setFindPreviousAuthorsToFalseInAllRepoConfigs()","isFullCredit":true},{"lineNumber":560,"author":{"gitId":"-"},"content":"            throws Exception {","isFullCredit":true},{"lineNumber":561,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaExpectedConfig \u003d new RepoConfiguration(","isFullCredit":true},{"lineNumber":562,"author":{"gitId":"-"},"content":"                new RepoLocation(TEST_REPO_BETA), \"master\");","isFullCredit":true},{"lineNumber":563,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setFormats(FileType.convertFormatStringsToFileTypes(CLI_FORMATS));","isFullCredit":true},{"lineNumber":564,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setStandaloneConfigIgnored(true);","isFullCredit":true},{"lineNumber":565,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaExpectedConfig \u003d new RepoConfiguration(","isFullCredit":true},{"lineNumber":566,"author":{"gitId":"-"},"content":"                new RepoLocation(TEST_REPO_DELTA), \"master\");","isFullCredit":true},{"lineNumber":567,"author":{"gitId":"-"},"content":"        repoDeltaExpectedConfig.setStandaloneConfigIgnored(true);","isFullCredit":true},{"lineNumber":568,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":569,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(FIND_PREVIOUS_AUTHORS_FLAG_OVERRIDE_TEST_CONFIG_FILES).build();","isFullCredit":true},{"lineNumber":570,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":571,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d","isFullCredit":true},{"lineNumber":572,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();","isFullCredit":true},{"lineNumber":573,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs, true);","isFullCredit":true},{"lineNumber":574,"author":{"gitId":"-"},"content":"        RepoConfiguration.setIsFindingPreviousAuthorsPerformedToRepoConfigs(actualConfigs,","isFullCredit":true},{"lineNumber":575,"author":{"gitId":"-"},"content":"                cliArguments.isFindingPreviousAuthorsPerformed());","isFullCredit":true},{"lineNumber":576,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":577,"author":{"gitId":"-"},"content":"        // Assume by default that the environment does not support Find Previous Authors feature","isFullCredit":true},{"lineNumber":578,"author":{"gitId":"-"},"content":"        RepoConfiguration.setToFalseIsFindingPreviousAuthorsPerformedToRepoConfigs(actualConfigs);","isFullCredit":true},{"lineNumber":579,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":580,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaActualConfig \u003d actualConfigs.get(0);","isFullCredit":true},{"lineNumber":581,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaActualConfig \u003d actualConfigs.get(1);","isFullCredit":true},{"lineNumber":582,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoBetaActualConfig);","isFullCredit":true},{"lineNumber":583,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoDeltaActualConfig);","isFullCredit":true},{"lineNumber":584,"author":{"gitId":"-"},"content":"        reportGenerator.updateRepoConfig(repoBetaActualConfig);","isFullCredit":true},{"lineNumber":585,"author":{"gitId":"-"},"content":"        reportGenerator.updateRepoConfig(repoDeltaActualConfig);","isFullCredit":true},{"lineNumber":586,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoBetaExpectedConfig, repoBetaActualConfig);","isFullCredit":true},{"lineNumber":587,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoDeltaExpectedConfig, repoDeltaActualConfig);","isFullCredit":true},{"lineNumber":588,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":589,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":590,"author":{"gitId":"yong24s"},"content":"    @Test","isFullCredit":true},{"lineNumber":591,"author":{"gitId":"-"},"content":"    public void repoConfig_withFormats_ignoreCliFormats() throws Exception {","isFullCredit":true},{"lineNumber":592,"author":{"gitId":"yong24s"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);","isFullCredit":true},{"lineNumber":593,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(FORMATS_TEST_CONFIG_FILES)","isFullCredit":true},{"lineNumber":594,"author":{"gitId":"-"},"content":"                .addFormats(formats)","isFullCredit":true},{"lineNumber":595,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":596,"author":{"gitId":"yong24s"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":597,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":598,"author":{"gitId":"yong24s"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d","isFullCredit":true},{"lineNumber":599,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();","isFullCredit":true},{"lineNumber":600,"author":{"gitId":"yong24s"},"content":"        RepoConfiguration.setFormatsToRepoConfigs(actualConfigs, cliArguments.getFormats());","isFullCredit":true},{"lineNumber":601,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":602,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, actualConfigs.size());","isFullCredit":true},{"lineNumber":603,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(CONFIG_FORMATS, actualConfigs.get(0).getFileTypeManager().getFormats());","isFullCredit":true},{"lineNumber":604,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":605,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":606,"author":{"gitId":"yong24s"},"content":"    @Test","isFullCredit":true},{"lineNumber":607,"author":{"gitId":"-"},"content":"    public void repoConfig_withoutFormats_useCliFormats() throws Exception {","isFullCredit":true},{"lineNumber":608,"author":{"gitId":"yong24s"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);","isFullCredit":true},{"lineNumber":609,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(WITHOUT_FORMATS_TEST_CONFIG_FILES)","isFullCredit":true},{"lineNumber":610,"author":{"gitId":"-"},"content":"                .addFormats(formats)","isFullCredit":true},{"lineNumber":611,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":612,"author":{"gitId":"yong24s"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":613,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":614,"author":{"gitId":"yong24s"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d","isFullCredit":true},{"lineNumber":615,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();","isFullCredit":true},{"lineNumber":616,"author":{"gitId":"yong24s"},"content":"        RepoConfiguration.setFormatsToRepoConfigs(actualConfigs, cliArguments.getFormats());","isFullCredit":true},{"lineNumber":617,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":618,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, actualConfigs.size());","isFullCredit":true},{"lineNumber":619,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":620,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e actualFormats \u003d actualConfigs.get(0).getFileTypeManager().getFormats();","isFullCredit":true},{"lineNumber":621,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(FileType.convertFormatStringsToFileTypes(CLI_FORMATS), actualFormats);","isFullCredit":true},{"lineNumber":622,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":623,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":624,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":625,"author":{"gitId":"-"},"content":"    public void repoConfig_withCustomGroups_useCustomGroups() throws Exception {","isFullCredit":true},{"lineNumber":626,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(GROUPS_TEST_CONFIG_FILES).build();","isFullCredit":true},{"lineNumber":627,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":628,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":629,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d","isFullCredit":true},{"lineNumber":630,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();","isFullCredit":true},{"lineNumber":631,"author":{"gitId":"-"},"content":"        List\u003cGroupConfiguration\u003e groupConfigs \u003d","isFullCredit":true},{"lineNumber":632,"author":{"gitId":"-"},"content":"                new GroupConfigCsvParser(cliArguments.getGroupConfigFilePath()).parse();","isFullCredit":true},{"lineNumber":633,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":634,"author":{"gitId":"-"},"content":"        RepoConfiguration.setGroupConfigsToRepos(actualConfigs, groupConfigs);","isFullCredit":true},{"lineNumber":635,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":636,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(2, actualConfigs.size());","isFullCredit":true},{"lineNumber":637,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(FIRST_CONFIG_GROUPS, actualConfigs.get(0).getFileTypeManager().getGroups());","isFullCredit":true},{"lineNumber":638,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(SECOND_CONFIG_GROUPS, actualConfigs.get(1).getFileTypeManager().getGroups());","isFullCredit":true},{"lineNumber":639,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":640,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":641,"author":{"gitId":"yong24s"},"content":"    @Test","isFullCredit":true},{"lineNumber":642,"author":{"gitId":"-"},"content":"    public void repoConfig_withoutFormatsAndCliFormats_useAllFormats() throws Exception {","isFullCredit":true},{"lineNumber":643,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(WITHOUT_FORMATS_TEST_CONFIG_FILES).build();","isFullCredit":true},{"lineNumber":644,"author":{"gitId":"yong24s"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":645,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":646,"author":{"gitId":"yong24s"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d","isFullCredit":true},{"lineNumber":647,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();","isFullCredit":true},{"lineNumber":648,"author":{"gitId":"yong24s"},"content":"        RepoConfiguration.setFormatsToRepoConfigs(actualConfigs, cliArguments.getFormats());","isFullCredit":true},{"lineNumber":649,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":650,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, actualConfigs.size());","isFullCredit":true},{"lineNumber":651,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(FileTypeTest.NO_SPECIFIED_FORMATS, actualConfigs.get(0).getFileTypeManager()","isFullCredit":true},{"lineNumber":652,"author":{"gitId":"-"},"content":"                .getFormats());","isFullCredit":true},{"lineNumber":653,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":654,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":655,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":656,"author":{"gitId":"-"},"content":"    public void repoConfig_emptyLocationDifferentBranch_equal() throws Exception {","isFullCredit":true},{"lineNumber":657,"author":{"gitId":"-"},"content":"        RepoConfiguration emptyLocationEmptyBranchRepoConfig \u003d new RepoConfiguration(new RepoLocation(\"\"), \"\");","isFullCredit":true},{"lineNumber":658,"author":{"gitId":"-"},"content":"        RepoConfiguration emptyLocationDefaultBranchRepoConfig \u003d new RepoConfiguration(new RepoLocation(\"\"));","isFullCredit":true},{"lineNumber":659,"author":{"gitId":"-"},"content":"        RepoConfiguration emptyLocationWithBranchRepoConfig \u003d new RepoConfiguration(new RepoLocation(\"\"), \"master\");","isFullCredit":true},{"lineNumber":660,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":661,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(emptyLocationDefaultBranchRepoConfig, emptyLocationEmptyBranchRepoConfig);","isFullCredit":true},{"lineNumber":662,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(emptyLocationWithBranchRepoConfig, emptyLocationEmptyBranchRepoConfig);","isFullCredit":true},{"lineNumber":663,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":664,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":665,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":666,"author":{"gitId":"-"},"content":"    public void repoConfig_sameLocationDifferentBranch_notEqual() throws Exception {","isFullCredit":true},{"lineNumber":667,"author":{"gitId":"-"},"content":"        RepoConfiguration validLocationValidBranchRepoConfig \u003d","isFullCredit":true},{"lineNumber":668,"author":{"gitId":"-"},"content":"                new RepoConfiguration(new RepoLocation(TEST_REPO_DELTA), \"master\");","isFullCredit":true},{"lineNumber":669,"author":{"gitId":"-"},"content":"        RepoConfiguration validLocationDefaultBranchRepoConfig \u003d","isFullCredit":true},{"lineNumber":670,"author":{"gitId":"-"},"content":"                new RepoConfiguration(new RepoLocation(TEST_REPO_DELTA));","isFullCredit":true},{"lineNumber":671,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":672,"author":{"gitId":"-"},"content":"        Assertions.assertNotEquals(validLocationDefaultBranchRepoConfig, validLocationValidBranchRepoConfig);","isFullCredit":true},{"lineNumber":673,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":674,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":675,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":676,"author":{"gitId":"-"},"content":"    public void repoConfig_overrideStandaloneConfig_success() throws Exception {","isFullCredit":true},{"lineNumber":677,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedConfig \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_DELTA), \"master\",","isFullCredit":true},{"lineNumber":678,"author":{"gitId":"-"},"content":"                Collections.emptyList(), Collections.emptyList(), RepoConfiguration.DEFAULT_FILE_SIZE_LIMIT, false,","isFullCredit":true},{"lineNumber":679,"author":{"gitId":"-"},"content":"                false, Collections.emptyList(), true, true, true, false, false, false, false,","isFullCredit":true},{"lineNumber":680,"author":{"gitId":"-"},"content":"                Arrays.asList(\"lithiumlkid\"), true);","isFullCredit":true},{"lineNumber":681,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":682,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e expectedAuthorList \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":683,"author":{"gitId":"-"},"content":"        Author[] authors \u003d new Author[]{FIRST_AUTHOR, SECOND_AUTHOR, THIRD_AUTHOR, FOURTH_AUTHOR};","isFullCredit":true},{"lineNumber":684,"author":{"gitId":"-"},"content":"        for (Author author : authors) {","isFullCredit":true},{"lineNumber":685,"author":{"gitId":"-"},"content":"            Author expectedAuthor \u003d new Author(author);","isFullCredit":true},{"lineNumber":686,"author":{"gitId":"-"},"content":"            List\u003cString\u003e expectedAuthorIgnoreGlobList \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":687,"author":{"gitId":"-"},"content":"            expectedAuthorIgnoreGlobList.addAll(author.getIgnoreGlobList());","isFullCredit":true},{"lineNumber":688,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":689,"author":{"gitId":"-"},"content":"            // Authors\u0027 original ignoreGlobList contains values from StandaloneConfig repo level, thus need to remove","isFullCredit":true},{"lineNumber":690,"author":{"gitId":"-"},"content":"            expectedAuthorIgnoreGlobList.removeAll(REPO_LEVEL_GLOB_LIST);","isFullCredit":true},{"lineNumber":691,"author":{"gitId":"-"},"content":"            expectedAuthor.setIgnoreGlobList(expectedAuthorIgnoreGlobList);","isFullCredit":true},{"lineNumber":692,"author":{"gitId":"-"},"content":"            expectedAuthorList.add(expectedAuthor);","isFullCredit":true},{"lineNumber":693,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":694,"author":{"gitId":"-"},"content":"        expectedConfig.setAuthorList(expectedAuthorList);","isFullCredit":true},{"lineNumber":695,"author":{"gitId":"-"},"content":"        expectedConfig.setAuthorDisplayNameMap(repoDeltaStandaloneConfig.getAuthorDisplayNameMap());","isFullCredit":true},{"lineNumber":696,"author":{"gitId":"-"},"content":"        expectedConfig.setAuthorNamesToAuthorMap(repoDeltaStandaloneConfig.getAuthorNamesToAuthorMap());","isFullCredit":true},{"lineNumber":697,"author":{"gitId":"-"},"content":"        expectedConfig.setAuthorEmailsToAuthorMap(repoDeltaStandaloneConfig.getAuthorEmailsToAuthorMap());","isFullCredit":true},{"lineNumber":698,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":699,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);","isFullCredit":true},{"lineNumber":700,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(OVERRIDE_STANDALONE_TEST_CONFIG_FILE)","isFullCredit":true},{"lineNumber":701,"author":{"gitId":"-"},"content":"                .addFormats(formats)","isFullCredit":true},{"lineNumber":702,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":703,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":704,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":705,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d","isFullCredit":true},{"lineNumber":706,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();","isFullCredit":true},{"lineNumber":707,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":708,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d actualConfigs.get(0);","isFullCredit":true},{"lineNumber":709,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(actualConfig);","isFullCredit":true},{"lineNumber":710,"author":{"gitId":"-"},"content":"        reportGenerator.updateRepoConfig(actualConfig);","isFullCredit":true},{"lineNumber":711,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":712,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfig, actualConfig);","isFullCredit":true},{"lineNumber":713,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":714,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":715,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":716,"author":{"gitId":"-"},"content":"    public void repoConfig_minimalStandaloneConfig_fieldsAssignedDefaultValues() throws Exception {","isFullCredit":true},{"lineNumber":717,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedConfig \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_MINIMAL_STANDALONE_CONFIG),","isFullCredit":true},{"lineNumber":718,"author":{"gitId":"-"},"content":"                \"master\");","isFullCredit":true},{"lineNumber":719,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":720,"author":{"gitId":"-"},"content":"        Author firstAuthor \u003d new Author(\"bluein-green\");","isFullCredit":true},{"lineNumber":721,"author":{"gitId":"-"},"content":"        Author secondAuthor \u003d new Author(\"jylee-git\");","isFullCredit":true},{"lineNumber":722,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e expectedAuthors \u003d Arrays.asList(firstAuthor, secondAuthor);","isFullCredit":true},{"lineNumber":723,"author":{"gitId":"-"},"content":"        expectedConfig.setAuthorList(expectedAuthors);","isFullCredit":true},{"lineNumber":724,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":725,"author":{"gitId":"-"},"content":"        expectedConfig.setIgnoreGlobList(Collections.emptyList());","isFullCredit":true},{"lineNumber":726,"author":{"gitId":"-"},"content":"        expectedConfig.setFormats(Collections.emptyList());","isFullCredit":true},{"lineNumber":727,"author":{"gitId":"-"},"content":"        expectedConfig.setIgnoreCommitList(Collections.emptyList());","isFullCredit":true},{"lineNumber":728,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":729,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_MINIMAL_STANDALONE_CONFIG),","isFullCredit":true},{"lineNumber":730,"author":{"gitId":"-"},"content":"                \"master\");","isFullCredit":true},{"lineNumber":731,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(actualConfig);","isFullCredit":true},{"lineNumber":732,"author":{"gitId":"-"},"content":"        reportGenerator.updateRepoConfig(actualConfig);","isFullCredit":true},{"lineNumber":733,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":734,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfig, actualConfig);","isFullCredit":true},{"lineNumber":735,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":736,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":737,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":738,"author":{"gitId":"-"},"content":"    public void repoConfig_removeIgnoredAuthors_success() throws Exception {","isFullCredit":true},{"lineNumber":739,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e expectedAuthors \u003d new ArrayList\u003c\u003e();","isFullCredit":true},{"lineNumber":740,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(FIRST_AUTHOR);","isFullCredit":true},{"lineNumber":741,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);","isFullCredit":true},{"lineNumber":742,"author":{"gitId":"-"},"content":"        expectedAuthors.add(author);","isFullCredit":true},{"lineNumber":743,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":744,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedConfig \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_DELTA), \"master\");","isFullCredit":true},{"lineNumber":745,"author":{"gitId":"-"},"content":"        expectedConfig.setAuthorList(expectedAuthors);","isFullCredit":true},{"lineNumber":746,"author":{"gitId":"-"},"content":"        expectedConfig.addAuthorNamesToAuthorMapEntry(author, FIRST_AUTHOR_ALIASES);","isFullCredit":true},{"lineNumber":747,"author":{"gitId":"-"},"content":"        expectedConfig.setAuthorDisplayName(author, \"Ahm\");","isFullCredit":true},{"lineNumber":748,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":749,"author":{"gitId":"-"},"content":"        expectedConfig.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);","isFullCredit":true},{"lineNumber":750,"author":{"gitId":"-"},"content":"        expectedConfig.setFormats(CONFIG_FORMATS);","isFullCredit":true},{"lineNumber":751,"author":{"gitId":"-"},"content":"        expectedConfig.setStandaloneConfigIgnored(true);","isFullCredit":true},{"lineNumber":752,"author":{"gitId":"-"},"content":"        expectedConfig.setIgnoredAuthorsList(Arrays.asList(\"jordancjq\", \"Eugene Peh\"));","isFullCredit":true},{"lineNumber":753,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":754,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);","isFullCredit":true},{"lineNumber":755,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(IGNORE_AUTHORS_TEST_CONFIG_FILE)","isFullCredit":true},{"lineNumber":756,"author":{"gitId":"-"},"content":"                .addFormats(formats)","isFullCredit":true},{"lineNumber":757,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":758,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":759,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":760,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d","isFullCredit":true},{"lineNumber":761,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();","isFullCredit":true},{"lineNumber":762,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e authorConfigs \u003d","isFullCredit":true},{"lineNumber":763,"author":{"gitId":"-"},"content":"                new AuthorConfigCsvParser(cliArguments.getAuthorConfigFilePath()).parse();","isFullCredit":true},{"lineNumber":764,"author":{"gitId":"-"},"content":"        RepoConfiguration.merge(actualConfigs, authorConfigs);","isFullCredit":true},{"lineNumber":765,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":766,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d actualConfigs.get(0);","isFullCredit":true},{"lineNumber":767,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(actualConfig);","isFullCredit":true},{"lineNumber":768,"author":{"gitId":"-"},"content":"        reportGenerator.updateRepoConfig(actualConfig);","isFullCredit":true},{"lineNumber":769,"author":{"gitId":"-"},"content":"        Method updateAuthorList \u003d ReportGenerator.class.getDeclaredMethod(\"updateAuthorList\", RepoConfiguration.class);","isFullCredit":true},{"lineNumber":770,"author":{"gitId":"-"},"content":"        updateAuthorList.setAccessible(true);","isFullCredit":true},{"lineNumber":771,"author":{"gitId":"-"},"content":"        updateAuthorList.invoke(reportGenerator, actualConfig);","isFullCredit":true},{"lineNumber":772,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":773,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfig, actualConfig);","isFullCredit":true},{"lineNumber":774,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":775,"author":{"gitId":"-"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yong24s":88,"eugenepeh":14,"-":673}},{"path":"src/test/java/reposense/model/StandaloneConfigTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenepeh"},"content":"package reposense.model;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static reposense.util.TestUtil.loadResource;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"eugenepeh"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yamidark"},"content":"import java.util.Arrays;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yamidark"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeAll;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"yong24s"},"content":"import com.google.gson.JsonSyntaxException;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"eugenepeh"},"content":"import reposense.parser.StandaloneConfigJsonParser;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"eugenepeh"},"content":"import reposense.template.GitTestTemplate;","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"eugenepeh"},"content":"public class StandaloneConfigTest extends GitTestTemplate {","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path VALID_CONFIG \u003d loadResource(StandaloneConfigTest.class,","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \"StandaloneConfigTest/valid_config.json\");","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path INVALID_IGNOREGLOB_CONFIG \u003d loadResource(StandaloneConfigTest.class,","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \"StandaloneConfigTest/lithiumlkid_invalidIgnoreGlob_config.json\");","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Path INVALID_FORMATS_CONFIG \u003d loadResource(StandaloneConfigTest.class,","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \"StandaloneConfigTest/invalidFormats_config.json\");","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Path INVALID_IGNORECOMMIT_CONFIG \u003d loadResource(StandaloneConfigTest.class,","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"StandaloneConfigTest/invalidIgnoreCommit_config.json\");","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Path SPECIAL_CHARACTER_AUTHOR_CONFIG \u003d loadResource(StandaloneConfigTest.class,","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \"StandaloneConfigTest/specialCharacterAuthor_config.json\");","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Path AUTHORS_TRAILING_COMMAS_CONFIG \u003d loadResource(StandaloneConfigTest.class,","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \"StandaloneConfigTest/authors_trailingCommas_config.json\");","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Path LITHIUMLKID_TRAILING_COMMAS_CONFIG \u003d loadResource(StandaloneConfigTest.class,","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \"StandaloneConfigTest/lithiumlkid_trailingCommas_config.json\");","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Path FILE_SIZE_LIMIT_CONFIG \u003d loadResource(StandaloneConfigTest.class,","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \"StandaloneConfigTest/fileSizeLimit_config.json\");","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"yamidark"},"content":"    private static final Author FIRST_SPECIAL_CHARACTER_AUTHOR \u003d new Author(\"‘Processed�‘Cooked�\");","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"yamidark"},"content":"    private static final Author SECOND_SPECIAL_CHARACTER_AUTHOR \u003d new Author(\"(codeeong)\");","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"yamidark"},"content":"    private static final Author THIRD_SPECIAL_CHARACTER_AUTHOR \u003d new Author(\"^:jordancjq;$\");","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"yamidark"},"content":"    private static final List\u003cAuthor\u003e AUTHOR_CONFIG_SPECIAL_CHARACTER_AUTHORS \u003d Arrays.asList(","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"yamidark"},"content":"            FIRST_SPECIAL_CHARACTER_AUTHOR, SECOND_SPECIAL_CHARACTER_AUTHOR, THIRD_SPECIAL_CHARACTER_AUTHOR);","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final long FILE_SIZE_LIMIT \u003d 100000;","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static StandaloneConfig validStandaloneConfig;","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private RepoConfiguration config;","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void before() throws Exception {","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super.before();","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"        config \u003d configs.get();","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @BeforeAll","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static void setUp() throws Exception {","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"        validStandaloneConfig \u003d new StandaloneConfigJsonParser().parse(VALID_CONFIG);","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void standaloneConfig_validJson_success() throws Exception {","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"eugenepeh"},"content":"        StandaloneConfig standaloneConfig \u003d new StandaloneConfigJsonParser().parse(VALID_CONFIG);","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"eugenepeh"},"content":"        config.update(standaloneConfig);","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"yamidark"},"content":"    @Test","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void standaloneConfig_specialCharacterAuthor_success() throws Exception {","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"yamidark"},"content":"        StandaloneConfig standaloneConfig \u003d new StandaloneConfigJsonParser().parse(SPECIAL_CHARACTER_AUTHOR_CONFIG);","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"eugenepeh"},"content":"        config.update(standaloneConfig);","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(AUTHOR_CONFIG_SPECIAL_CHARACTER_AUTHORS, config.getAuthorList());","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"yong24s"},"content":"    @Test","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void standaloneConfig_trailingCommasInList_success() throws Exception {","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"yong24s"},"content":"        StandaloneConfig standaloneConfig \u003d new StandaloneConfigJsonParser().parse(AUTHORS_TRAILING_COMMAS_CONFIG);","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"yong24s"},"content":"        config.update(standaloneConfig);","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(validStandaloneConfig, standaloneConfig);","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void standaloneConfig_fileSizeLimit_success() throws Exception {","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"        StandaloneConfig standaloneConfig \u003d new StandaloneConfigJsonParser().parse(FILE_SIZE_LIMIT_CONFIG);","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"        config.update(standaloneConfig);","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(FILE_SIZE_LIMIT, config.getFileSizeLimit());","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void standaloneConfig_trailingCommasInMaps_throwsJsonSyntaxException() {","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(JsonSyntaxException.class, () -\u003e new StandaloneConfigJsonParser()","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .parse(LITHIUMLKID_TRAILING_COMMAS_CONFIG));","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void standaloneConfig_invalidIgnoreGlob_throwIllegalArgumentException() throws Exception {","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"eugenepeh"},"content":"        StandaloneConfig standaloneConfig \u003d new StandaloneConfigJsonParser().parse(INVALID_IGNOREGLOB_CONFIG);","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(IllegalArgumentException.class, () -\u003e config.update(standaloneConfig));","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void standaloneConfig_invalidFormats_throwIllegalArgumentException() throws Exception {","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"yong24s"},"content":"        StandaloneConfig standaloneConfig \u003d new StandaloneConfigJsonParser().parse(INVALID_FORMATS_CONFIG);","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(IllegalArgumentException.class, () -\u003e config.update(standaloneConfig));","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void standaloneConfig_invalidIgnoreCommit_throwIllegalArgumentException() throws Exception {","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"yamidark"},"content":"        StandaloneConfig standaloneConfig \u003d new StandaloneConfigJsonParser().parse(INVALID_IGNORECOMMIT_CONFIG);","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(IllegalArgumentException.class, () -\u003e config.update(standaloneConfig));","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yamidark":13,"yong24s":16,"eugenepeh":23,"-":60}},{"path":"src/test/java/reposense/parser/ArgsParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yong24s"},"content":"package reposense.parser;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"yong24s"},"content":"import static org.apache.tools.ant.types.Commandline.translateCommandline;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static reposense.util.TestUtil.loadResource;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yong24s"},"content":"import java.io.File;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yong24s"},"content":"import java.io.IOException;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"yong24s"},"content":"import java.nio.file.Files;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"yong24s"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"yong24s"},"content":"import java.nio.file.Paths;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.time.Month;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.time.ZoneId;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"yong24s"},"content":"import java.util.Arrays;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"yong24s"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.AfterEach;","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"eugenepeh"},"content":"import net.sourceforge.argparse4j.helper.HelpScreenException;","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"yamidark"},"content":"import reposense.model.CliArguments;","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.model.FileType;","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.model.FileTypeTest;","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"yong24s"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"import reposense.model.RunConfigurationDecider;","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"import reposense.util.InputBuilder;","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"yong24s"},"content":"import reposense.util.TestUtil;","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"import reposense.util.TimeUtil;","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"yong24s"},"content":"public class ArgsParserTest {","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"yong24s"},"content":"    private static final Path PROJECT_DIRECTORY \u003d Paths.get(System.getProperty(\"user.dir\"));","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Path CONFIG_DIRECTORY \u003d Paths.get(System.getProperty(\"user.dir\")","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + File.separator + \"config\" + File.separator);","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Path CONFIG_FOLDER_ABSOLUTE \u003d loadResource(ArgsParserTest.class, \"cli_location_test\");","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Path OUTPUT_DIRECTORY_ABSOLUTE \u003d loadResource(ArgsParserTest.class, \"output\");","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"yong24s"},"content":"    private static final Path CONFIG_FOLDER_RELATIVE \u003d PROJECT_DIRECTORY.relativize(CONFIG_FOLDER_ABSOLUTE);","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"yong24s"},"content":"    private static final Path OUTPUT_DIRECTORY_RELATIVE \u003d PROJECT_DIRECTORY.relativize(OUTPUT_DIRECTORY_ABSOLUTE);","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"yong24s"},"content":"    private static final Path REPO_CONFIG_CSV_FILE \u003d","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"yong24s"},"content":"            CONFIG_FOLDER_ABSOLUTE.resolve(RepoConfigCsvParser.REPO_CONFIG_FILENAME);","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"yong24s"},"content":"    private static final Path AUTHOR_CONFIG_CSV_FILE \u003d","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"yong24s"},"content":"            CONFIG_FOLDER_ABSOLUTE.resolve(AuthorConfigCsvParser.AUTHOR_CONFIG_FILENAME);","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String NONEXISTENT_DIRECTORY \u003d \"some_non_existent_dir/\";","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final InputBuilder DEFAULT_INPUT_BUILDER \u003d new InputBuilder();","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"yong24s"},"content":"    private static final String TEST_REPO_REPOSENSE \u003d \"https://github.com/reposense/RepoSense.git\";","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"yong24s"},"content":"    private static final String TEST_REPO_BETA \u003d \"https://github.com/reposense/testrepo-Beta.git\";","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"yong24s"},"content":"    private static final String TEST_REPO_CHARLIE \u003d \"https://github.com/reposense/testrepo-Charlie.git\";","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"yong24s"},"content":"    private static final String TEST_REPO_DELTA \u003d \"https://github.com/reposense/testrepo-Delta.git\";","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final String DEFAULT_TIME_ZONE_STRING \u003d \"Asia/Singapore\";","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final ZoneId DEFAULT_TIME_ZONE_ID \u003d TestUtil.getZoneId(DEFAULT_TIME_ZONE_STRING);","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @BeforeEach","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void before() {","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"        DEFAULT_INPUT_BUILDER.reset().addConfig(CONFIG_FOLDER_ABSOLUTE);","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @AfterEach","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void after() {","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"        try {","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"            FileUtil.deleteDirectory(PROJECT_DIRECTORY.resolve(NONEXISTENT_DIRECTORY).toString());","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"            System.err.println(e.getMessage());","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parse_d1CorrectTimeZone_success() throws Exception {","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .addSinceDate(SinceDateArgumentType.FIRST_COMMIT_DATE_SHORTHAND)","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\")","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIME_ZONE_STRING)","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, cliArguments.getRepoConfigFilePath()));","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, cliArguments.getAuthorConfigFilePath()));","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"        LocalDateTime expectedSinceDate \u003d TimeUtil.getArbitraryFirstCommitDateConverted(DEFAULT_TIME_ZONE_ID);","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"        LocalDateTime expectedUntilDate \u003d TestUtil.getUntilDate(2017, Month.NOVEMBER.getValue(), 30);","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedSinceDate, cliArguments.getSinceDate());","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedUntilDate, cliArguments.getUntilDate());","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(DEFAULT_TIME_ZONE_ID, cliArguments.getZoneId());","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"yong24s"},"content":"    @Test","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parse_allCorrectInputs_success() throws Exception {","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_ABSOLUTE)","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .addSinceDate(\"01/07/2017\")","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\")","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .addFormats(\"java adoc html css js\")","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .addIgnoreStandaloneConfig()","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .addIgnoreFilesizeLimit()","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .addView()","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIME_ZONE_STRING)","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, cliArguments.getRepoConfigFilePath()));","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, cliArguments.getAuthorConfigFilePath()));","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"-"},"content":"                OUTPUT_DIRECTORY_ABSOLUTE.resolve(ArgsParser.DEFAULT_REPORT_NAME), cliArguments.getOutputFilePath()));","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"-"},"content":"        LocalDateTime expectedSinceDate \u003d TestUtil.getSinceDate(2017, Month.JULY.getValue(), 1);","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"        LocalDateTime expectedUntilDate \u003d TestUtil.getUntilDate(2017, Month.NOVEMBER.getValue(), 30);","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedSinceDate, cliArguments.getSinceDate());","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedUntilDate, cliArguments.getUntilDate());","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e expectedFormats \u003d FileType.convertFormatStringsToFileTypes(","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"-"},"content":"                Arrays.asList(\"java\", \"adoc\", \"html\", \"css\", \"js\"));","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedFormats, cliArguments.getFormats());","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(cliArguments.isAutomaticallyLaunching());","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(cliArguments.isFileSizeLimitIgnored());","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(DEFAULT_TIME_ZONE_ID, cliArguments.getZoneId());","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parse_help_throwsHelpScreenException() {","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"eugenepeh"},"content":"        String input \u003d \"--help\";","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(HelpScreenException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_allCorrectInputsAlias_success() throws Exception {","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String input \u003d String.format(","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"-"},"content":"                \"-c \\\"%s\\\" -o \\\"%s\\\" -s 01/07/2017 -u 30/11/2017 -f java adoc html css js -i -I -v -t %s\",","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"-"},"content":"                CONFIG_FOLDER_ABSOLUTE, OUTPUT_DIRECTORY_ABSOLUTE, DEFAULT_TIME_ZONE_STRING);","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"yong24s"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, cliArguments.getRepoConfigFilePath()));","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, cliArguments.getAuthorConfigFilePath()));","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"yong24s"},"content":"                OUTPUT_DIRECTORY_ABSOLUTE.resolve(ArgsParser.DEFAULT_REPORT_NAME), cliArguments.getOutputFilePath()));","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"-"},"content":"        LocalDateTime expectedSinceDate \u003d TestUtil.getSinceDate(2017, Month.JULY.getValue(), 1);","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"-"},"content":"        LocalDateTime expectedUntilDate \u003d TestUtil.getUntilDate(2017, Month.NOVEMBER.getValue(), 30);","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedSinceDate, cliArguments.getSinceDate());","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedUntilDate, cliArguments.getUntilDate());","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e expectedFormats \u003d FileType.convertFormatStringsToFileTypes(","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"-"},"content":"                Arrays.asList(\"java\", \"adoc\", \"html\", \"css\", \"js\"));","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedFormats, cliArguments.getFormats());","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(cliArguments.isAutomaticallyLaunching());","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(cliArguments.isFileSizeLimitIgnored());","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(DEFAULT_TIME_ZONE_ID, cliArguments.getZoneId());","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"yong24s"},"content":"    @Test","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parse_withExtraWhitespaces_success() throws Exception {","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE).addWhiteSpace(5)","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_ABSOLUTE).addWhiteSpace(4)","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"-"},"content":"                .addSinceDate(\"01/07/2017\").addWhiteSpace(3)","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\").addWhiteSpace(6)","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"-"},"content":"                .addFormats(\"java   adoc  html      css js   \")","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"-"},"content":"                .addIgnoreStandaloneConfig().addWhiteSpace(1)","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"-"},"content":"                .addIgnoreFilesizeLimit().addWhiteSpace(2)","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"-"},"content":"                .addView().addWhiteSpace(4)","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIME_ZONE_STRING).addWhiteSpace(5)","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"yong24s"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, cliArguments.getRepoConfigFilePath()));","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, cliArguments.getAuthorConfigFilePath()));","isFullCredit":true},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(","isFullCredit":true},{"lineNumber":180,"author":{"gitId":"yong24s"},"content":"                OUTPUT_DIRECTORY_ABSOLUTE.resolve(ArgsParser.DEFAULT_REPORT_NAME), cliArguments.getOutputFilePath()));","isFullCredit":true},{"lineNumber":181,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":182,"author":{"gitId":"-"},"content":"        LocalDateTime expectedSinceDate \u003d TestUtil.getSinceDate(2017, Month.JULY.getValue(), 1);","isFullCredit":true},{"lineNumber":183,"author":{"gitId":"-"},"content":"        LocalDateTime expectedUntilDate \u003d TestUtil.getUntilDate(2017, Month.NOVEMBER.getValue(), 30);","isFullCredit":true},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedSinceDate, cliArguments.getSinceDate());","isFullCredit":true},{"lineNumber":185,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedUntilDate, cliArguments.getUntilDate());","isFullCredit":true},{"lineNumber":186,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":187,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e expectedFormats \u003d FileType.convertFormatStringsToFileTypes(Arrays.asList(","isFullCredit":true},{"lineNumber":188,"author":{"gitId":"-"},"content":"                \"java\", \"adoc\", \"html\", \"css\", \"js\"));","isFullCredit":true},{"lineNumber":189,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedFormats, cliArguments.getFormats());","isFullCredit":true},{"lineNumber":190,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(cliArguments.isAutomaticallyLaunching());","isFullCredit":true},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(cliArguments.isFileSizeLimitIgnored());","isFullCredit":true},{"lineNumber":193,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":194,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(DEFAULT_TIME_ZONE_ID, cliArguments.getZoneId());","isFullCredit":true},{"lineNumber":195,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":196,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":197,"author":{"gitId":"yong24s"},"content":"    @Test","isFullCredit":true},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void parse_configFolderOnly_success() throws Exception {","isFullCredit":true},{"lineNumber":199,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE).build();","isFullCredit":true},{"lineNumber":200,"author":{"gitId":"yong24s"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":201,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(","isFullCredit":true},{"lineNumber":202,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, cliArguments.getRepoConfigFilePath()));","isFullCredit":true},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(","isFullCredit":true},{"lineNumber":204,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, cliArguments.getAuthorConfigFilePath()));","isFullCredit":true},{"lineNumber":205,"author":{"gitId":"yong24s"},"content":"        // Optional arguments have default values","isFullCredit":true},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertDateDiffOneMonth(cliArguments.getSinceDate(), cliArguments.getUntilDate());","isFullCredit":true},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertDateDiffEndOfDay(cliArguments.getUntilDate());","isFullCredit":true},{"lineNumber":208,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(ArgsParser.DEFAULT_REPORT_NAME,","isFullCredit":true},{"lineNumber":209,"author":{"gitId":"-"},"content":"                cliArguments.getOutputFilePath().getFileName().toString());","isFullCredit":true},{"lineNumber":210,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(FileTypeTest.NO_SPECIFIED_FORMATS, cliArguments.getFormats());","isFullCredit":true},{"lineNumber":211,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(cliArguments.isAutomaticallyLaunching());","isFullCredit":true},{"lineNumber":212,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":213,"author":{"gitId":"-"},"content":"        input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_RELATIVE).build();","isFullCredit":true},{"lineNumber":214,"author":{"gitId":"yong24s"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":215,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":216,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(","isFullCredit":true},{"lineNumber":217,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, cliArguments.getRepoConfigFilePath()));","isFullCredit":true},{"lineNumber":218,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(","isFullCredit":true},{"lineNumber":219,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, cliArguments.getAuthorConfigFilePath()));","isFullCredit":true},{"lineNumber":220,"author":{"gitId":"yong24s"},"content":"        // Optional arguments have default values","isFullCredit":true},{"lineNumber":221,"author":{"gitId":"-"},"content":"        assertDateDiffOneMonth(cliArguments.getSinceDate(), cliArguments.getUntilDate());","isFullCredit":true},{"lineNumber":222,"author":{"gitId":"-"},"content":"        assertDateDiffEndOfDay(cliArguments.getUntilDate());","isFullCredit":true},{"lineNumber":223,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(ArgsParser.DEFAULT_REPORT_NAME,","isFullCredit":true},{"lineNumber":224,"author":{"gitId":"-"},"content":"                cliArguments.getOutputFilePath().getFileName().toString());","isFullCredit":true},{"lineNumber":225,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(FileTypeTest.NO_SPECIFIED_FORMATS, cliArguments.getFormats());","isFullCredit":true},{"lineNumber":226,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(cliArguments.isAutomaticallyLaunching());","isFullCredit":true},{"lineNumber":227,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(ZoneId.systemDefault(), cliArguments.getZoneId());","isFullCredit":true},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":229,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":230,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":231,"author":{"gitId":"-"},"content":"    public void parse_viewOnly_success() throws Exception {","isFullCredit":true},{"lineNumber":232,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addView(OUTPUT_DIRECTORY_ABSOLUTE).build();","isFullCredit":true},{"lineNumber":233,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":234,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(","isFullCredit":true},{"lineNumber":235,"author":{"gitId":"-"},"content":"                OUTPUT_DIRECTORY_ABSOLUTE, cliArguments.getReportDirectoryPath()));","isFullCredit":true},{"lineNumber":236,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":237,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":238,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":239,"author":{"gitId":"-"},"content":"    public void parse_withIgnore_success() throws Exception {","isFullCredit":true},{"lineNumber":240,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA)","isFullCredit":true},{"lineNumber":241,"author":{"gitId":"-"},"content":"                .addIgnoreStandaloneConfig()","isFullCredit":true},{"lineNumber":242,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":243,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":244,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":245,"author":{"gitId":"-"},"content":"        String inputWithAlias \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA)","isFullCredit":true},{"lineNumber":246,"author":{"gitId":"-"},"content":"                .add(\"-i\")","isFullCredit":true},{"lineNumber":247,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":248,"author":{"gitId":"-"},"content":"        CliArguments cliArgumentsWithAlias \u003d ArgsParser.parse(translateCommandline(inputWithAlias));","isFullCredit":true},{"lineNumber":249,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":250,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(cliArguments.isStandaloneConfigIgnored());","isFullCredit":true},{"lineNumber":251,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(cliArgumentsWithAlias.isStandaloneConfigIgnored());","isFullCredit":true},{"lineNumber":252,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":253,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(cliArguments.equals(cliArgumentsWithAlias));","isFullCredit":true},{"lineNumber":254,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":255,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(cliArguments, cliArgumentsWithAlias);","isFullCredit":true},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":257,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":258,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":259,"author":{"gitId":"-"},"content":"    public void parse_withoutIgnore_success() throws Exception {","isFullCredit":true},{"lineNumber":260,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA).build();","isFullCredit":true},{"lineNumber":261,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":262,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":263,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(cliArguments.isStandaloneConfigIgnored());","isFullCredit":true},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":265,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":266,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":267,"author":{"gitId":"-"},"content":"    public void parse_viewOnlyWithoutArgs_returnsConfigCliArguments() throws Exception {","isFullCredit":true},{"lineNumber":268,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addView().build();","isFullCredit":true},{"lineNumber":269,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":270,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":271,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(CONFIG_DIRECTORY.toString(), (","isFullCredit":true},{"lineNumber":272,"author":{"gitId":"-"},"content":"                cliArguments).getConfigFolderPath().toString());","isFullCredit":true},{"lineNumber":273,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(cliArguments.isAutomaticallyLaunching());","isFullCredit":true},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":275,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":276,"author":{"gitId":"yong24s"},"content":"    @Test","isFullCredit":true},{"lineNumber":277,"author":{"gitId":"-"},"content":"    public void parse_configFolderAndOutputDirectory_success() throws Exception {","isFullCredit":true},{"lineNumber":278,"author":{"gitId":"yong24s"},"content":"        Path expectedRelativeOutputDirectoryPath \u003d OUTPUT_DIRECTORY_RELATIVE.resolve(ArgsParser.DEFAULT_REPORT_NAME);","isFullCredit":true},{"lineNumber":279,"author":{"gitId":"yong24s"},"content":"        Path expectedAbsoluteOutputDirectoryPath \u003d OUTPUT_DIRECTORY_ABSOLUTE.resolve(ArgsParser.DEFAULT_REPORT_NAME);","isFullCredit":true},{"lineNumber":280,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":281,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)","isFullCredit":true},{"lineNumber":282,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_RELATIVE)","isFullCredit":true},{"lineNumber":283,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":284,"author":{"gitId":"yong24s"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":285,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(","isFullCredit":true},{"lineNumber":286,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, cliArguments.getRepoConfigFilePath()));","isFullCredit":true},{"lineNumber":287,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(","isFullCredit":true},{"lineNumber":288,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, cliArguments.getAuthorConfigFilePath()));","isFullCredit":true},{"lineNumber":289,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(expectedRelativeOutputDirectoryPath, cliArguments.getOutputFilePath()));","isFullCredit":true},{"lineNumber":290,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":291,"author":{"gitId":"-"},"content":"        input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_RELATIVE)","isFullCredit":true},{"lineNumber":292,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_ABSOLUTE)","isFullCredit":true},{"lineNumber":293,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":294,"author":{"gitId":"yong24s"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":295,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(","isFullCredit":true},{"lineNumber":296,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, cliArguments.getRepoConfigFilePath()));","isFullCredit":true},{"lineNumber":297,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(","isFullCredit":true},{"lineNumber":298,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, cliArguments.getAuthorConfigFilePath()));","isFullCredit":true},{"lineNumber":299,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(expectedAbsoluteOutputDirectoryPath, cliArguments.getOutputFilePath()));","isFullCredit":true},{"lineNumber":300,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":301,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":302,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":303,"author":{"gitId":"-"},"content":"    public void parse_configFolderAndViewWithouthArgs_returnsConfigCliArguments() throws Exception {","isFullCredit":true},{"lineNumber":304,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)","isFullCredit":true},{"lineNumber":305,"author":{"gitId":"-"},"content":"                .addView()","isFullCredit":true},{"lineNumber":306,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":307,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":308,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":309,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(","isFullCredit":true},{"lineNumber":310,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, cliArguments.getRepoConfigFilePath()));","isFullCredit":true},{"lineNumber":311,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(","isFullCredit":true},{"lineNumber":312,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, cliArguments.getAuthorConfigFilePath()));","isFullCredit":true},{"lineNumber":313,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(cliArguments.isAutomaticallyLaunching());","isFullCredit":true},{"lineNumber":314,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":315,"author":{"gitId":"-"},"content":"        input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_RELATIVE)","isFullCredit":true},{"lineNumber":316,"author":{"gitId":"-"},"content":"                .addView()","isFullCredit":true},{"lineNumber":317,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":318,"author":{"gitId":"-"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":319,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":320,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(","isFullCredit":true},{"lineNumber":321,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, cliArguments.getRepoConfigFilePath()));","isFullCredit":true},{"lineNumber":322,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(","isFullCredit":true},{"lineNumber":323,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, cliArguments.getAuthorConfigFilePath()));","isFullCredit":true},{"lineNumber":324,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(cliArguments.isAutomaticallyLaunching());","isFullCredit":true},{"lineNumber":325,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":326,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":327,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":328,"author":{"gitId":"-"},"content":"    public void parse_configFolderAndViewWithArgs_returnsConfigCliArguments() throws Exception {","isFullCredit":true},{"lineNumber":329,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)","isFullCredit":true},{"lineNumber":330,"author":{"gitId":"-"},"content":"                .addView(OUTPUT_DIRECTORY_ABSOLUTE)","isFullCredit":true},{"lineNumber":331,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":332,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":333,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":334,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(","isFullCredit":true},{"lineNumber":335,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, cliArguments.getRepoConfigFilePath()));","isFullCredit":true},{"lineNumber":336,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(","isFullCredit":true},{"lineNumber":337,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, cliArguments.getAuthorConfigFilePath()));","isFullCredit":true},{"lineNumber":338,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(cliArguments.isAutomaticallyLaunching());","isFullCredit":true},{"lineNumber":339,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":340,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":341,"author":{"gitId":"yong24s"},"content":"    @Test","isFullCredit":true},{"lineNumber":342,"author":{"gitId":"-"},"content":"    public void sinceDate_correctFormat_success() throws Exception {","isFullCredit":true},{"lineNumber":343,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER","isFullCredit":true},{"lineNumber":344,"author":{"gitId":"-"},"content":"                .addSinceDate(\"01/07/2017\")","isFullCredit":true},{"lineNumber":345,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIME_ZONE_STRING)","isFullCredit":true},{"lineNumber":346,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":347,"author":{"gitId":"yong24s"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":348,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":349,"author":{"gitId":"-"},"content":"        LocalDateTime expectedSinceDate \u003d TestUtil.getSinceDate(2017, Month.JULY.getValue(), 1);","isFullCredit":true},{"lineNumber":350,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedSinceDate, cliArguments.getSinceDate());","isFullCredit":true},{"lineNumber":351,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":352,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":353,"author":{"gitId":"yong24s"},"content":"    @Test","isFullCredit":true},{"lineNumber":354,"author":{"gitId":"-"},"content":"    public void untilDate_correctFormat_success() throws Exception {","isFullCredit":true},{"lineNumber":355,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER","isFullCredit":true},{"lineNumber":356,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\")","isFullCredit":true},{"lineNumber":357,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIME_ZONE_STRING)","isFullCredit":true},{"lineNumber":358,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":359,"author":{"gitId":"yong24s"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":360,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":361,"author":{"gitId":"-"},"content":"        LocalDateTime expectedUntilDate \u003d TestUtil.getUntilDate(2017, Month.NOVEMBER.getValue(), 30);","isFullCredit":true},{"lineNumber":362,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedUntilDate, cliArguments.getUntilDate());","isFullCredit":true},{"lineNumber":363,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":364,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":365,"author":{"gitId":"jamessspanggg"},"content":"    @Test","isFullCredit":true},{"lineNumber":366,"author":{"gitId":"-"},"content":"    public void sinceDate_withExtraDate_success() throws Exception {","isFullCredit":true},{"lineNumber":367,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER","isFullCredit":true},{"lineNumber":368,"author":{"gitId":"-"},"content":"                .addSinceDate(\"\\\"01/07/2017 01/07/2018\\\"\")","isFullCredit":true},{"lineNumber":369,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIME_ZONE_STRING)","isFullCredit":true},{"lineNumber":370,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":371,"author":{"gitId":"jamessspanggg"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":372,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":373,"author":{"gitId":"-"},"content":"        LocalDateTime expectedSinceDate \u003d TestUtil.getSinceDate(2017, Month.JULY.getValue(), 1);","isFullCredit":true},{"lineNumber":374,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedSinceDate, cliArguments.getSinceDate());","isFullCredit":true},{"lineNumber":375,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":376,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":377,"author":{"gitId":"jamessspanggg"},"content":"    @Test","isFullCredit":true},{"lineNumber":378,"author":{"gitId":"-"},"content":"    public void untilDate_withExtraTime_success() throws Exception {","isFullCredit":true},{"lineNumber":379,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER","isFullCredit":true},{"lineNumber":380,"author":{"gitId":"-"},"content":"                .addUntilDate(\"\\\"30/11/2017 10:10:10\\\"\")","isFullCredit":true},{"lineNumber":381,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIME_ZONE_STRING)","isFullCredit":true},{"lineNumber":382,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":383,"author":{"gitId":"jamessspanggg"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":384,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":385,"author":{"gitId":"-"},"content":"        LocalDateTime expectedUntilDate \u003d TestUtil.getUntilDate(2017, Month.NOVEMBER.getValue(), 30);","isFullCredit":true},{"lineNumber":386,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedUntilDate, cliArguments.getUntilDate());","isFullCredit":true},{"lineNumber":387,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":388,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":389,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":390,"author":{"gitId":"-"},"content":"    public void period_inDaysWithSinceDate_success() throws Exception {","isFullCredit":true},{"lineNumber":391,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER","isFullCredit":true},{"lineNumber":392,"author":{"gitId":"-"},"content":"                .addSinceDate(\"01/07/2017\")","isFullCredit":true},{"lineNumber":393,"author":{"gitId":"-"},"content":"                .addPeriod(\"2d\")","isFullCredit":true},{"lineNumber":394,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIME_ZONE_STRING)","isFullCredit":true},{"lineNumber":395,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":396,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":397,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":398,"author":{"gitId":"-"},"content":"        LocalDateTime expectedUntilDate \u003d TestUtil.getUntilDate(2017, Month.JULY.getValue(), 3);","isFullCredit":true},{"lineNumber":399,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedUntilDate, cliArguments.getUntilDate());","isFullCredit":true},{"lineNumber":400,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":401,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":402,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":403,"author":{"gitId":"-"},"content":"    public void period_inWeeksWithUntilDate_success() throws Exception {","isFullCredit":true},{"lineNumber":404,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER","isFullCredit":true},{"lineNumber":405,"author":{"gitId":"-"},"content":"                .addUntilDate(\"14/07/2017\")","isFullCredit":true},{"lineNumber":406,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIME_ZONE_STRING)","isFullCredit":true},{"lineNumber":407,"author":{"gitId":"-"},"content":"                .addPeriod(\"2w\")","isFullCredit":true},{"lineNumber":408,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":409,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":410,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":411,"author":{"gitId":"-"},"content":"        LocalDateTime expectedSinceDate \u003d TestUtil.getSinceDate(2017, Month.JUNE.getValue(), 30);","isFullCredit":true},{"lineNumber":412,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedSinceDate, cliArguments.getSinceDate());","isFullCredit":true},{"lineNumber":413,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":414,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":415,"author":{"gitId":"yong24s"},"content":"    @Test","isFullCredit":true},{"lineNumber":416,"author":{"gitId":"-"},"content":"    public void formats_inAlphanumeric_success() throws Exception {","isFullCredit":true},{"lineNumber":417,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addFormats(\"java js css 7z\").build();","isFullCredit":true},{"lineNumber":418,"author":{"gitId":"yong24s"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":419,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":420,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e expectedFormats \u003d FileType.convertFormatStringsToFileTypes(","isFullCredit":true},{"lineNumber":421,"author":{"gitId":"-"},"content":"                Arrays.asList(\"java\", \"js\", \"css\", \"7z\"));","isFullCredit":true},{"lineNumber":422,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedFormats, cliArguments.getFormats());","isFullCredit":true},{"lineNumber":423,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":424,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":425,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":426,"author":{"gitId":"-"},"content":"    public void numCloningThreads_default_success() throws Exception {","isFullCredit":true},{"lineNumber":427,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.build();","isFullCredit":true},{"lineNumber":428,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":429,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":430,"author":{"gitId":"-"},"content":"        int expectedNumThreads \u003d ArgsParser.DEFAULT_NUM_CLONING_THREADS;","isFullCredit":true},{"lineNumber":431,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedNumThreads, cliArguments.getNumCloningThreads());","isFullCredit":true},{"lineNumber":432,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":433,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":434,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":435,"author":{"gitId":"-"},"content":"    public void numCloningThreads_isNumeric_success() throws Exception {","isFullCredit":true},{"lineNumber":436,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER","isFullCredit":true},{"lineNumber":437,"author":{"gitId":"-"},"content":"                .addNumCloningThreads(2)","isFullCredit":true},{"lineNumber":438,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":439,"author":{"gitId":"-"},"content":"        System.out.println(input);","isFullCredit":true},{"lineNumber":440,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":441,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":442,"author":{"gitId":"-"},"content":"        int expectedNumThreads \u003d 2;","isFullCredit":true},{"lineNumber":443,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedNumThreads, cliArguments.getNumCloningThreads());","isFullCredit":true},{"lineNumber":444,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":445,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":446,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":447,"author":{"gitId":"-"},"content":"    public void numAnalysisThreads_default_success() throws Exception {","isFullCredit":true},{"lineNumber":448,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.build();","isFullCredit":true},{"lineNumber":449,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":450,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":451,"author":{"gitId":"-"},"content":"        int expectedNumThreads \u003d ArgsParser.DEFAULT_NUM_ANALYSIS_THREADS;","isFullCredit":true},{"lineNumber":452,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedNumThreads, cliArguments.getNumAnalysisThreads());","isFullCredit":true},{"lineNumber":453,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":454,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":455,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":456,"author":{"gitId":"-"},"content":"    public void numAnalysisThreads_isNumeric_success() throws Exception {","isFullCredit":true},{"lineNumber":457,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER","isFullCredit":true},{"lineNumber":458,"author":{"gitId":"-"},"content":"                .addNumAnalysisThreads(2)","isFullCredit":true},{"lineNumber":459,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":460,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":461,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":462,"author":{"gitId":"-"},"content":"        int expectedNumThreads \u003d 2;","isFullCredit":true},{"lineNumber":463,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedNumThreads, cliArguments.getNumAnalysisThreads());","isFullCredit":true},{"lineNumber":464,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":465,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":466,"author":{"gitId":"yong24s"},"content":"    @Test","isFullCredit":true},{"lineNumber":467,"author":{"gitId":"-"},"content":"    public void parse_validGitRepoLocations_repoConfigurationListCorrectSize() throws Exception {","isFullCredit":true},{"lineNumber":468,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA).build();","isFullCredit":true},{"lineNumber":469,"author":{"gitId":"yong24s"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":470,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e repoConfigs \u003d RunConfigurationDecider","isFullCredit":true},{"lineNumber":471,"author":{"gitId":"-"},"content":"                .getRunConfiguration(cliArguments)","isFullCredit":true},{"lineNumber":472,"author":{"gitId":"-"},"content":"                .getRepoConfigurations();","isFullCredit":true},{"lineNumber":473,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(2, repoConfigs.size());","isFullCredit":true},{"lineNumber":474,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":475,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":476,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":477,"author":{"gitId":"-"},"content":"    public void parse_repoLocationsAndView_returnsLocationCliArguments() throws Exception {","isFullCredit":true},{"lineNumber":478,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA)","isFullCredit":true},{"lineNumber":479,"author":{"gitId":"-"},"content":"                .addView()","isFullCredit":true},{"lineNumber":480,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":481,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":482,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":483,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(cliArguments.isAutomaticallyLaunching());","isFullCredit":true},{"lineNumber":484,"author":{"gitId":"-"},"content":"        List\u003cString\u003e expectedLocations \u003d Arrays.asList(TEST_REPO_REPOSENSE, TEST_REPO_DELTA);","isFullCredit":true},{"lineNumber":485,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedLocations, cliArguments.getLocations());","isFullCredit":true},{"lineNumber":486,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":487,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":488,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":489,"author":{"gitId":"-"},"content":"    public void parse_repoLocationsOnly_success() throws Exception {","isFullCredit":true},{"lineNumber":490,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA).build();","isFullCredit":true},{"lineNumber":491,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":492,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":493,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(cliArguments.isAutomaticallyLaunching());","isFullCredit":true},{"lineNumber":494,"author":{"gitId":"-"},"content":"        List\u003cString\u003e expectedLocations \u003d Arrays.asList(TEST_REPO_REPOSENSE, TEST_REPO_DELTA);","isFullCredit":true},{"lineNumber":495,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedLocations, cliArguments.getLocations());","isFullCredit":true},{"lineNumber":496,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":497,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":498,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":499,"author":{"gitId":"-"},"content":"    public void parse_repoLocationsAndViewWithArgs_returnsLocationsCliArguments() throws Exception {","isFullCredit":true},{"lineNumber":500,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA)","isFullCredit":true},{"lineNumber":501,"author":{"gitId":"-"},"content":"                .addView(OUTPUT_DIRECTORY_ABSOLUTE)","isFullCredit":true},{"lineNumber":502,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":503,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":504,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":505,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(cliArguments.isAutomaticallyLaunching());","isFullCredit":true},{"lineNumber":506,"author":{"gitId":"-"},"content":"        List\u003cString\u003e expectedLocations \u003d Arrays.asList(TEST_REPO_REPOSENSE, TEST_REPO_DELTA);","isFullCredit":true},{"lineNumber":507,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedLocations, cliArguments.getLocations());","isFullCredit":true},{"lineNumber":508,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":509,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":510,"author":{"gitId":"yong24s"},"content":"    @Test","isFullCredit":true},{"lineNumber":511,"author":{"gitId":"-"},"content":"    public void parse_configOrLocationsSimilar_success() throws Exception {","isFullCredit":true},{"lineNumber":512,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE).build();","isFullCredit":true},{"lineNumber":513,"author":{"gitId":"yong24s"},"content":"        CliArguments configCliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":514,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualRepoConfigs \u003d RunConfigurationDecider","isFullCredit":true},{"lineNumber":515,"author":{"gitId":"-"},"content":"                .getRunConfiguration(configCliArguments)","isFullCredit":true},{"lineNumber":516,"author":{"gitId":"-"},"content":"                .getRepoConfigurations();","isFullCredit":true},{"lineNumber":517,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":518,"author":{"gitId":"-"},"content":"        input \u003d new InputBuilder().addRepos(TEST_REPO_BETA, TEST_REPO_CHARLIE, TEST_REPO_DELTA).build();","isFullCredit":true},{"lineNumber":519,"author":{"gitId":"yong24s"},"content":"        CliArguments locationCliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":520,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e expectedRepoConfigs \u003d RunConfigurationDecider","isFullCredit":true},{"lineNumber":521,"author":{"gitId":"-"},"content":"                .getRunConfiguration(locationCliArguments)","isFullCredit":true},{"lineNumber":522,"author":{"gitId":"-"},"content":"                .getRepoConfigurations();","isFullCredit":true},{"lineNumber":523,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":524,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(actualRepoConfigs, expectedRepoConfigs);","isFullCredit":true},{"lineNumber":525,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":526,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":527,"author":{"gitId":"yong24s"},"content":"    @Test","isFullCredit":true},{"lineNumber":528,"author":{"gitId":"-"},"content":"    public void emptyArgs_defaultConfigFolderPath() throws Exception {","isFullCredit":true},{"lineNumber":529,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(new String[]{});","isFullCredit":true},{"lineNumber":530,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":531,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(CONFIG_DIRECTORY.toString(), cliArguments.getConfigFolderPath().toString());","isFullCredit":true},{"lineNumber":532,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":533,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":534,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":535,"author":{"gitId":"-"},"content":"    public void parse_repoAliases_sameResult() throws Exception {","isFullCredit":true},{"lineNumber":536,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_BETA).build();","isFullCredit":true},{"lineNumber":537,"author":{"gitId":"yong24s"},"content":"        CliArguments repoAliasCliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":538,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":539,"author":{"gitId":"-"},"content":"        input \u003d new InputBuilder().add(String.format(\"--repos %s\", TEST_REPO_BETA)).build();","isFullCredit":true},{"lineNumber":540,"author":{"gitId":"yong24s"},"content":"        CliArguments reposAliasCliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":541,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":542,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(repoAliasCliArguments, reposAliasCliArguments);","isFullCredit":true},{"lineNumber":543,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":544,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":545,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":546,"author":{"gitId":"-"},"content":"    public void absoluteConfigFolder_withoutRequiredConfigFiles_throwsParseException() {","isFullCredit":true},{"lineNumber":547,"author":{"gitId":"-"},"content":"        Path absDirectory \u003d PROJECT_DIRECTORY.getParent().toAbsolutePath();","isFullCredit":true},{"lineNumber":548,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(absDirectory).build();","isFullCredit":true},{"lineNumber":549,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));","isFullCredit":true},{"lineNumber":550,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":551,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":552,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":553,"author":{"gitId":"-"},"content":"    public void relativeConfigFolder_withoutRequiredConfigFiles_throwsParseException() {","isFullCredit":true},{"lineNumber":554,"author":{"gitId":"-"},"content":"        Path relDirectory \u003d PROJECT_DIRECTORY.getParent();","isFullCredit":true},{"lineNumber":555,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(relDirectory).build();","isFullCredit":true},{"lineNumber":556,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));","isFullCredit":true},{"lineNumber":557,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":558,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":559,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":560,"author":{"gitId":"-"},"content":"    public void parse_notExistsConfigFolder_throwsParseException() {","isFullCredit":true},{"lineNumber":561,"author":{"gitId":"-"},"content":"        Path absConfigFolder \u003d PROJECT_DIRECTORY.resolve(\"non_existing_random_folder\");","isFullCredit":true},{"lineNumber":562,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(absConfigFolder).build();","isFullCredit":true},{"lineNumber":563,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));","isFullCredit":true},{"lineNumber":564,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":565,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":566,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":567,"author":{"gitId":"-"},"content":"    public void parse_configCsvFileAsConfigFolder_throwsParseException() {","isFullCredit":true},{"lineNumber":568,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(REPO_CONFIG_CSV_FILE).build();","isFullCredit":true},{"lineNumber":569,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));","isFullCredit":true},{"lineNumber":570,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":571,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":572,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":573,"author":{"gitId":"-"},"content":"    public void parse_missingConfigValue_throwsParseException() {","isFullCredit":true},{"lineNumber":574,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(new File(\"\").toPath()).build();","isFullCredit":true},{"lineNumber":575,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));","isFullCredit":true},{"lineNumber":576,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":577,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":578,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":579,"author":{"gitId":"-"},"content":"    public void outputPath_nonExistentDirectory_success() throws Exception {","isFullCredit":true},{"lineNumber":580,"author":{"gitId":"-"},"content":"        Path nonExistentDirectory \u003d PROJECT_DIRECTORY.resolve(NONEXISTENT_DIRECTORY);","isFullCredit":true},{"lineNumber":581,"author":{"gitId":"-"},"content":"        Path expectedRelativeOutputDirectoryPath \u003d nonExistentDirectory.resolve(ArgsParser.DEFAULT_REPORT_NAME);","isFullCredit":true},{"lineNumber":582,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addOutput(nonExistentDirectory).build();","isFullCredit":true},{"lineNumber":583,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":584,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":585,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(","isFullCredit":true},{"lineNumber":586,"author":{"gitId":"-"},"content":"                expectedRelativeOutputDirectoryPath, cliArguments.getOutputFilePath()));","isFullCredit":true},{"lineNumber":587,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":588,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":589,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":590,"author":{"gitId":"-"},"content":"    public void sinceDate_unsupportedFormats_throwsParseException() {","isFullCredit":true},{"lineNumber":591,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addSinceDate(\"01 July 17\").build();","isFullCredit":true},{"lineNumber":592,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));","isFullCredit":true},{"lineNumber":593,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":594,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":595,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":596,"author":{"gitId":"-"},"content":"    public void untilDate_unsupportedFormats_throwsParseException() {","isFullCredit":true},{"lineNumber":597,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addUntilDate(\"11/31/2017\").build();","isFullCredit":true},{"lineNumber":598,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));","isFullCredit":true},{"lineNumber":599,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":600,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":601,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":602,"author":{"gitId":"-"},"content":"    public void sinceDate_laterThanUntilDate_throwsParseException() {","isFullCredit":true},{"lineNumber":603,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addSinceDate(\"01/12/2017\")","isFullCredit":true},{"lineNumber":604,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\")","isFullCredit":true},{"lineNumber":605,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":606,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));","isFullCredit":true},{"lineNumber":607,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":608,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":609,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":610,"author":{"gitId":"-"},"content":"    public void period_withBothSinceDateAndUntilDate_throwsParseException() {","isFullCredit":true},{"lineNumber":611,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addPeriod(\"18d\")","isFullCredit":true},{"lineNumber":612,"author":{"gitId":"-"},"content":"                .addSinceDate(\"30/11/2017\")","isFullCredit":true},{"lineNumber":613,"author":{"gitId":"-"},"content":"                .addUntilDate(\"01/12/2017\")","isFullCredit":true},{"lineNumber":614,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":615,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));","isFullCredit":true},{"lineNumber":616,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":617,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":618,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":619,"author":{"gitId":"-"},"content":"    public void period_notNumeric_throwsParseExcpetion() {","isFullCredit":true},{"lineNumber":620,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addPeriod(\"abcd\").build();","isFullCredit":true},{"lineNumber":621,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));","isFullCredit":true},{"lineNumber":622,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":623,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":624,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":625,"author":{"gitId":"-"},"content":"    public void period_isZero_throwsParseExcpetion() {","isFullCredit":true},{"lineNumber":626,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addPeriod(\"0w\").build();","isFullCredit":true},{"lineNumber":627,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));","isFullCredit":true},{"lineNumber":628,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":629,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":630,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":631,"author":{"gitId":"-"},"content":"    public void formats_notInAlphanumeric_throwsParseException() {","isFullCredit":true},{"lineNumber":632,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addFormats(\".java\").build();","isFullCredit":true},{"lineNumber":633,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));","isFullCredit":true},{"lineNumber":634,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":635,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":636,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":637,"author":{"gitId":"-"},"content":"    public void parse_mutuallyExclusiveArgumentsConfigAndReposTogether_throwsParseException() {","isFullCredit":true},{"lineNumber":638,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)","isFullCredit":true},{"lineNumber":639,"author":{"gitId":"-"},"content":"                .addRepos(TEST_REPO_REPOSENSE)","isFullCredit":true},{"lineNumber":640,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":641,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));","isFullCredit":true},{"lineNumber":642,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":643,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":644,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":645,"author":{"gitId":"-"},"content":"    public void parse_extraArgumentForIgnore_throwsParseException() {","isFullCredit":true},{"lineNumber":646,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addIgnoreStandaloneConfig().add(\"true\").build();","isFullCredit":true},{"lineNumber":647,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));","isFullCredit":true},{"lineNumber":648,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":649,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":650,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":651,"author":{"gitId":"-"},"content":"    public void parse_withTimezone_success() throws Exception {","isFullCredit":true},{"lineNumber":652,"author":{"gitId":"-"},"content":"        String zoneId \u003d \"UTC+11\";","isFullCredit":true},{"lineNumber":653,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addTimezone(zoneId).build();","isFullCredit":true},{"lineNumber":654,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":655,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":656,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(ZoneId.of(zoneId), cliArguments.getZoneId());","isFullCredit":true},{"lineNumber":657,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":658,"author":{"gitId":"-"},"content":"        zoneId \u003d \"UTC-1030\";","isFullCredit":true},{"lineNumber":659,"author":{"gitId":"-"},"content":"        input \u003d DEFAULT_INPUT_BUILDER.addTimezone(zoneId).build();","isFullCredit":true},{"lineNumber":660,"author":{"gitId":"-"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":661,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":662,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(ZoneId.of(zoneId), cliArguments.getZoneId());","isFullCredit":true},{"lineNumber":663,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":664,"author":{"gitId":"-"},"content":"        zoneId \u003d \"UTC\";","isFullCredit":true},{"lineNumber":665,"author":{"gitId":"-"},"content":"        input \u003d DEFAULT_INPUT_BUILDER.addTimezone(zoneId).build();","isFullCredit":true},{"lineNumber":666,"author":{"gitId":"-"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":667,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":668,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(ZoneId.of(zoneId), cliArguments.getZoneId());","isFullCredit":true},{"lineNumber":669,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":670,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":671,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":672,"author":{"gitId":"-"},"content":"    public void parse_incorrectTimezone_throwsParseException() {","isFullCredit":true},{"lineNumber":673,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addTimezone(\"UTC+\").build();","isFullCredit":true},{"lineNumber":674,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));;","isFullCredit":true},{"lineNumber":675,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":676,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":677,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":678,"author":{"gitId":"-"},"content":"    public void parse_timezoneWithoutArgument_throwsParseException() {","isFullCredit":true},{"lineNumber":679,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addTimezone(\"\").build();","isFullCredit":true},{"lineNumber":680,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));","isFullCredit":true},{"lineNumber":681,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":682,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":683,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":684,"author":{"gitId":"-"},"content":"    public void parse_shallowCloning_success() throws Exception {","isFullCredit":true},{"lineNumber":685,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)","isFullCredit":true},{"lineNumber":686,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_ABSOLUTE)","isFullCredit":true},{"lineNumber":687,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":688,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));","isFullCredit":true},{"lineNumber":689,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(false, cliArguments.isShallowCloningPerformed());","isFullCredit":true},{"lineNumber":690,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":691,"author":{"gitId":"-"},"content":"        String inputShallow \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)","isFullCredit":true},{"lineNumber":692,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_ABSOLUTE)","isFullCredit":true},{"lineNumber":693,"author":{"gitId":"-"},"content":"                .addShallowCloning()","isFullCredit":true},{"lineNumber":694,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":true},{"lineNumber":695,"author":{"gitId":"-"},"content":"        CliArguments cliArgumentsShallow \u003d ArgsParser.parse(translateCommandline(inputShallow));","isFullCredit":true},{"lineNumber":696,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(true, cliArgumentsShallow.isShallowCloningPerformed());","isFullCredit":true},{"lineNumber":697,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":698,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":699,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":700,"author":{"gitId":"-"},"content":"     * Ensures that {@code actualSinceDate} is exactly one month before {@code untilDate}.","isFullCredit":true},{"lineNumber":701,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":702,"author":{"gitId":"-"},"content":"     * @throws AssertionError if {@code actualSinceDate} is not one month before {@code untilDate}.","isFullCredit":true},{"lineNumber":703,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":704,"author":{"gitId":"-"},"content":"    private void assertDateDiffOneMonth(LocalDateTime actualSinceDate, LocalDateTime untilDate) {","isFullCredit":true},{"lineNumber":705,"author":{"gitId":"-"},"content":"        LocalDateTime oneMonthBeforeUntilDate \u003d untilDate.withHour(0).withMinute(0).withSecond(0).minusMonths(1);","isFullCredit":true},{"lineNumber":706,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(actualSinceDate.equals(oneMonthBeforeUntilDate));","isFullCredit":true},{"lineNumber":707,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":708,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":709,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":710,"author":{"gitId":"-"},"content":"     * Ensures that {@code actualUntilDate} falls on the date of report generation with time at 23:59:59.","isFullCredit":true},{"lineNumber":711,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":712,"author":{"gitId":"-"},"content":"     * @throws AssertionError if {@code actualUntilDate} does not fall on the date of report generation","isFullCredit":true},{"lineNumber":713,"author":{"gitId":"-"},"content":"     * with time at 23:59:59.","isFullCredit":true},{"lineNumber":714,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":715,"author":{"gitId":"-"},"content":"    private void assertDateDiffEndOfDay(LocalDateTime actualUntilDate) {","isFullCredit":true},{"lineNumber":716,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":717,"author":{"gitId":"-"},"content":"        LocalDateTime currentDate \u003d LocalDateTime.now().withHour(23).withMinute(59).withSecond(59).withNano(0);","isFullCredit":true},{"lineNumber":718,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(actualUntilDate.equals(currentDate));","isFullCredit":true},{"lineNumber":719,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":720,"author":{"gitId":"yong24s"},"content":"}","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":8,"yong24s":112,"yamidark":1,"eugenepeh":4,"-":595}},{"path":"src/test/java/reposense/parser/StandaloneConfigJsonParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yong24s"},"content":"package reposense.parser;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static reposense.util.TestUtil.loadResource;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"yong24s"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yong24s"},"content":"import java.util.Arrays;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeAll;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"yong24s"},"content":"import com.google.gson.JsonSyntaxException;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"yong24s"},"content":"import reposense.model.Author;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.model.FileType;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.model.FileTypeTest;","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"yong24s"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"yong24s"},"content":"import reposense.model.StandaloneConfig;","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"yong24s"},"content":"import reposense.util.TestUtil;","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"yong24s"},"content":"public class StandaloneConfigJsonParserTest {","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Path STANDALONE_MALFORMED_CONFIG \u003d loadResource(","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"-"},"content":"            StandaloneConfigJsonParserTest.class, \"StandaloneConfigJsonParserTest/standaloneConfig_malformedJson.json\");","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Path STANDALONE_UNKNOWN_PROPERTY_CONFIG \u003d loadResource(","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"-"},"content":"            StandaloneConfigJsonParserTest.class,","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \"StandaloneConfigJsonParserTest/standaloneConfig_unknownPropertyInJson.json\");","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Path STANDALONE_CONFIG_FULL \u003d loadResource(","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"            StandaloneConfigJsonParserTest.class,","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \"StandaloneConfigJsonParserTest/standaloneConfig_full.json\");","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Path STANDALONE_CONFIG_EMPTY_TEXT_FILE \u003d loadResource(","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"            StandaloneConfigJsonParserTest.class,","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \"StandaloneConfigJsonParserTest/standaloneConfig_emptyText.json\");","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Path STANDALONE_CONFIG_EMPTY_JSON_FILE \u003d loadResource(","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"            StandaloneConfigJsonParserTest.class,","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \"StandaloneConfigJsonParserTest/standaloneConfig_emptyJson.json\");","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final Path STANDALONE_CONFIG_GITHUBID_ONLY \u003d loadResource(","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"            StandaloneConfigJsonParserTest.class,","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \"StandaloneConfigJsonParserTest/standaloneConfig_githubId_only.json\");","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"yong24s"},"content":"    private static final String TEST_DUMMY_LOCATION \u003d \"https://github.com/reposense/RepoSense.git\";","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static RepoConfiguration expectedGithubIdOnlyRepoconfig;","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static RepoConfiguration expectedFullRepoConfig;","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @BeforeAll","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static void setUp() throws Exception {","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"yong24s"},"content":"        Author author \u003d new Author(\"yong24s\");","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"yong24s"},"content":"        author.setAuthorAliases(Arrays.asList(\"Yong Hao TENG\"));","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"yong24s"},"content":"        author.setIgnoreGlobList(Arrays.asList(\"**.css\", \"**.html\", \"**.jade\", \"**.js\"));","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"        expectedGithubIdOnlyRepoconfig \u003d new RepoConfiguration(new RepoLocation(TEST_DUMMY_LOCATION));","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedGithubIdOnlyRepoconfig.setFormats(FileTypeTest.NO_SPECIFIED_FORMATS);","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedGithubIdOnlyRepoconfig.setAuthorList(Arrays.asList(new Author(\"yong24s\")));","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedGithubIdOnlyRepoconfig.addAuthorEmailsToAuthorMapEntry(author, author.getEmails());","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"        expectedFullRepoConfig \u003d new RepoConfiguration(new RepoLocation(TEST_DUMMY_LOCATION));","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"        expectedFullRepoConfig.setFormats(FileType.convertFormatStringsToFileTypes(","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Arrays.asList(\"gradle\", \"jade\", \"java\", \"js\", \"md\", \"scss\", \"yml\")));","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedFullRepoConfig.setIgnoreCommitList(Arrays.asList(new CommitHash(","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \"7b96c563eb2d3612aa5275364333664a18f01491\")));","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"        expectedFullRepoConfig.setIgnoreGlobList(Arrays.asList(\"**.adoc\", \"collate**\"));","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"        expectedFullRepoConfig.setIgnoredAuthorsList(Arrays.asList(\"yong24s\"));","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"        expectedFullRepoConfig.setAuthorList(Arrays.asList(author));","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedFullRepoConfig.setAuthorDisplayName(author, \"Yong Hao\");","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedFullRepoConfig.addAuthorNamesToAuthorMapEntry(author, Arrays.asList(author.getGitId()));","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"        expectedFullRepoConfig.addAuthorNamesToAuthorMapEntry(author, author.getAuthorAliases());","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"        expectedFullRepoConfig.addAuthorEmailsToAuthorMapEntry(author, author.getEmails());","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"yong24s"},"content":"    @Test","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void standaloneConfig_parseEmptyTextFile_success() throws Exception {","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"yong24s"},"content":"        new StandaloneConfigJsonParser().parse(STANDALONE_CONFIG_EMPTY_TEXT_FILE);","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"yong24s"},"content":"    @Test","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void standaloneConfig_parseEmptyJsonFile_success() throws Exception {","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"yong24s"},"content":"        new StandaloneConfigJsonParser().parse(STANDALONE_CONFIG_EMPTY_JSON_FILE);","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"yong24s"},"content":"    @Test","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void standaloneConfig_ignoresUnknownProperty_success() throws Exception {","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"yong24s"},"content":"        new StandaloneConfigJsonParser().parse(STANDALONE_UNKNOWN_PROPERTY_CONFIG);","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"yong24s"},"content":"    @Test","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void standaloneConfig_correctConfig_success() throws Exception {","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"yong24s"},"content":"        StandaloneConfig config \u003d new StandaloneConfigJsonParser().parse(STANDALONE_CONFIG_FULL);","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertSameConfig(expectedFullRepoConfig, config);","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"yong24s"},"content":"    @Test","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void standaloneConfig_githubIdOnlyConfig_success() throws Exception {","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"yong24s"},"content":"        StandaloneConfig config \u003d new StandaloneConfigJsonParser().parse(STANDALONE_CONFIG_GITHUBID_ONLY);","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertSameConfig(expectedGithubIdOnlyRepoconfig, config);","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void standaloneConfig_malformedJsonFile_throwsJsonSyntaxException() {","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(JsonSyntaxException.class, () -\u003e new StandaloneConfigJsonParser()","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .parse(STANDALONE_MALFORMED_CONFIG));","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"yong24s"},"content":"    private void assertSameConfig(RepoConfiguration expectedRepoConfig, StandaloneConfig actualStandaloneConfig)","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throws Exception {","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"-"},"content":"        RepoConfiguration actualRepoConfig \u003d new RepoConfiguration(new RepoLocation(TEST_DUMMY_LOCATION));","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"yong24s"},"content":"        actualRepoConfig.update(actualStandaloneConfig);","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"yong24s"},"content":"        TestUtil.compareRepoConfig(expectedRepoConfig, actualRepoConfig);","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"yong24s"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yong24s":58,"-":59}},{"path":"src/test/java/reposense/template/GitTestTemplate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenepeh"},"content":"package reposense.template;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.File;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.ZoneId;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"yamidark"},"content":"import java.util.Arrays;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"yamidark"},"content":"import java.util.Collections;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Iterator;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.function.Supplier;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.AfterEach;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeAll;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"yamidark"},"content":"import reposense.authorship.FileInfoAnalyzer;","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"yamidark"},"content":"import reposense.authorship.FileInfoExtractor;","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"yamidark"},"content":"import reposense.authorship.model.FileInfo;","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"yamidark"},"content":"import reposense.authorship.model.FileResult;","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"yamidark"},"content":"import reposense.authorship.model.LineInfo;","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"eugenepeh"},"content":"import reposense.git.GitCheckout;","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.git.GitShow;","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.git.exception.CommitNotFoundException;","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"yamidark"},"content":"import reposense.model.Author;","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"-"},"content":"import reposense.model.FileTypeTest;","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"yamidark"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"import reposense.util.TestRepoCloner;","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Contains templates for git testing.","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class GitTestTemplate {","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"yong24s"},"content":"    protected static final String TEST_REPO_GIT_LOCATION \u003d \"https://github.com/reposense/testrepo-Alpha.git\";","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"    protected static final String IGNORE_REVS_FILE_NAME \u003d \".git-blame-ignore-revs\";","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"    protected static final String TEST_REPO_BLAME_WITH_PREVIOUS_AUTHORS_BRANCH \u003d \"1565-find-previous-authors\";","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"yong24s"},"content":"    protected static final String FIRST_COMMIT_HASH \u003d \"7d7584f\";","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected static final String ROOT_COMMIT_HASH \u003d \"fd425072e12004b71d733a58d819d845509f8db3\";","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"yong24s"},"content":"    protected static final String TEST_COMMIT_HASH \u003d \"2fb6b9b\";","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected static final String TEST_COMMIT_HASH_LONG \u003d \"2fb6b9b2dd9fa40bf0f9815da2cb0ae8731436c7\";","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected static final String TEST_COMMIT_HASH_PARENT \u003d \"c5a6dc774e22099cd9ddeb0faff1e75f9cf4f151\";","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"yong24s"},"content":"    protected static final String MAIN_AUTHOR_NAME \u003d \"harryggg\";","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"yong24s"},"content":"    protected static final String FAKE_AUTHOR_NAME \u003d \"fakeAuthor\";","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected static final String UNCONVENTIONAL_AUTHOR_NAME \u003d \"-unconventional_author-\";","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected static final String WHITESPACE_AUTHOR_NAME \u003d \"whitespace author\";","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected static final String IGNORED_AUTHOR_NAME \u003d \"FH-30\";","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"yamidark"},"content":"    protected static final String EUGENE_AUTHOR_NAME \u003d \"eugenepeh\";","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected static final String YONG_AUTHOR_NAME \u003d \"Yong Hao TENG\";","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"    protected static final String MINGYI_AUTHOR_NAME \u003d \"myteo\";","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"jamessspanggg"},"content":"    protected static final String JAMES_AUTHOR_NAME \u003d \"jamessspanggg\";","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"jamessspanggg"},"content":"    protected static final String JAMES_ALTERNATIVE_AUTHOR_NAME \u003d \"James Pang\";","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"    protected static final String JINYAO_AUTHOR_NAME \u003d \"jylee-git\";","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"    protected static final String CHENGYU_AUTHOR_NAME \u003d \"HCY123902\";","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"    protected static final String LATEST_COMMIT_HASH \u003d \"abbd5888d5cd4e411c6a8e58e661b0eafdae1335\";","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"    protected static final String LATEST_COMMIT_HASH_PARENT \u003d \"f768b9b1d9d1478f8ac8cf3b4c7f868479edc07a\";","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"    protected static final String EMPTY_TREE_HASH \u003d \"4b825dc642cb6eb9a060e54bf8d69288fbee4904\";","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"    protected static final String EUGENE_AUTHOR_README_FILE_COMMIT_07052018_STRING \u003d","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"yamidark"},"content":"            \"2d87a431fcbb8f73a731b6df0fcbee962c85c250\";","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"    protected static final CommitHash EUGENE_AUTHOR_README_FILE_COMMIT_07052018 \u003d","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"            new CommitHash(EUGENE_AUTHOR_README_FILE_COMMIT_07052018_STRING);","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"    protected static final String FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING \u003d","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"yamidark"},"content":"            \"768015345e70f06add2a8b7d1f901dc07bf70582\";","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"    protected static final CommitHash FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018 \u003d","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"            new CommitHash(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING);","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"    protected static final String MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018_STRING \u003d","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"yamidark"},"content":"            \"8d0ac2ee20f04dce8df0591caed460bffacb65a4\";","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"    protected static final CommitHash MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018 \u003d","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"            new CommitHash(MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018_STRING);","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"    protected static final String AUTHOR_TO_IGNORE_BLAME_TEST_FILE_COMMIT_07082021_STRING \u003d","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"            \"1d29339e7d16eb5b2bc8fb542e08acedd3d4b0eb\";","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"    protected static final CommitHash AUTHOR_TO_IGNORE_BLAME_TEST_FILE_COMMIT_07082021 \u003d","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"            new CommitHash(AUTHOR_TO_IGNORE_BLAME_TEST_FILE_COMMIT_07082021_STRING);","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"    protected static final String FAKE_AUTHOR_BLAME_RANGED_COMMIT_ONE_06022018_STRING \u003d","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"            \"7d7584fc204922cc5ff3bd5ca073cad6bed2c46a\";","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"    protected static final String FAKE_AUTHOR_BLAME_RANGED_COMMIT_TWO_06022018_STRING \u003d","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"            \"8d0ac2ee20f04dce8df0591caed460bffacb65a4\";","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"    protected static final String FAKE_AUTHOR_BLAME_RANGED_COMMIT_THREE_07022018_STRING \u003d","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"            \"8e4ca1da5d413e9ab84a1e8d1474918afa97f7a1\";","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"    protected static final String FAKE_AUTHOR_BLAME_RANGED_COMMIT_FOUR_08022018_STRING \u003d","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"            \"768015345e70f06add2a8b7d1f901dc07bf70582\";","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"    protected static final List\u003cCommitHash\u003e FAKE_AUTHOR_BLAME_RANGED_COMMIT_LIST_09022018 \u003d Arrays.asList(","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"            new CommitHash(FAKE_AUTHOR_BLAME_RANGED_COMMIT_ONE_06022018_STRING),","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"            new CommitHash(FAKE_AUTHOR_BLAME_RANGED_COMMIT_TWO_06022018_STRING),","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"            new CommitHash(FAKE_AUTHOR_BLAME_RANGED_COMMIT_THREE_07022018_STRING),","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"            new CommitHash(FAKE_AUTHOR_BLAME_RANGED_COMMIT_FOUR_08022018_STRING));","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"-"},"content":"    protected static final List\u003cCommitHash\u003e AUTHOR_TO_IGNORE_BLAME_COMMIT_LIST_07082021 \u003d Collections.singletonList(","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"            new CommitHash(AUTHOR_TO_IGNORE_BLAME_TEST_FILE_COMMIT_07082021_STRING)","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"-"},"content":"    );","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"yamidark"},"content":"    protected static final String NONEXISTENT_COMMIT_HASH \u003d \"nonExistentCommitHash\";","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"-"},"content":"    protected static final ZoneId TIME_ZONE_ID \u003d ZoneId.of(\"Asia/Singapore\");","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"    protected static final Author MAIN_AUTHOR \u003d new Author(MAIN_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"    protected static final Author FAKE_AUTHOR \u003d new Author(FAKE_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"-"},"content":"    protected static final Author UNCONVENTIONAL_AUTHOR \u003d new Author(UNCONVENTIONAL_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"    protected static final Author WHITESPACE_AUTHOR \u003d new Author(WHITESPACE_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"    protected static ThreadLocal\u003cRepoConfiguration\u003e configs \u003d ThreadLocal.withInitial(() -\u003e {","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"-"},"content":"        try {","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return newRepoConfiguration();","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"        } catch (Exception e) {","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"    });","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private static final Supplier\u003cString\u003e EXTRA_OUTPUT_FOLDER_NAME_SUPPLIER \u003d () -\u003e","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"-"},"content":"            String.valueOf(Thread.currentThread().getId());","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private FileInfoExtractor fileInfoExtractor \u003d new FileInfoExtractor();","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private FileInfoAnalyzer fileInfoAnalyzer \u003d new FileInfoAnalyzer();","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @BeforeEach","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void before() throws Exception {","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"-"},"content":"        RepoConfiguration config \u003d newRepoConfiguration();","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"yamidark"},"content":"        config.setAuthorList(Collections.singletonList(getAlphaAllAliasAuthor()));","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"-"},"content":"        config.setFormats(FileTypeTest.DEFAULT_TEST_FORMATS);","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"-"},"content":"        config.setZoneId(TIME_ZONE_ID);","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"jamessspanggg"},"content":"        config.setIsLastModifiedDateIncluded(false);","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"-"},"content":"        configs.set(config);","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @BeforeAll","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static void beforeClass() throws Exception {","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"-"},"content":"        RepoConfiguration config \u003d newRepoConfiguration();","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"-"},"content":"        config.setZoneId(TIME_ZONE_ID);","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"-"},"content":"        configs.set(config);","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(config, EXTRA_OUTPUT_FOLDER_NAME_SUPPLIER.get());","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @AfterEach","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void after() {","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(configs.get().getRepoRoot(), \"master\");","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private static RepoConfiguration newRepoConfiguration() throws Exception {","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return new RepoConfiguration(new RepoLocation(TEST_REPO_GIT_LOCATION), \"master\",","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"-"},"content":"                EXTRA_OUTPUT_FOLDER_NAME_SUPPLIER.get());","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Generates the .git-blame-ignore-revs file containing {@link CommitHash}es","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * from {@code toIgnore} for the test repo.","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public List\u003cCommitHash\u003e createTestIgnoreRevsFile(List\u003cCommitHash\u003e toIgnore) {","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String repoRoot \u003d configs.get().getRepoRoot();","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"-"},"content":"        List\u003cCommitHash\u003e expandedIgnoreCommitList \u003d toIgnore.stream()","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"-"},"content":"                .map(CommitHash::toString)","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"-"},"content":"                .map(commitHash -\u003e {","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"-"},"content":"                    try {","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"-"},"content":"                        return GitShow.getExpandedCommitHash(repoRoot, commitHash);","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"-"},"content":"                    } catch (CommitNotFoundException e) {","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"-"},"content":"                        return new CommitHash(commitHash);","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    }","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"-"},"content":"                })","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"-"},"content":"        String fileLocation \u003d repoRoot + IGNORE_REVS_FILE_NAME;","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"-"},"content":"        FileUtil.writeIgnoreRevsFile(fileLocation, expandedIgnoreCommitList);","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return expandedIgnoreCommitList;","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void removeTestIgnoreRevsFile() {","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"-"},"content":"        String fileLocation \u003d configs.get().getRepoRoot() + IGNORE_REVS_FILE_NAME;","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"-"},"content":"        new File(fileLocation).delete();","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * For each line in {@link FileResult}, assert that it is attributed to the expected author provided by","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * {@code expectedLineAuthors}.","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void assertFileAnalysisCorrectness(FileResult fileResult, List\u003cAuthor\u003e expectedLineAuthors) {","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"-"},"content":"        List\u003cLineInfo\u003e lines \u003d fileResult.getLines();","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertEquals(expectedLineAuthors.size(), lines.size());","isFullCredit":true},{"lineNumber":179,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Iterator\u003cAuthor\u003e lineAuthorsItr \u003d expectedLineAuthors.iterator();","isFullCredit":true},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Iterator\u003cLineInfo\u003e linesItr \u003d lines.iterator();","isFullCredit":true},{"lineNumber":182,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":183,"author":{"gitId":"-"},"content":"        while (linesItr.hasNext() \u0026\u0026 lineAuthorsItr.hasNext()) {","isFullCredit":true},{"lineNumber":184,"author":{"gitId":"-"},"content":"            assertEquals(lineAuthorsItr.next(), linesItr.next().getAuthor());","isFullCredit":true},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":187,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public FileResult getFileResult(String relativePath) {","isFullCredit":true},{"lineNumber":189,"author":{"gitId":"-"},"content":"        FileInfo fileInfo \u003d fileInfoExtractor.generateFileInfo(configs.get(), relativePath);","isFullCredit":true},{"lineNumber":190,"author":{"gitId":"-"},"content":"        return fileInfoAnalyzer.analyzeTextFile(configs.get(), fileInfo);","isFullCredit":true},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":192,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":193,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * Returns a {@link Author} that has git id and aliases of all authors in testrepo-Alpha, so that no commits","isFullCredit":true},{"lineNumber":195,"author":{"gitId":"yamidark"},"content":"     * will be filtered out in the `git log` command.","isFullCredit":true},{"lineNumber":196,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":197,"author":{"gitId":"yamidark"},"content":"    protected Author getAlphaAllAliasAuthor() {","isFullCredit":true},{"lineNumber":198,"author":{"gitId":"yamidark"},"content":"        Author author \u003d new Author(MAIN_AUTHOR_NAME);","isFullCredit":true},{"lineNumber":199,"author":{"gitId":"-"},"content":"        author.setAuthorAliases(Arrays.asList(FAKE_AUTHOR_NAME, EUGENE_AUTHOR_NAME, YONG_AUTHOR_NAME));","isFullCredit":true},{"lineNumber":200,"author":{"gitId":"yamidark"},"content":"        return author;","isFullCredit":true},{"lineNumber":201,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":3,"yamidark":25,"yong24s":5,"eugenepeh":3,"-":166}},{"path":"src/test/java/reposense/util/AssertUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenepeh"},"content":"package reposense.util;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"eugenepeh"},"content":"/**","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"eugenepeh"},"content":" * A set of assertion methods useful for writing tests.","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"eugenepeh"},"content":" */","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"eugenepeh"},"content":"public class AssertUtil {","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"eugenepeh"},"content":"    /**","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"eugenepeh"},"content":"     * Asserts that the {@code callable} throws the {@code expected} Exception.","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"eugenepeh"},"content":"     */","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"eugenepeh"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expected, VoidCallable callable) {","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"eugenepeh"},"content":"        assertThrows(expected, null, callable);","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"eugenepeh"},"content":"    /**","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"eugenepeh"},"content":"     * Asserts that the {@code callable} throws the {@code expectedException} and the {@code expectedMessage}.","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"eugenepeh"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"eugenepeh"},"content":"     * {@code assertThrows(Class\u003c? extends Throwable\u003e, VoidCallable)} instead.","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * {@see assertThrows(Class\u003c? extends Throwable\u003e, VoidCallable)}","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws AssertionFailedError if the {@code expectedException} is not thrown or {@code expectedMessage}","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * is not correct after calling {@code callable}.","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"eugenepeh"},"content":"     */","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"eugenepeh"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedException, String expectedMessage,","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"eugenepeh"},"content":"            VoidCallable callable) {","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"eugenepeh"},"content":"        try {","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"eugenepeh"},"content":"            callable.call();","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"eugenepeh"},"content":"        } catch (Throwable actualException) {","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"eugenepeh"},"content":"            String errorMessage;","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"eugenepeh"},"content":"            if (!actualException.getClass().isAssignableFrom(expectedException)) {","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"eugenepeh"},"content":"                errorMessage \u003d String.format(\"Expected exception thrown: %s, actual: %s\",","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"eugenepeh"},"content":"                        expectedException.getName(), actualException.getClass().getName());","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"eugenepeh"},"content":"            } else if (expectedMessage !\u003d null \u0026\u0026 !expectedMessage.equals(actualException.getMessage())) {","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"eugenepeh"},"content":"                errorMessage \u003d String.format(","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"eugenepeh"},"content":"                        \"Expected message thrown: %s, actual: %s\", expectedMessage, actualException.getMessage());","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"eugenepeh"},"content":"            } else {","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"eugenepeh"},"content":"                return;","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"eugenepeh"},"content":"            }","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new AssertionError(errorMessage);","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"eugenepeh"},"content":"        }","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"-"},"content":"        throw new AssertionError(String.format(","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"eugenepeh"},"content":"                \"Expected %s to be thrown, but nothing was thrown.\", expectedException.getName()));","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"eugenepeh"},"content":"    /**","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"eugenepeh"},"content":"     * Represents a function which does not return anything and may throw an exception.","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"eugenepeh"},"content":"     */","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"eugenepeh"},"content":"    @FunctionalInterface","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"eugenepeh"},"content":"    public interface VoidCallable {","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"eugenepeh"},"content":"        void call() throws Exception;","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true}],"authorContributionMap":{"eugenepeh":49,"-":6}},{"path":"src/test/java/reposense/util/StringsUtilTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenepeh"},"content":"package reposense.util;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static reposense.util.TestUtil.loadResource;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"eugenepeh"},"content":"import java.nio.file.Files;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"eugenepeh"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"eugenepeh"},"content":"import java.nio.file.Paths;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"eugenepeh"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assumptions;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.system.CommandRunner;","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"eugenepeh"},"content":"public class StringsUtilTest {","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path STRINGS_UTIL_TEST_DIRECTORY \u003d loadResource(FileUtilTest.class, \"StringsUtilTest\");","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"eugenepeh"},"content":"    @Test","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void filterText_standardInput_success() throws Exception {","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"eugenepeh"},"content":"        Path gitBlameStandardOutputFile \u003d","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"eugenepeh"},"content":"                Paths.get(STRINGS_UTIL_TEST_DIRECTORY.toString(), \"standardBlameOutput.txt\");","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"eugenepeh"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(gitBlameStandardOutputFile);","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"eugenepeh"},"content":"        String text \u003d String.join(\"\\n\", lines);","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"eugenepeh"},"content":"        String expected \u003d \"a79711ed676fd3a27af2f466be6d5b48177580e0 4 4\\n\"","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"eugenepeh"},"content":"                + \"author example\\n\";","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"eugenepeh"},"content":"        String filteredText \u003d StringsUtil.filterText(text, \"(^author .*)|(^[0-9a-f]{40} .*)\");","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expected, filteredText);","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"yamidark"},"content":"    @Test","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"yamidark"},"content":"    public void replaceSpecialSymbols_noSpecialSymbols_noChange() {","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"yamidark"},"content":"        String noSpecialSymbolString \u003d \"Just A Normal String\";","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"yamidark"},"content":"        String convertedString \u003d StringsUtil.replaceSpecialSymbols(noSpecialSymbolString, \".\");","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(noSpecialSymbolString, convertedString);","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"yamidark"},"content":"    @Test","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"yamidark"},"content":"    public void replaceSpecialSymbols_stringWithSpecialSymbolsToPeriod_success() {","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"yamidark"},"content":"        String noSpecialSymbolString \u003d \"($t^!ng W!th $pec!@l Symbols)\";","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"yamidark"},"content":"        String convertedString \u003d StringsUtil.replaceSpecialSymbols(noSpecialSymbolString, \".\");","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"yamidark"},"content":"        String expectedConvertedString \u003d \"..t..ng W.th .pec..l Symbols.\";","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedConvertedString, convertedString);","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void removeTrailingBackslash_stringWithMultipleTrailingBackslash_success() {","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String multipleTrailingBackslashString \u003d \"abc\\\\cde\\\\\\\\\\\\\";","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String expectedString \u003d \"abc\\\\cde\";","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String actualString \u003d StringsUtil.removeTrailingBackslash(multipleTrailingBackslashString);","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedString, actualString);","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void removeTrailingBackslash_stringWithNoTrailingBackslash_noChange() {","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String multipleTrailingBackslashString \u003d \"abc\\\\cde\";","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String actualString \u003d StringsUtil.removeTrailingBackslash(multipleTrailingBackslashString);","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(multipleTrailingBackslashString, actualString);","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void removeTrailingBackslash_emptyString_noChange() {","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String emptyString \u003d \"\";","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String actualString \u003d StringsUtil.removeTrailingBackslash(emptyString);","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(emptyString, actualString);","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void addQuotesForFilePath_specialBashCharacters_success() {","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Assumptions.assumeTrue(!SystemUtil.isWindows());","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // The characters being tested against are taken from this post: https://unix.stackexchange.com/a/357932","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String specialBashSymbols \u003d \"!\\\"#$\u0026\u0027()*,;\u003c\u003d\u003e?\\\\[]^`{| }\";","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String result \u003d CommandRunner.runCommand(Paths.get(\"./\"),","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"                \"echo \" + StringsUtil.addQuotesForFilePath(specialBashSymbols));","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // CommandRunner\u0027s output ends with an LF character which should be removed.","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"        result \u003d result.substring(0, result.length() - 1);","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(specialBashSymbols, result);","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true}],"authorContributionMap":{"yamidark":16,"eugenepeh":23,"-":52}},{"path":"src/test/java/reposense/util/TestUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenepeh"},"content":"package reposense.util;","isFullCredit":true},{"lineNumber":2,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.net.URISyntaxException;","isFullCredit":true},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.net.URL;","isFullCredit":true},{"lineNumber":5,"author":{"gitId":"eugenepeh"},"content":"import java.nio.file.Files;","isFullCredit":true},{"lineNumber":6,"author":{"gitId":"yamidark"},"content":"import java.nio.file.Path;","isFullCredit":true},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","isFullCredit":true},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","isFullCredit":true},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.time.ZoneId;","isFullCredit":true},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;","isFullCredit":true},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":true},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":true},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","isFullCredit":true},{"lineNumber":14,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","isFullCredit":true},{"lineNumber":16,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.git.GitLog;","isFullCredit":true},{"lineNumber":18,"author":{"gitId":"yong24s"},"content":"import reposense.model.Author;","isFullCredit":true},{"lineNumber":19,"author":{"gitId":"yong24s"},"content":"import reposense.model.RepoConfiguration;","isFullCredit":true},{"lineNumber":20,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","isFullCredit":true},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains testing related functionalities.","isFullCredit":true},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","isFullCredit":true},{"lineNumber":24,"author":{"gitId":"eugenepeh"},"content":"public class TestUtil {","isFullCredit":true},{"lineNumber":25,"author":{"gitId":"jamessspanggg"},"content":"    private static final int[] END_OF_DAY_TIME \u003d {23, 59, 59};","isFullCredit":true},{"lineNumber":26,"author":{"gitId":"jamessspanggg"},"content":"    private static final int[] START_OF_DAY_TIME \u003d {0, 0, 0};","isFullCredit":true},{"lineNumber":27,"author":{"gitId":"eugenepeh"},"content":"    private static final String MESSAGE_COMPARING_FILES \u003d \"Comparing files %s \u0026 %s\\n\";","isFullCredit":true},{"lineNumber":28,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":29,"author":{"gitId":"eugenepeh"},"content":"    private static final String MESSAGE_LINE_CONTENT_DIFFERENT \u003d \"Content different at line number %d:\\n\"","isFullCredit":true},{"lineNumber":30,"author":{"gitId":"eugenepeh"},"content":"            + \"\u003c\u003c %s\\n\"","isFullCredit":true},{"lineNumber":31,"author":{"gitId":"eugenepeh"},"content":"            + \"\u003e\u003e %s\\n\";","isFullCredit":true},{"lineNumber":32,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":33,"author":{"gitId":"eugenepeh"},"content":"    private static final String MESSAGE_LINES_LENGTH_DIFFERENT \u003d \"The files\u0027 lines count do not match.\";","isFullCredit":true},{"lineNumber":34,"author":{"gitId":"jamessspanggg"},"content":"    private static final String TAB_SPLITTER \u003d \"\\t\";","isFullCredit":true},{"lineNumber":35,"author":{"gitId":"jamessspanggg"},"content":"    private static final String MOVED_FILE_INDICATION \u003d \"\u003d\u003e \";","isFullCredit":true},{"lineNumber":36,"author":{"gitId":"jamessspanggg"},"content":"    private static final int STAT_FILE_PATH_INDEX \u003d 2;","isFullCredit":true},{"lineNumber":37,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":38,"author":{"gitId":"eugenepeh"},"content":"    /**","isFullCredit":true},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns true if the contents of the files at {@code expected} and {@code actual} are the same.","isFullCredit":true},{"lineNumber":40,"author":{"gitId":"eugenepeh"},"content":"     * Also prints out error message if the lines count are different,","isFullCredit":true},{"lineNumber":41,"author":{"gitId":"eugenepeh"},"content":"     * else prints out the first line of content difference (if any).","isFullCredit":true},{"lineNumber":42,"author":{"gitId":"eugenepeh"},"content":"     */","isFullCredit":true},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static boolean compareFileContents(Path expected, Path actual) throws Exception {","isFullCredit":true},{"lineNumber":44,"author":{"gitId":"eugenepeh"},"content":"        return compareFileContents(expected, actual, 1);","isFullCredit":true},{"lineNumber":45,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":46,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":47,"author":{"gitId":"eugenepeh"},"content":"    /**","isFullCredit":true},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns true if the contents of the files at {@code expected} and {@code actual} are the same.","isFullCredit":true},{"lineNumber":49,"author":{"gitId":"eugenepeh"},"content":"     * Also prints out error message if the lines count are different,","isFullCredit":true},{"lineNumber":50,"author":{"gitId":"eugenepeh"},"content":"     * else prints out maximum {@code maxTraceCounts} lines of content difference (if any).","isFullCredit":true},{"lineNumber":51,"author":{"gitId":"eugenepeh"},"content":"     */","isFullCredit":true},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static boolean compareFileContents(Path expected, Path actual, int maxTraceCounts) throws Exception {","isFullCredit":true},{"lineNumber":53,"author":{"gitId":"eugenepeh"},"content":"        int traceCounts \u003d 0;","isFullCredit":true},{"lineNumber":54,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":55,"author":{"gitId":"eugenepeh"},"content":"        System.out.println(String.format(MESSAGE_COMPARING_FILES, expected, actual));","isFullCredit":true},{"lineNumber":56,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":57,"author":{"gitId":"yamidark"},"content":"        String[] expectedContent \u003d new String(Files.readAllBytes(expected))","isFullCredit":true},{"lineNumber":58,"author":{"gitId":"eugenepeh"},"content":"                .replace(\"\\r\", \"\").split(\"\\n\");","isFullCredit":true},{"lineNumber":59,"author":{"gitId":"yamidark"},"content":"        String[] actualContent \u003d new String(Files.readAllBytes(actual))","isFullCredit":true},{"lineNumber":60,"author":{"gitId":"eugenepeh"},"content":"                .replace(\"\\r\", \"\").split(\"\\n\");","isFullCredit":true},{"lineNumber":61,"author":{"gitId":"eugenepeh"},"content":"","isFullCredit":true},{"lineNumber":62,"author":{"gitId":"eugenepeh"},"content":"        for (int i \u003d 0; i \u003c Math.min(expectedContent.length, actualContent.length); i++) {","isFullCredit":true},{"lineNumber":63,"author":{"gitId":"eugenepeh"},"content":"            if (!expectedContent[i].equals(actualContent[i])) {","isFullCredit":true},{"lineNumber":64,"author":{"gitId":"eugenepeh"},"content":"                System.out.println(","isFullCredit":true},{"lineNumber":65,"author":{"gitId":"eugenepeh"},"content":"                        String.format(MESSAGE_LINE_CONTENT_DIFFERENT, i + 1, expectedContent[i], actualContent[i]));","isFullCredit":true},{"lineNumber":66,"author":{"gitId":"eugenepeh"},"content":"                if (++traceCounts \u003e\u003d maxTraceCounts) {","isFullCredit":true},{"lineNumber":67,"author":{"gitId":"eugenepeh"},"content":"                    break;","isFullCredit":true},{"lineNumber":68,"author":{"gitId":"eugenepeh"},"content":"                }","isFullCredit":true},{"lineNumber":69,"author":{"gitId":"eugenepeh"},"content":"            }","isFullCredit":true},{"lineNumber":70,"author":{"gitId":"eugenepeh"},"content":"        }","isFullCredit":true},{"lineNumber":71,"author":{"gitId":"eugenepeh"},"content":"        if (expectedContent.length !\u003d actualContent.length) {","isFullCredit":true},{"lineNumber":72,"author":{"gitId":"eugenepeh"},"content":"            System.out.println(MESSAGE_LINES_LENGTH_DIFFERENT);","isFullCredit":true},{"lineNumber":73,"author":{"gitId":"eugenepeh"},"content":"            return false;","isFullCredit":true},{"lineNumber":74,"author":{"gitId":"eugenepeh"},"content":"        } else if (traceCounts \u003e\u003d maxTraceCounts) {","isFullCredit":true},{"lineNumber":75,"author":{"gitId":"eugenepeh"},"content":"            return false;","isFullCredit":true},{"lineNumber":76,"author":{"gitId":"eugenepeh"},"content":"        }","isFullCredit":true},{"lineNumber":77,"author":{"gitId":"eugenepeh"},"content":"        return true;","isFullCredit":true},{"lineNumber":78,"author":{"gitId":"eugenepeh"},"content":"    }","isFullCredit":true},{"lineNumber":79,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns true if {@code expected} directory has all files with same content as {@code actual} directory.","isFullCredit":true},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static boolean compareDirectories(Path expected, Path actual) throws Exception {","isFullCredit":true},{"lineNumber":84,"author":{"gitId":"-"},"content":"        List\u003cPath\u003e expectedPaths \u003d Files.walk(expected)","isFullCredit":true},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .sorted()","isFullCredit":true},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","isFullCredit":true},{"lineNumber":87,"author":{"gitId":"-"},"content":"        List\u003cPath\u003e actualPaths \u003d Files.walk(actual)","isFullCredit":true},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .sorted()","isFullCredit":true},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","isFullCredit":true},{"lineNumber":90,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (expectedPaths.size() !\u003d actualPaths.size()) {","isFullCredit":true},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":true},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":94,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":95,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedPaths.size(); i++) {","isFullCredit":true},{"lineNumber":96,"author":{"gitId":"-"},"content":"            if (!(Files.isDirectory(expectedPaths.get(i)) || Files.isDirectory(actualPaths.get(i)))","isFullCredit":true},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    \u0026\u0026 !TestUtil.compareFileContents(expectedPaths.get(i), actualPaths.get(i))) {","isFullCredit":true},{"lineNumber":98,"author":{"gitId":"-"},"content":"                return false;","isFullCredit":true},{"lineNumber":99,"author":{"gitId":"-"},"content":"            }","isFullCredit":true},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return true;","isFullCredit":true},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":103,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":104,"author":{"gitId":"yong24s"},"content":"    /**","isFullCredit":true},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Creates and returns a {@link LocalDateTime} object with the specified {@code year}, {@code month}, {@code day}","isFullCredit":true},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * and {@code time}.","isFullCredit":true},{"lineNumber":107,"author":{"gitId":"yong24s"},"content":"     */","isFullCredit":true},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static LocalDateTime getDate(int year, int month, int date, int[] time) {","isFullCredit":true},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return LocalDateTime.of(year, month, date, time[0], time[1], time[2], 0);","isFullCredit":true},{"lineNumber":110,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":111,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":112,"author":{"gitId":"jamessspanggg"},"content":"    /**","isFullCredit":true},{"lineNumber":113,"author":{"gitId":"jamessspanggg"},"content":"     * Wrapper for {@code getDate} method to get since date with time 00:00:00","isFullCredit":true},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * from the parameters {@code year}, {@code month}, {@code date}.","isFullCredit":true},{"lineNumber":115,"author":{"gitId":"jamessspanggg"},"content":"     */","isFullCredit":true},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static LocalDateTime getSinceDate(int year, int month, int date) {","isFullCredit":true},{"lineNumber":117,"author":{"gitId":"jamessspanggg"},"content":"        return getDate(year, month, date, START_OF_DAY_TIME);","isFullCredit":true},{"lineNumber":118,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":119,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":120,"author":{"gitId":"jamessspanggg"},"content":"    /**","isFullCredit":true},{"lineNumber":121,"author":{"gitId":"jamessspanggg"},"content":"     * Wrapper for {@code getDate} method to get until date with time 23:59:59","isFullCredit":true},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * from the parameters {@code year}, {@code month}, {@code date}.","isFullCredit":true},{"lineNumber":123,"author":{"gitId":"jamessspanggg"},"content":"     */","isFullCredit":true},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static LocalDateTime getUntilDate(int year, int month, int date) {","isFullCredit":true},{"lineNumber":125,"author":{"gitId":"jamessspanggg"},"content":"        return getDate(year, month, date, END_OF_DAY_TIME);","isFullCredit":true},{"lineNumber":126,"author":{"gitId":"jamessspanggg"},"content":"    }","isFullCredit":true},{"lineNumber":127,"author":{"gitId":"jamessspanggg"},"content":"","isFullCredit":true},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Returns a {@link ZoneId} object for the specified {@code timezone}.","isFullCredit":true},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static ZoneId getZoneId(String timezone) {","isFullCredit":true},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return ZoneId.of(timezone);","isFullCredit":true},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":134,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":135,"author":{"gitId":"yong24s"},"content":"    /**","isFullCredit":true},{"lineNumber":136,"author":{"gitId":"yong24s"},"content":"     * Compares attributes of {@code expectedRepoConfig} and {@code actualRepoConfig}.","isFullCredit":true},{"lineNumber":137,"author":{"gitId":"yong24s"},"content":"     *","isFullCredit":true},{"lineNumber":138,"author":{"gitId":"yong24s"},"content":"     * @throws AssertionError if any attributes fail equality check.","isFullCredit":true},{"lineNumber":139,"author":{"gitId":"yong24s"},"content":"     */","isFullCredit":true},{"lineNumber":140,"author":{"gitId":"yong24s"},"content":"    public static void compareRepoConfig(RepoConfiguration expectedRepoConfig, RepoConfiguration actualRepoConfig) {","isFullCredit":true},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedRepoConfig, actualRepoConfig);","isFullCredit":true},{"lineNumber":142,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":143,"author":{"gitId":"yong24s"},"content":"        for (int i \u003d 0; i \u003c expectedRepoConfig.getAuthorList().size(); i++) {","isFullCredit":true},{"lineNumber":144,"author":{"gitId":"yong24s"},"content":"            compareAuthor(expectedRepoConfig.getAuthorList().get(i), actualRepoConfig.getAuthorList().get(i));","isFullCredit":true},{"lineNumber":145,"author":{"gitId":"yong24s"},"content":"        }","isFullCredit":true},{"lineNumber":146,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":147,"author":{"gitId":"yong24s"},"content":"","isFullCredit":true},{"lineNumber":148,"author":{"gitId":"yong24s"},"content":"    /**","isFullCredit":true},{"lineNumber":149,"author":{"gitId":"yong24s"},"content":"     * Compares attributes of {@code expectedAuthor} and {@code actualAuthor}, with exception of it\u0027s display name.","isFullCredit":true},{"lineNumber":150,"author":{"gitId":"yong24s"},"content":"     *","isFullCredit":true},{"lineNumber":151,"author":{"gitId":"yong24s"},"content":"     * The display name is not compared as it varies with object construction.","isFullCredit":true},{"lineNumber":152,"author":{"gitId":"yong24s"},"content":"     * It is a transient value and it is not needed for object matching.","isFullCredit":true},{"lineNumber":153,"author":{"gitId":"yong24s"},"content":"     *","isFullCredit":true},{"lineNumber":154,"author":{"gitId":"yong24s"},"content":"     * @throws AssertionError if any attributes fail equality check.","isFullCredit":true},{"lineNumber":155,"author":{"gitId":"yong24s"},"content":"     */","isFullCredit":true},{"lineNumber":156,"author":{"gitId":"yong24s"},"content":"    public static void compareAuthor(Author expectedAuthor, Author actualAuthor) {","isFullCredit":true},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedAuthor.getGitId(), actualAuthor.getGitId());","isFullCredit":true},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedAuthor.getIgnoreGlobList(), actualAuthor.getIgnoreGlobList());","isFullCredit":true},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedAuthor.getAuthorAliases(), actualAuthor.getAuthorAliases());","isFullCredit":true},{"lineNumber":160,"author":{"gitId":"yong24s"},"content":"    }","isFullCredit":true},{"lineNumber":161,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":162,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Returns true if the {@code expectedNumberCommits} is equal to the expected number of commits captured in","isFullCredit":true},{"lineNumber":164,"author":{"gitId":"yamidark"},"content":"     * {@code gitLogResult}.","isFullCredit":true},{"lineNumber":165,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":166,"author":{"gitId":"yamidark"},"content":"    public static boolean compareNumberExpectedCommitsToGitLogLines(int expectedNumberCommits, String gitLogResult) {","isFullCredit":true},{"lineNumber":167,"author":{"gitId":"yamidark"},"content":"        // if git log result is empty, then there are no commits","isFullCredit":true},{"lineNumber":168,"author":{"gitId":"yamidark"},"content":"        if (gitLogResult.isEmpty()) {","isFullCredit":true},{"lineNumber":169,"author":{"gitId":"yamidark"},"content":"            return expectedNumberCommits \u003d\u003d 0;","isFullCredit":true},{"lineNumber":170,"author":{"gitId":"yamidark"},"content":"        }","isFullCredit":true},{"lineNumber":171,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // (actualSplitGitLogResilt - 1) as the 1st token is always empty.","isFullCredit":true},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return expectedNumberCommits \u003d\u003d (gitLogResult.split(GitLog.COMMIT_INFO_DELIMITER).length - 1);","isFullCredit":true},{"lineNumber":174,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":175,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * Returns true if the {@code expectedNumberFilesChanged} is equal to the actual number of files changed in","isFullCredit":true},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * {@code gitLogResult}.","isFullCredit":true},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public static boolean compareNumberFilesChanged(int expectedNumberFilesChanged, String gitLogResult) {","isFullCredit":true},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // if git log result is empty, then there are no files changed","isFullCredit":true},{"lineNumber":182,"author":{"gitId":"-"},"content":"        if (gitLogResult.isEmpty()) {","isFullCredit":true},{"lineNumber":183,"author":{"gitId":"-"},"content":"            return expectedNumberFilesChanged \u003d\u003d 0;","isFullCredit":true},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":185,"author":{"gitId":"-"},"content":"        String[] changesLogged \u003d gitLogResult.split(GitLog.COMMIT_INFO_DELIMITER);","isFullCredit":true},{"lineNumber":186,"author":{"gitId":"-"},"content":"        HashSet\u003cString\u003e filesChanged \u003d new HashSet\u003c\u003e();","isFullCredit":true},{"lineNumber":187,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // start from index 1 as index 0 is always empty.","isFullCredit":true},{"lineNumber":189,"author":{"gitId":"-"},"content":"        for (int i \u003d 1; i \u003c changesLogged.length; i++) {","isFullCredit":true},{"lineNumber":190,"author":{"gitId":"-"},"content":"            filesChanged.addAll(getFilesChangedInCommit(changesLogged[i]));","isFullCredit":true},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":192,"author":{"gitId":"-"},"content":"        return filesChanged.size() \u003d\u003d expectedNumberFilesChanged;","isFullCredit":true},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":194,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":195,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * Returns the {@link Set} of files changed in the commit {@code rawCommitInfo}.","isFullCredit":true},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":198,"author":{"gitId":"-"},"content":"    private static Set\u003cString\u003e getFilesChangedInCommit(String rawCommitInfo) {","isFullCredit":true},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e filesChanged \u003d new HashSet\u003c\u003e();","isFullCredit":true},{"lineNumber":200,"author":{"gitId":"-"},"content":"        String[] commitInfo \u003d rawCommitInfo.replaceAll(\"\\n+$\", \"\").split(\"\\n\");","isFullCredit":true},{"lineNumber":201,"author":{"gitId":"-"},"content":"        int fileChangedNum \u003d Integer.parseInt(commitInfo[commitInfo.length - 1].trim().split(\" \")[0]);","isFullCredit":true},{"lineNumber":202,"author":{"gitId":"-"},"content":"        for (int fileNum \u003d 0; fileNum \u003c fileChangedNum; fileNum++) {","isFullCredit":true},{"lineNumber":203,"author":{"gitId":"-"},"content":"            filesChanged.add(getFileChanged(commitInfo[commitInfo.length - 2 - fileNum]));","isFullCredit":true},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":205,"author":{"gitId":"-"},"content":"        return filesChanged;","isFullCredit":true},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":207,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":208,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * Returns the file changed given a {@code rawFileChangedString}.","isFullCredit":true},{"lineNumber":210,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":211,"author":{"gitId":"-"},"content":"    private static String getFileChanged(String rawFileChangedString) {","isFullCredit":true},{"lineNumber":212,"author":{"gitId":"jamessspanggg"},"content":"        String fileChanged \u003d rawFileChangedString.split(TAB_SPLITTER)[STAT_FILE_PATH_INDEX].trim();","isFullCredit":true},{"lineNumber":213,"author":{"gitId":"jamessspanggg"},"content":"        if (fileChanged.contains(MOVED_FILE_INDICATION)) {","isFullCredit":true},{"lineNumber":214,"author":{"gitId":"jamessspanggg"},"content":"            fileChanged \u003d fileChanged.substring(fileChanged.indexOf(MOVED_FILE_INDICATION)","isFullCredit":true},{"lineNumber":215,"author":{"gitId":"jamessspanggg"},"content":"                    + MOVED_FILE_INDICATION.length());","isFullCredit":true},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":217,"author":{"gitId":"-"},"content":"        return fileChanged;","isFullCredit":true},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":219,"author":{"gitId":"-"},"content":"","isFullCredit":true},{"lineNumber":220,"author":{"gitId":"yamidark"},"content":"    /**","isFullCredit":true},{"lineNumber":221,"author":{"gitId":"yamidark"},"content":"     * Returns true if the test environment is on Windows OS.","isFullCredit":true},{"lineNumber":222,"author":{"gitId":"yamidark"},"content":"     */","isFullCredit":true},{"lineNumber":223,"author":{"gitId":"yamidark"},"content":"    public static boolean isWindows() {","isFullCredit":true},{"lineNumber":224,"author":{"gitId":"yamidark"},"content":"        return System.getProperty(\"os.name\").toLowerCase().contains(\"win\");","isFullCredit":true},{"lineNumber":225,"author":{"gitId":"yamidark"},"content":"    }","isFullCredit":true},{"lineNumber":226,"author":{"gitId":"yamidark"},"content":"","isFullCredit":true},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","isFullCredit":true},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Returns the {@link Path} to a resource given by {@code pathToResource} string, using {@code classForLoading}.","isFullCredit":true},{"lineNumber":229,"author":{"gitId":"-"},"content":"     */","isFullCredit":true},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public static Path loadResource(Class\u003c?\u003e classForLoading, String pathToResource) {","isFullCredit":true},{"lineNumber":231,"author":{"gitId":"-"},"content":"        ClassLoader classLoader \u003d classForLoading.getClassLoader();","isFullCredit":true},{"lineNumber":232,"author":{"gitId":"-"},"content":"        URL url \u003d classLoader.getResource(pathToResource);","isFullCredit":true},{"lineNumber":233,"author":{"gitId":"-"},"content":"        Path path \u003d null;","isFullCredit":true},{"lineNumber":234,"author":{"gitId":"-"},"content":"        try {","isFullCredit":true},{"lineNumber":235,"author":{"gitId":"-"},"content":"            path \u003d Paths.get(url.toURI());","isFullCredit":true},{"lineNumber":236,"author":{"gitId":"-"},"content":"        } catch (URISyntaxException e) {","isFullCredit":true},{"lineNumber":237,"author":{"gitId":"-"},"content":"            System.out.println(\"URL format does not follow required standard\");","isFullCredit":true},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","isFullCredit":true},{"lineNumber":239,"author":{"gitId":"-"},"content":"        return path;","isFullCredit":true},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","isFullCredit":true},{"lineNumber":241,"author":{"gitId":"eugenepeh"},"content":"}","isFullCredit":true}],"authorContributionMap":{"jamessspanggg":21,"yamidark":22,"yong24s":31,"eugenepeh":49,"-":118}}]
